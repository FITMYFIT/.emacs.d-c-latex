;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__PETSCKSP_H" variable (:constant-flag t) nil [109 121])
            ("petscpc.h" include (:system-flag t) nil [122 142])
            ("KSPInitializePackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [193 198]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [157 199])
            ("KSP" type
               (:typedef ("_p_KSP" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [764 795])
            ("KSPType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [964 992])
            ("KSPRICHARDSON" variable (:constant-flag t) nil [1001 1014])
            ("KSPCHEBYSHEV" variable (:constant-flag t) nil [1036 1048])
            ("KSPCG" variable (:constant-flag t) nil [1070 1075])
            ("KSPGROPPCG" variable (:constant-flag t) nil [1097 1107])
            ("KSPPIPECG" variable (:constant-flag t) nil [1129 1138])
            ("KSPPIPECGRR" variable (:constant-flag t) nil [1160 1171])
            ("KSPCGNE" variable (:constant-flag t) nil [1195 1202])
            ("KSPNASH" variable (:constant-flag t) nil [1226 1233])
            ("KSPSTCG" variable (:constant-flag t) nil [1257 1264])
            ("KSPGLTR" variable (:constant-flag t) nil [1288 1295])
            ("KSPFCG" variable (:constant-flag t) nil [1317 1323])
            ("KSPPIPEFCG" variable (:constant-flag t) nil [1345 1355])
            ("KSPGMRES" variable (:constant-flag t) nil [1377 1385])
            ("KSPPIPEFGMRES" variable (:constant-flag t) nil [1407 1420])
            ("KSPFGMRES" variable (:constant-flag t) nil [1444 1453])
            ("KSPLGMRES" variable (:constant-flag t) nil [1477 1486])
            ("KSPDGMRES" variable (:constant-flag t) nil [1510 1519])
            ("KSPPGMRES" variable (:constant-flag t) nil [1543 1552])
            ("KSPTCQMR" variable (:constant-flag t) nil [1574 1582])
            ("KSPBCGS" variable (:constant-flag t) nil [1604 1611])
            ("KSPIBCGS" variable (:constant-flag t) nil [1635 1643])
            ("KSPFBCGS" variable (:constant-flag t) nil [1667 1675])
            ("KSPFBCGSR" variable (:constant-flag t) nil [1699 1708])
            ("KSPBCGSL" variable (:constant-flag t) nil [1732 1740])
            ("KSPCGS" variable (:constant-flag t) nil [1762 1768])
            ("KSPTFQMR" variable (:constant-flag t) nil [1790 1798])
            ("KSPCR" variable (:constant-flag t) nil [1820 1825])
            ("KSPPIPECR" variable (:constant-flag t) nil [1847 1856])
            ("KSPLSQR" variable (:constant-flag t) nil [1878 1885])
            ("KSPPREONLY" variable (:constant-flag t) nil [1907 1917])
            ("KSPQCG" variable (:constant-flag t) nil [1939 1945])
            ("KSPBICG" variable (:constant-flag t) nil [1967 1974])
            ("KSPMINRES" variable (:constant-flag t) nil [1996 2005])
            ("KSPSYMMLQ" variable (:constant-flag t) nil [2027 2036])
            ("KSPLCD" variable (:constant-flag t) nil [2058 2064])
            ("KSPPYTHON" variable (:constant-flag t) nil [2086 2095])
            ("KSPGCR" variable (:constant-flag t) nil [2117 2123])
            ("KSPPIPEGCR" variable (:constant-flag t) nil [2145 2155])
            ("KSPTSIRM" variable (:constant-flag t) nil [2177 2185])
            ("KSPCGLS" variable (:constant-flag t) nil [2207 2214])
            ("KSP_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [2264 2289])
            ("DMKSP_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [2303 2330])
            ("KSPCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2370 2379])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2379 2385]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2345 2386])
            ("KSPSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2426 2430])
                    ("" variable (:type ("KSPType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2430 2438]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2400 2439])
            ("KSPGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2479 2483])
                    ("" variable
                       (:pointer 1
                        :type ("KSPType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2483 2493]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2453 2494])
            ("KSPSetUp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2532 2536]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2508 2537])
            ("KSPSetUpOnBlocks" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2583 2587]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2551 2588])
            ("KSPSolve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2626 2630])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2630 2634])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2634 2638]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2602 2639])
            ("KSPSolveTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2686 2690])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2690 2694])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2694 2698]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2653 2699])
            ("KSPReset" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2737 2741]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2713 2742])
            ("KSPDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2782 2787]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2756 2788])
            ("KSPSetReusePreconditioner" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2843 2847])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2847 2857]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2802 2858])
            ("KSPSetSkipPCSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2914 2918])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2918 2928]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2872 2929])
            ("KSPList" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) nil [2944 2970])
            ("KSPRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3011 3023])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3043 3047]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2984 3049])
            ("KSPSetPCSide" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3092 3096])
                    ("" variable (:type ("PCSide" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3096 3103]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3064 3104])
            ("KSPGetPCSide" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3146 3150])
                    ("" variable
                       (:pointer 1
                        :type ("PCSide" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3150 3158]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3118 3159])
            ("KSPSetTolerances" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3205 3209])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3209 3219])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3219 3229])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3229 3239])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3239 3248]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3173 3249])
            ("KSPGetTolerances" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3295 3299])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3299 3310])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3310 3321])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3321 3332])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3332 3342]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3263 3343])
            ("KSPSetInitialGuessNonzero" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3398 3402])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3402 3413]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3357 3414])
            ("KSPGetInitialGuessNonzero" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3469 3473])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3473 3486]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3428 3487])
            ("KSPSetInitialGuessKnoll" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3540 3544])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3544 3555]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3501 3556])
            ("KSPGetInitialGuessKnoll" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3609 3613])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3613 3625]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3570 3626])
            ("KSPSetErrorIfNotConverged" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3681 3685])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3685 3696]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3640 3697])
            ("KSPGetErrorIfNotConverged" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3752 3756])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3756 3769]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3711 3770])
            ("KSPSetComputeEigenvalues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3824 3828])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3828 3839]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3784 3840])
            ("KSPSetComputeRitz" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3887 3891])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3891 3902]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3854 3903])
            ("KSPGetComputeEigenvalues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3957 3961])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3961 3973]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3917 3974])
            ("KSPSetComputeSingularValues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4031 4035])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4035 4046]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3988 4047])
            ("KSPGetComputeSingularValues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4104 4108])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4108 4120]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4061 4121])
            ("KSPGetRhs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4160 4164])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4164 4170]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4135 4171])
            ("KSPGetSolution" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4215 4219])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4219 4225]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4185 4226])
            ("KSPGetResidualNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4274 4278])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4278 4289]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4240 4290])
            ("KSPGetIterationNumber" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4341 4345])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4345 4355]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4304 4356])
            ("KSPGetTotalIterations" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4407 4411])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4411 4421]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4370 4422])
            ("KSPCreateVecs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4465 4469])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4469 4478])
                    ("" variable
                       (:pointer 2
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4478 4484])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4484 4493])
                    ("" variable
                       (:pointer 2
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4493 4499]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4436 4500])
            ("KSPGetVecs" function
               (:arguments 
                  ( ("ksp" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4587 4595])
                    ("n" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4595 4606])
                    ("x" variable
                       (:pointer 2
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4606 4614])
                    ("m" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4614 4625])
                    ("y" variable
                       (:pointer 2
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4625 4633]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4561 4670])
            ("KSPSetPreSolve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4715 4719])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4738 4742])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4742 4746])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4746 4750])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [4750 4756]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [4757 4763]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4685 4764])
            ("KSPSetPostSolve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4809 4813])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4832 4836])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4836 4840])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4840 4844])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [4844 4850]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [4851 4857]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4778 4858])
            ("KSPSetPC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4897 4901])
                    ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4901 4904]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4873 4905])
            ("KSPGetPC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4943 4947])
                    ("" variable
                       (:pointer 1
                        :type ("PC" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4947 4951]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4919 4952])
            ("KSPMonitor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4993 4997])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4997 5006])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5006 5016]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4967 5017])
            ("KSPMonitorSet" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5060 5064])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5083 5087])
                            ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5087 5096])
                            ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5096 5106])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [5106 5112]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [5113 5120])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 2
                                :type "void")
                                (reparse-symbol arg-sub-list) [5139 5146]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5031 5148])
            ("KSPMonitorCancel" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5194 5198]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5162 5199])
            ("KSPGetMonitorContext" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5249 5253])
                    ("" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) [5253 5261]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5213 5262])
            ("KSPGetResidualHistory" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5313 5317])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5317 5329])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5330 5341]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5276 5342])
            ("KSPSetResidualHistory" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5393 5397])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5397 5408])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5409 5418])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5418 5429]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5356 5430])
            ("KSPBuildSolutionDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5484 5488])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5488 5492])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5492 5497]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5445 5498])
            ("KSPBuildResidualDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5551 5555])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5555 5559])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5559 5563])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5563 5569]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5512 5570])
            ("KSPDestroyDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5617 5621]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5584 5622])
            ("KSPSetWorkVecs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5666 5670])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5670 5679]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5636 5680])
            ("PCKSPGetKSP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5722 5725])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5725 5730]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5695 5731])
            ("PCBJacobiGetSubKSP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5779 5782])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5782 5792])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5792 5802])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5802 5808]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5745 5810])
            ("PCASMGetSubKSP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5854 5857])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5857 5867])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5867 5877])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5877 5883]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5824 5885])
            ("PCGASMGetSubKSP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5930 5933])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5933 5943])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5943 5953])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5953 5959]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5899 5961])
            ("PCFieldSplitGetSubKSP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6012 6015])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6015 6025])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6025 6031]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5975 6033])
            ("PCMGGetSmoother" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6078 6081])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6081 6090])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6090 6095]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6047 6096])
            ("PCMGGetSmootherDown" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6145 6148])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6148 6157])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6157 6162]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6110 6163])
            ("PCMGGetSmootherUp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6210 6213])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6213 6222])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6222 6227]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6177 6228])
            ("PCMGGetCoarseSolve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6276 6279])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6279 6284]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6242 6285])
            ("PCGalerkinGetKSP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6331 6334])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6334 6340]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6299 6341])
            ("KSPBuildSolution" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6388 6392])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6392 6396])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6396 6402]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6356 6403])
            ("KSPBuildResidual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6449 6453])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6453 6457])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6457 6461])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6461 6467]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6417 6468])
            ("KSPRichardsonSetScale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6520 6524])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6524 6534]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6483 6535])
            ("KSPRichardsonSetSelfScale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6590 6594])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6594 6605]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6549 6606])
            ("KSPChebyshevSetEigenvalues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6662 6666])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6666 6676])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6676 6686]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6620 6687])
            ("KSPChebyshevEstEigSet" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6738 6742])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6742 6752])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6752 6762])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6762 6772])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6772 6782]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6701 6783])
            ("KSPChebyshevEstEigSetUseRandom" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6843 6847])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6847 6857]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6797 6858])
            ("KSPChebyshevEstEigSetRandom" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6915 6919])
                    ("" variable (:type ("PetscRandom" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6919 6931]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6872 6932])
            ("KSPChebyshevEstEigGetKSP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6986 6990])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6990 6995]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6946 6996])
            ("KSPComputeExtremeSingularValues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7057 7061])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7061 7072])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7072 7083]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7010 7084])
            ("KSPComputeEigenvalues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7135 7139])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7139 7148])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7148 7159])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7160 7171])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7172 7183]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7098 7184])
            ("KSPComputeEigenvaluesExplicitly" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7245 7249])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7249 7258])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7258 7269])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7270 7281]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7198 7283])
            ("KSPComputeRitz" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7327 7331])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7331 7341])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7341 7351])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7351 7362])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7362 7367])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7368 7379])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7380 7391]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7297 7393])
            ("KSPFCDTruncationType" type
               (:typedef ("" type
                     (:members 
                        ( ("KSP_FCD_TRUNC_TYPE_STANDARD" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7832 7860])
                          ("KSP_FCD_TRUNC_TYPE_NOTAY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7860 7885]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [7818 7907])
            ("KSPFCDTruncationTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [7921 7963])
            ("KSPFCGSetMmax" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8007 8011])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8011 8020]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7978 8021])
            ("KSPFCGGetMmax" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8064 8068])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8068 8078]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8035 8079])
            ("KSPFCGSetNprealloc" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8127 8131])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8131 8140]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8093 8141])
            ("KSPFCGGetNprealloc" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8189 8193])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8193 8203]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8155 8204])
            ("KSPFCGSetTruncationType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8257 8261])
                    ("" variable (:type ("KSPFCDTruncationType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8261 8282]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8218 8283])
            ("KSPFCGGetTruncationType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8336 8340])
                    ("" variable
                       (:pointer 1
                        :type ("KSPFCDTruncationType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8340 8362]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8297 8363])
            ("KSPPIPEFCGSetMmax" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8411 8415])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8415 8424]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8378 8425])
            ("KSPPIPEFCGGetMmax" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8472 8476])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8476 8486]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8439 8487])
            ("KSPPIPEFCGSetNprealloc" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8539 8543])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8543 8552]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8501 8553])
            ("KSPPIPEFCGGetNprealloc" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8605 8609])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8609 8619]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8567 8620])
            ("KSPPIPEFCGSetTruncationType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8677 8681])
                    ("" variable (:type ("KSPFCDTruncationType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8681 8702]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8634 8703])
            ("KSPPIPEFCGGetTruncationType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8760 8764])
                    ("" variable
                       (:pointer 1
                        :type ("KSPFCDTruncationType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8764 8786]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8717 8787])
            ("KSPPIPEGCRSetMmax" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8835 8839])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8839 8848]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8802 8849])
            ("KSPPIPEGCRGetMmax" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8896 8900])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8900 8910]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8863 8911])
            ("KSPPIPEGCRSetNprealloc" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8963 8967])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8967 8976]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8925 8977])
            ("KSPPIPEGCRGetNprealloc" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9029 9033])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9033 9043]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8991 9044])
            ("KSPPIPEGCRSetTruncationType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9101 9105])
                    ("" variable (:type ("KSPFCDTruncationType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9105 9126]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9058 9127])
            ("KSPPIPEGCRGetTruncationType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9184 9188])
                    ("" variable
                       (:pointer 1
                        :type ("KSPFCDTruncationType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9188 9210]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9141 9211])
            ("KSPPIPEGCRSetUnrollW" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9261 9265])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9265 9275]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9225 9276])
            ("KSPPIPEGCRGetUnrollW" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9326 9330])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9330 9341]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9290 9342])
            ("KSPGMRESSetRestart" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9391 9395])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9396 9405]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9357 9406])
            ("KSPGMRESGetRestart" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9454 9458])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9459 9469]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9420 9470])
            ("KSPGMRESSetHapTol" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9517 9521])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9521 9531]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9484 9532])
            ("KSPGMRESSetPreAllocateVectors" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9592 9596]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9547 9597])
            ("KSPGMRESSetOrthogonalization" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9655 9659])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9678 9682])
                            ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9682 9691]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9611 9693])
            ("KSPGMRESGetOrthogonalization" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9751 9755])
                    (nil variable (:pointer (("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9775 9779]) ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9779 9788])) :type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9755 9789]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9707 9790])
            ("KSPGMRESModifiedGramSchmidtOrthogonalization" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9864 9868])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9868 9877]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9804 9878])
            ("KSPGMRESClassicalGramSchmidtOrthogonalization" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9953 9957])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9957 9966]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9892 9967])
            ("KSPLGMRESSetAugDim" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10016 10020])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10020 10029]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9982 10030])
            ("KSPLGMRESSetConstant" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10080 10084]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10044 10085])
            ("KSPPIPEFGMRESSetShift" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10137 10141])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10141 10153]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10100 10154])
            ("KSPGCRSetRestart" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10201 10205])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10205 10214]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10169 10215])
            ("KSPGCRGetRestart" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10261 10265])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10265 10275]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10229 10276])
            ("KSPGCRSetModifyPC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10323 10327])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10346 10350])
                            ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10350 10359])
                            ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10359 10369])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [10369 10375]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [10376 10382])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [10400 10406]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10290 10408])
            ("KSPGMRESCGSRefinementType" type
               (:typedef ("" type
                     (:members 
                        ( ("KSP_GMRES_CGS_REFINE_NEVER" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [10788 10815])
                          ("KSP_GMRES_CGS_REFINE_IFNEEDED" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [10816 10846])
                          ("KSP_GMRES_CGS_REFINE_ALWAYS" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [10847 10875]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [10774 10902])
            ("KSPGMRESCGSRefinementTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [10916 10963])
            ("KSPGMRESSetCGSRefinementType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12977 12981])
                    ("" variable (:type ("KSPGMRESCGSRefinementType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12981 13007]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12933 13008])
            ("KSPGMRESGetCGSRefinementType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13066 13070])
                    ("" variable
                       (:pointer 1
                        :type ("KSPGMRESCGSRefinementType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13070 13097]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13022 13098])
            ("KSPFGMRESModifyPCNoChange" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13154 13158])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13158 13167])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13167 13176])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13176 13186])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [13186 13192]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13113 13193])
            ("KSPFGMRESModifyPCKSP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13243 13247])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13247 13256])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13256 13265])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13265 13275])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [13275 13281]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13207 13282])
            ("KSPFGMRESSetModifyPC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13332 13336])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13355 13359])
                            ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13359 13368])
                            ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13368 13377])
                            ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13377 13387])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [13387 13393]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [13394 13400])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [13418 13424]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13296 13426])
            ("KSPQCGSetTrustRegionRadius" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13483 13487])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13487 13497]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13441 13498])
            ("KSPQCGGetQuadratic" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13546 13550])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13550 13561]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13512 13562])
            ("KSPQCGGetTrialStepNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13614 13618])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13618 13629]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13576 13630])
            ("KSPBCGSLSetXRes" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13676 13680])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13680 13690]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13645 13691])
            ("KSPBCGSLSetPol" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13735 13739])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13739 13750]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13705 13751])
            ("KSPBCGSLSetEll" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13795 13799])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13799 13808]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13765 13809])
            ("KSPBCGSLSetUsePseudoinverse" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13866 13870])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13870 13880]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13823 13881])
            ("KSPSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13929 13933]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13896 13934])
            ("KSPAddOptionsChecker" function
               (:prototype-flag t
                :arguments 
                  ( ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14003 14007]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13948 14009])
            ("KSPMonitorSingularValue" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14063 14067])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14067 14076])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14076 14086])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewerAndFormat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14086 14109]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14024 14110])
            ("KSPMonitorDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14157 14161])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14161 14170])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14170 14180])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewerAndFormat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14180 14203]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14124 14204])
            ("KSPLSQRMonitorDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14255 14259])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14259 14268])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14268 14278])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewerAndFormat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14278 14301]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14218 14302])
            ("KSPMonitorRange" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14347 14351])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14351 14360])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14360 14370])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewerAndFormat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14370 14393]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14316 14394])
            ("KSPMonitorDynamicTolerance" function
               (:prototype-flag t
                :arguments 
                  ( ("ksp" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14450 14458])
                    ("its" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14458 14471])
                    ("fnorm" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14471 14487])
                    ("dummy" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [14487 14499]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14408 14500])
            ("KSPMonitorDynamicToleranceDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("dummy" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) [14563 14576]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14514 14577])
            ("KSPMonitorTrueResidualNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14633 14637])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14637 14646])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14646 14656])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewerAndFormat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14656 14679]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14591 14680])
            ("KSPMonitorTrueResidualMaxNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14739 14743])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14743 14752])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14752 14762])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewerAndFormat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14762 14785]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14694 14786])
            ("KSPMonitorDefaultShort" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14838 14842])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14842 14851])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14851 14861])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewerAndFormat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14861 14884]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14800 14885])
            ("KSPMonitorSolution" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14933 14937])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14937 14946])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14946 14956])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewerAndFormat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14956 14979]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14899 14980])
            ("KSPMonitorSAWs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15024 15028])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15028 15037])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15037 15047])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [15047 15053]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14994 15054])
            ("KSPMonitorSAWsCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15104 15108])
                    ("" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) [15108 15115]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15068 15116])
            ("KSPMonitorSAWsDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) [15167 15174]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15130 15175])
            ("KSPGMRESMonitorKrylov" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15226 15230])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15230 15239])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15239 15249])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [15249 15256]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15189 15257])
            ("KSPMonitorSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15311 15315])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15315 15327])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15328 15340])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15341 15354])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15374 15378])
                            ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15378 15387])
                            ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15387 15397])
                            ("" variable
                               (:pointer 1
                                :type ("PetscViewerAndFormat" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15397 15419]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15271 15421])
            ("KSPUnwindPreconditioner" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15475 15479])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15479 15483])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15483 15487]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15436 15488])
            ("KSPInitialResidual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15536 15540])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15540 15544])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15544 15548])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15548 15552])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15552 15556])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15556 15560]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15502 15561])
            ("KSPSetOperators" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15607 15611])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15611 15615])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15615 15619]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15576 15620])
            ("KSPGetOperators" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15665 15669])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15669 15674])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15674 15679]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15634 15680])
            ("KSPGetOperatorsSet" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15728 15732])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15732 15744])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15744 15756]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15694 15757])
            ("KSPSetOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15806 15810])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15810 15822]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15771 15824])
            ("KSPAppendOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15876 15880])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15880 15892]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15838 15894])
            ("KSPGetOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15943 15947])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15947 15960]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15908 15962])
            ("KSPSetTabLevel" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16006 16010])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16010 16019]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15976 16020])
            ("KSPGetTabLevel" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16064 16068])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16068 16078]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16034 16079])
            ("KSPSetDiagonalScale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16129 16133])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16133 16144]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16094 16145])
            ("KSPGetDiagonalScale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16194 16198])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16198 16210]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16159 16211])
            ("KSPSetDiagonalScaleFix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16263 16267])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16267 16278]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16225 16279])
            ("KSPGetDiagonalScaleFix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16331 16335])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16335 16347]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16293 16348])
            ("KSPView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16386 16390])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16390 16402]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16363 16403])
            ("KSPLoad" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16440 16444])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16444 16456]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16417 16457])
            ("KSPViewFromOptions" function
               (:arguments 
                  ( ("A" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16512 16518])
                    ("obj" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16518 16534])
                    ("name" variable
                       (:dereference 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16534 16552]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16478 16614])
            ("KSPReasonView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16657 16661])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16661 16673]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16628 16674])
            ("KSPReasonViewFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16728 16732]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16688 16733])
            ("KSP_FILE_CLASSID" variable (:constant-flag t) nil [16743 16759])
            ("KSPLSQRSetStandardErrorVec" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16824 16828])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16828 16832]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16782 16833])
            ("KSPLSQRGetStandardErrorVec" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16889 16893])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16893 16898]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16847 16899])
            ("PCRedundantGetKSP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16947 16950])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16950 16955]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16914 16956])
            ("PCRedistributeGetKSP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17006 17009])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17009 17014]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16970 17015])
            ("PCTelescopeGetKSP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17062 17065])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17065 17070]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17029 17071])
            ("KSPNormType" type
               (:typedef ("" type
                     (:members 
                        ( ("KSP_NORM_DEFAULT" variable
                             (:constant-flag t
                              :default-value (17539 17541)
                              :type "int")
                              (reparse-symbol enumsubparts) [17520 17541])
                          ("KSP_NORM_NONE" variable
                             (:constant-flag t
                              :default-value (17558 17559)
                              :type "int")
                              (reparse-symbol enumsubparts) [17542 17559])
                          ("KSP_NORM_PRECONDITIONED" variable
                             (:constant-flag t
                              :default-value (17586 17587)
                              :type "int")
                              (reparse-symbol enumsubparts) [17560 17587])
                          ("KSP_NORM_UNPRECONDITIONED" variable
                             (:constant-flag t
                              :default-value (17616 17617)
                              :type "int")
                              (reparse-symbol enumsubparts) [17588 17617])
                          ("KSP_NORM_NATURAL" variable
                             (:constant-flag t
                              :default-value (17637 17638)
                              :type "int")
                              (reparse-symbol enumsubparts) [17618 17638]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [17506 17652])
            ("KSP_NORM_MAX" variable (:constant-flag t) nil [17661 17673])
            ("KSPNormTypes" variable
               (:pointer 2
                :constant-flag t
                :type "char")
                nil [17710 17747])
            ("KSPSetNormType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19260 19264])
                    ("" variable (:type ("KSPNormType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19264 19276]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19230 19277])
            ("KSPGetNormType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19321 19325])
                    ("" variable
                       (:pointer 1
                        :type ("KSPNormType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19325 19338]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19291 19339])
            ("KSPSetSupportedNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("ksp" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19388 19396])
                    ("" variable (:type ("KSPNormType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19396 19408])
                    ("" variable (:type ("PCSide" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19408 19415])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19415 19424]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19353 19425])
            ("KSPSetCheckNormIteration" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19479 19483])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19483 19492]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19439 19493])
            ("KSPSetLagNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19536 19540])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19540 19550]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19507 19551])
            ("KSPConvergedReason" type
               (:typedef ("" type
                     (:members 
                        ( ("KSP_CONVERGED_RTOL_NORMAL" variable
                             (:constant-flag t
                              :default-value (20089 20090)
                              :type "int")
                              (reparse-symbol enumsubparts) [20053 20090])
                          ("KSP_CONVERGED_ATOL_NORMAL" variable
                             (:constant-flag t
                              :default-value (20142 20143)
                              :type "int")
                              (reparse-symbol enumsubparts) [20106 20143])
                          ("KSP_CONVERGED_RTOL" variable
                             (:constant-flag t
                              :default-value (20195 20196)
                              :type "int")
                              (reparse-symbol enumsubparts) [20159 20196])
                          ("KSP_CONVERGED_ATOL" variable
                             (:constant-flag t
                              :default-value (20248 20249)
                              :type "int")
                              (reparse-symbol enumsubparts) [20212 20249])
                          ("KSP_CONVERGED_ITS" variable
                             (:constant-flag t
                              :default-value (20301 20302)
                              :type "int")
                              (reparse-symbol enumsubparts) [20265 20302])
                          ("KSP_CONVERGED_CG_NEG_CURVE" variable
                             (:constant-flag t
                              :default-value (20354 20355)
                              :type "int")
                              (reparse-symbol enumsubparts) [20318 20355])
                          ("KSP_CONVERGED_CG_CONSTRAINED" variable
                             (:constant-flag t
                              :default-value (20407 20408)
                              :type "int")
                              (reparse-symbol enumsubparts) [20371 20408])
                          ("KSP_CONVERGED_STEP_LENGTH" variable
                             (:constant-flag t
                              :default-value (20460 20461)
                              :type "int")
                              (reparse-symbol enumsubparts) [20424 20461])
                          ("KSP_CONVERGED_HAPPY_BREAKDOWN" variable
                             (:constant-flag t
                              :default-value (20513 20514)
                              :type "int")
                              (reparse-symbol enumsubparts) [20477 20514])
                          ("KSP_DIVERGED_NULL" variable
                             (:constant-flag t
                              :default-value (20594 20596)
                              :type "int")
                              (reparse-symbol enumsubparts) [20559 20596])
                          ("KSP_DIVERGED_ITS" variable
                             (:constant-flag t
                              :default-value (20647 20649)
                              :type "int")
                              (reparse-symbol enumsubparts) [20612 20649])
                          ("KSP_DIVERGED_DTOL" variable
                             (:constant-flag t
                              :default-value (20700 20702)
                              :type "int")
                              (reparse-symbol enumsubparts) [20665 20702])
                          ("KSP_DIVERGED_BREAKDOWN" variable
                             (:constant-flag t
                              :default-value (20753 20755)
                              :type "int")
                              (reparse-symbol enumsubparts) [20718 20755])
                          ("KSP_DIVERGED_BREAKDOWN_BICG" variable
                             (:constant-flag t
                              :default-value (20806 20808)
                              :type "int")
                              (reparse-symbol enumsubparts) [20771 20808])
                          ("KSP_DIVERGED_NONSYMMETRIC" variable
                             (:constant-flag t
                              :default-value (20859 20861)
                              :type "int")
                              (reparse-symbol enumsubparts) [20824 20861])
                          ("KSP_DIVERGED_INDEFINITE_PC" variable
                             (:constant-flag t
                              :default-value (20912 20914)
                              :type "int")
                              (reparse-symbol enumsubparts) [20877 20914])
                          ("KSP_DIVERGED_NANORINF" variable
                             (:constant-flag t
                              :default-value (20965 20967)
                              :type "int")
                              (reparse-symbol enumsubparts) [20930 20967])
                          ("KSP_DIVERGED_INDEFINITE_MAT" variable
                             (:constant-flag t
                              :default-value (21018 21021)
                              :type "int")
                              (reparse-symbol enumsubparts) [20983 21021])
                          ("KSP_DIVERGED_PCSETUP_FAILED" variable
                             (:constant-flag t
                              :default-value (21072 21075)
                              :type "int")
                              (reparse-symbol enumsubparts) [21037 21075])
                          ("KSP_CONVERGED_ITERATING" variable
                             (:constant-flag t
                              :default-value (21128 21129)
                              :type "int")
                              (reparse-symbol enumsubparts) [21092 21129]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [20009 21150])
            ("KSPConvergedReasons" variable
               (:pointer 2
                :constant-flag t
                :type "char")
                nil [21164 21202])
            ("KSPSetConvergenceTest" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25224 25228])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25247 25251])
                            ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25251 25260])
                            ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25260 25270])
                            ("" variable
                               (:pointer 1
                                :type ("KSPConvergedReason" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25270 25290])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [25290 25296]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [25297 25304])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [25323 25329]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25187 25331])
            ("KSPGetConvergenceContext" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25385 25389])
                    ("" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) [25389 25397]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25345 25398])
            ("KSPConvergedDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25447 25451])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25451 25460])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25460 25470])
                    ("" variable
                       (:pointer 1
                        :type ("KSPConvergedReason" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25470 25490])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [25490 25497]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25412 25498])
            ("KSPConvergedLSQR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25544 25548])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25548 25557])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25557 25567])
                    ("" variable
                       (:pointer 1
                        :type ("KSPConvergedReason" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25567 25587])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [25587 25594]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25512 25595])
            ("KSPConvergedDefaultDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [25651 25658]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25609 25659])
            ("KSPConvergedDefaultCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) [25714 25722]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25673 25723])
            ("KSPConvergedDefaultSetUIRNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25782 25786]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25737 25787])
            ("KSPConvergedDefaultSetUMIRNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25847 25851]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25801 25852])
            ("KSPConvergedSkip" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25898 25902])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25902 25911])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25911 25921])
                    ("" variable
                       (:pointer 1
                        :type ("KSPConvergedReason" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25921 25941])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [25941 25948]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25866 25949])
            ("KSPGetConvergedReason" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26000 26004])
                    ("" variable
                       (:pointer 1
                        :type ("KSPConvergedReason" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26004 26025]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25963 26026])
            ("KSPDefaultConverged" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [26119 26124]))                  
                :type "void")
                nil [26094 26147])
            ("KSPDefaultConverged" variable (:constant-flag t) nil [26156 26175])
            ("KSPDefaultConvergedDestroy" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [26324 26329]))                  
                :type "void")
                nil [26292 26352])
            ("KSPDefaultConvergedDestroy" variable (:constant-flag t) nil [26361 26387])
            ("KSPDefaultConvergedCreate" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [26548 26553]))                  
                :type "void")
                nil [26517 26576])
            ("KSPDefaultConvergedCreate" variable (:constant-flag t) nil [26585 26610])
            ("KSPDefaultConvergedSetUIRNorm" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [26777 26782]))                  
                :type "void")
                nil [26742 26805])
            ("KSPDefaultConvergedSetUIRNorm" variable (:constant-flag t) nil [26814 26843])
            ("KSPDefaultConvergedSetUMIRNorm" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [27020 27025]))                  
                :type "void")
                nil [26984 27048])
            ("KSPDefaultConvergedSetUMIRNorm" variable (:constant-flag t) nil [27057 27087])
            ("KSPSkipConverged" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [27238 27243]))                  
                :type "void")
                nil [27216 27266])
            ("KSPSkipConverged" variable (:constant-flag t) nil [27275 27291])
            ("KSPComputeExplicitOperator" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27385 27389])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27389 27395]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27343 27396])
            ("KSPCGType" type
               (:typedef ("" type
                     (:members 
                        ( ("KSP_CG_SYMMETRIC" variable
                             (:constant-flag t
                              :default-value (27533 27534)
                              :type "int")
                              (reparse-symbol enumsubparts) [27516 27534])
                          ("KSP_CG_HERMITIAN" variable
                             (:constant-flag t
                              :default-value (27552 27553)
                              :type "int")
                              (reparse-symbol enumsubparts) [27535 27553]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [27502 27565])
            ("KSPCGTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [27579 27610])
            ("KSPCGSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27653 27657])
                    ("" variable (:type ("KSPCGType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27657 27667]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27625 27668])
            ("KSPCGUseSingleReduction" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27721 27725])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27725 27736]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27682 27737])
            ("KSPNASHSetRadius" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27784 27788])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27788 27798]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27752 27799])
            ("KSPNASHGetNormD" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27844 27848])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27848 27860]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27813 27861])
            ("KSPNASHGetObjFcn" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27907 27911])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27911 27923]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27875 27924])
            ("KSPSTCGSetRadius" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27971 27975])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27975 27985]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27939 27986])
            ("KSPSTCGGetNormD" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28031 28035])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28035 28047]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28000 28048])
            ("KSPSTCGGetObjFcn" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28094 28098])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28098 28110]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28062 28111])
            ("KSPGLTRSetRadius" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28158 28162])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28162 28172]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28126 28173])
            ("KSPGLTRGetNormD" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28218 28222])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28222 28234]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28187 28235])
            ("KSPGLTRGetObjFcn" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28281 28285])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28285 28297]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28249 28298])
            ("KSPGLTRGetMinEig" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28344 28348])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28348 28360]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28312 28361])
            ("KSPGLTRGetLambda" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28407 28411])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28411 28423]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28375 28424])
            ("KSPPythonSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28471 28475])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [28475 28487]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28439 28489])
            ("PCPreSolve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28530 28533])
                    ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28533 28537]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28504 28538])
            ("PCPostSolve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28579 28582])
                    ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28582 28586]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28552 28587])
            ("petscdrawtypes.h" include (:system-flag t) nil [28589 28616])
            ("KSPMonitorLGResidualNormCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28676 28685])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [28685 28697])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [28698 28710])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [28711 28715])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [28715 28719])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [28719 28723])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [28723 28727])
                    ("" variable
                       (:pointer 1
                        :type ("PetscDrawLG" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28727 28740]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28630 28741])
            ("KSPMonitorLGResidualNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28795 28799])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28799 28808])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28808 28818])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [28818 28824]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28755 28825])
            ("KSPMonitorLGTrueResidualNormCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28889 28898])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [28898 28910])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [28911 28923])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [28924 28928])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [28928 28932])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [28932 28936])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [28936 28940])
                    ("" variable
                       (:pointer 1
                        :type ("PetscDrawLG" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28940 28953]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28839 28954])
            ("KSPMonitorLGTrueResidualNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29012 29016])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29016 29025])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29025 29035])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [29035 29041]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28968 29042])
            ("KSPMonitorLGRange" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29089 29093])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29093 29102])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29102 29112])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [29112 29118]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29056 29119])
            ("PCShellSetPreSolve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29168 29171])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29190 29193])
                            ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29193 29197])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29197 29201])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29201 29205]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29134 29207])
            ("PCShellSetPostSolve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29256 29259])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29278 29281])
                            ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29281 29285])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29285 29289])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29289 29293]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29221 29295])
            ("_p_KSPFischerGuess" type
               (:members 
                  ( ("method" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29373 29406])
                    ("curl" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29373 29406])
                    ("maxl" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29373 29406])
                    ("refcnt" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29373 29406])
                    ("monitor" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29406 29425])
                    ("mat" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29425 29433])
                    ("ksp" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29434 29442]))                  
                :type "struct")
                nil [29338 29461])
            ("KSPFischerGuess" type
               (:typedef ("_p_KSPFischerGuess" type (:type "struct") nil nil)
                :pointer 1
                :type "typedef")
                nil [29338 29461])
            ("KSPFischerGuessCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29513 29517])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29517 29526])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29526 29535])
                    ("" variable
                       (:pointer 1
                        :type ("KSPFischerGuess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29535 29552]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29476 29553])
            ("KSPFischerGuessDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("KSPFischerGuess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29605 29622]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29567 29623])
            ("KSPFischerGuessReset" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSPFischerGuess" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29673 29689]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29637 29690])
            ("KSPFischerGuessUpdate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSPFischerGuess" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29741 29757])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29757 29761]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29704 29762])
            ("KSPFischerGuessFormGuess" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSPFischerGuess" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29816 29832])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29832 29836])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29836 29840]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29776 29841])
            ("KSPFischerGuessSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSPFischerGuess" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29900 29916]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29855 29917])
            ("KSPSetUseFischerGuess" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29969 29973])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29973 29982])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29982 29991]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29932 29992])
            ("KSPSetFischerGuess" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30040 30044])
                    ("" variable (:type ("KSPFischerGuess" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30044 30060]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [30006 30061])
            ("KSPGetFischerGuess" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30109 30113])
                    ("" variable
                       (:pointer 1
                        :type ("KSPFischerGuess" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30113 30130]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [30075 30131])
            ("MatSchurComplementAinvType" type
               (:typedef ("" type
                     (:members 
                        ( ("MAT_SCHUR_COMPLEMENT_AINV_DIAG" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [30497 30528])
                          ("MAT_SCHUR_COMPLEMENT_AINV_LUMP" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [30529 30560]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [30483 30588])
            ("MatSchurComplementAinvTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [30602 30650])
            ("MatCreateSchurComplement" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30705 30709])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30709 30713])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30713 30717])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30717 30721])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30721 30725])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30725 30730]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [30665 30731])
            ("MatSchurComplementGetKSP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30785 30789])
                    ("" variable
                       (:pointer 1
                        :type ("KSP" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30789 30794]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [30745 30795])
            ("MatSchurComplementSetKSP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30849 30853])
                    ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30853 30857]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [30809 30858])
            ("MatSchurComplementSetSubMatrices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30920 30924])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30924 30928])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30928 30932])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30932 30936])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30936 30940])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30940 30944]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [30872 30945])
            ("MatSchurComplementUpdateSubMatrices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31010 31014])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31014 31018])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31018 31022])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31022 31026])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31026 31030])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31030 31034]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [30959 31035])
            ("MatSchurComplementGetSubMatrices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31097 31101])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31101 31106])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31106 31111])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31111 31116])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31116 31121])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31121 31126]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [31049 31127])
            ("MatSchurComplementSetAinvType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31186 31190])
                    ("" variable (:type ("MatSchurComplementAinvType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31190 31217]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [31141 31218])
            ("MatSchurComplementGetAinvType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31277 31281])
                    ("" variable
                       (:pointer 1
                        :type ("MatSchurComplementAinvType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31281 31309]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [31232 31310])
            ("MatSchurComplementGetPmat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31365 31369])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31369 31378])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31378 31383]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [31324 31384])
            ("MatSchurComplementComputeExplicitOperator" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31455 31459])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31459 31464]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [31398 31465])
            ("MatGetSchurComplement" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31516 31520])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31520 31523])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31523 31526])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31526 31529])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31529 31532])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31532 31541])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31541 31547])
                    ("" variable (:type ("MatSchurComplementAinvType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31547 31574])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31574 31583])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31583 31589]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [31479 31590])
            ("MatCreateSchurComplementPmat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31648 31652])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31652 31656])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31656 31660])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31660 31664])
                    ("" variable (:type ("MatSchurComplementAinvType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31664 31691])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31691 31700])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31700 31705]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [31604 31706])
            ("KSPSetDM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31745 31749])
                    ("" variable (:type ("DM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31749 31752]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [31721 31753])
            ("KSPSetDMActive" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31797 31801])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31801 31812]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [31767 31813])
            ("KSPGetDM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31851 31855])
                    ("" variable
                       (:pointer 1
                        :type ("DM" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31855 31859]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [31827 31860])
            ("KSPSetApplicationContext" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31914 31918])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [31918 31924]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [31874 31925])
            ("KSPGetApplicationContext" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31979 31983])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [31983 31989]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [31939 31990])
            ("KSPSetComputeRHS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32036 32040])
                    ("func" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32063 32067])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32067 32071])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [32071 32077]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [32078 32085]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [32004 32086])
            ("KSPSetComputeOperators" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32138 32142])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32160 32164])
                            ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32164 32168])
                            ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32168 32172])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [32172 32178]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [32179 32185]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [32100 32186])
            ("KSPSetComputeInitialGuess" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32241 32245])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32263 32267])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32267 32271])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [32271 32277]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [32278 32284]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [32200 32285])
            ("DMKSPSetComputeOperators" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("DM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32339 32342])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32360 32364])
                            ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32364 32368])
                            ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32368 32372])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [32372 32378]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [32379 32385]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [32299 32386])
            ("DMKSPGetComputeOperators" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("DM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32440 32443])
                    (nil variable (:pointer (("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32462 32466]) ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32466 32470]) ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32470 32474]) ("" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [32474 32480])) :type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32443 32481])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [32481 32487]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [32400 32488])
            ("DMKSPSetComputeRHS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("DM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32536 32539])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32557 32561])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32561 32565])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [32565 32571]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [32572 32578]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [32502 32579])
            ("DMKSPGetComputeRHS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("DM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32627 32630])
                    (nil variable (:pointer (("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32649 32653]) ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32653 32657]) ("" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [32657 32663])) :type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32630 32664])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [32664 32670]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [32593 32671])
            ("DMKSPSetComputeInitialGuess" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("DM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32728 32731])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32749 32753])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32753 32757])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [32757 32763]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [32764 32770]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [32685 32771])
            ("DMKSPGetComputeInitialGuess" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("DM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32828 32831])
                    (nil variable (:pointer (("" variable (:type ("KSP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32850 32854]) ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32854 32858]) ("" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [32858 32864])) :type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32831 32865])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [32865 32871]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [32785 32872])
            ("DMGlobalToLocalSolve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("DM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32923 32926])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32926 32930])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32930 32934]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [32887 32935])
            ("DMProjectField" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("DM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32979 32982])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32983 32987])
                    (nil variable (:pointer (("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33041 33050]) ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33051 33060]) ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33061 33070]) ("" variable (:constant-flag t :type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33124 33140]) ("" variable (:constant-flag t :type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33142 33158]) ("" variable (:constant-flag t :type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33160 33179]) ("" variable (:constant-flag t :type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33181 33200]) ("" variable (:constant-flag t :type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33202 33221]) ("" variable (:constant-flag t :type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33276 33292]) ("" variable (:constant-flag t :type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33294 33310]) ("" variable (:constant-flag t :type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33312 33331]) ("" variable (:constant-flag t :type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33333 33352]) ("" variable (:constant-flag t :type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33354 33373]) ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33428 33438]) ("" variable (:constant-flag t :type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33439 33457]) ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33459 33473])) :type "void") (reparse-symbol arg-sub-list) [33031 33475])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33476 33487])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33488 33492]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [32949 33493]))          
      :file "petscksp.h"
      :pointmax 33501
      :fsize 33500
      :lastmodtime '(22420 61452 0 0)
      :unmatched-syntax '((semantic-list 33471 . 33473) (semantic-list 33455 . 33457) (semantic-list 33371 . 33373) (semantic-list 33350 . 33352) (semantic-list 33329 . 33331) (semantic-list 33308 . 33310) (semantic-list 33290 . 33292) (semantic-list 33219 . 33221) (semantic-list 33198 . 33200) (semantic-list 33177 . 33179) (semantic-list 33156 . 33158) (semantic-list 33138 . 33140) (symbol 32936 . 32948) (symbol 32874 . 32886) (symbol 32772 . 32784) (symbol 32672 . 32684) (symbol 32580 . 32592) (symbol 32489 . 32501) (symbol 32387 . 32399) (symbol 32286 . 32298) (symbol 32187 . 32199) (symbol 32087 . 32099) (symbol 31991 . 32003) (symbol 31926 . 31938) (symbol 31861 . 31873) (symbol 31814 . 31826) (symbol 31754 . 31766) (symbol 31708 . 31720) (symbol 31591 . 31603) (symbol 31466 . 31478) (symbol 31385 . 31397) (symbol 31311 . 31323) (symbol 31219 . 31231) (symbol 31128 . 31140) (symbol 31036 . 31048) (symbol 30946 . 30958) (symbol 30859 . 30871) (symbol 30796 . 30808) (symbol 30732 . 30744) (symbol 30652 . 30664) (symbol 30589 . 30601) (symbol 30062 . 30074) (symbol 29993 . 30005) (symbol 29919 . 29931) (symbol 29842 . 29854) (symbol 29763 . 29775) (symbol 29691 . 29703) (symbol 29624 . 29636) (symbol 29554 . 29566) (symbol 29463 . 29475) (symbol 29208 . 29220) (symbol 29121 . 29133) (symbol 29043 . 29055) (symbol 28955 . 28967) (semantic-list 28921 . 28923) (semantic-list 28908 . 28910) (symbol 28826 . 28838) (symbol 28742 . 28754) (semantic-list 28708 . 28710) (semantic-list 28695 . 28697) (symbol 28617 . 28629) (symbol 28539 . 28551) (symbol 28491 . 28503) (semantic-list 28485 . 28487) (symbol 28426 . 28438) (symbol 28362 . 28374) (symbol 28299 . 28311) (symbol 28236 . 28248) (symbol 28174 . 28186) (symbol 28113 . 28125) (symbol 28049 . 28061) (symbol 27987 . 27999) (symbol 27926 . 27938) (symbol 27862 . 27874) (symbol 27800 . 27812) (symbol 27739 . 27751) (symbol 27669 . 27681) (symbol 27612 . 27624) (symbol 27566 . 27578) (symbol 27330 . 27342) (symbol 27196 . 27215) (semantic-list 27169 . 27195) (symbol 27153 . 27169) (string 27170 . 27194) (symbol 26964 . 26983) (semantic-list 26923 . 26963) (symbol 26907 . 26923) (string 26924 . 26962) (symbol 26722 . 26741) (semantic-list 26682 . 26721) (symbol 26666 . 26682) (string 26683 . 26720) (symbol 26497 . 26516) (semantic-list 26461 . 26496) (symbol 26445 . 26461) (string 26462 . 26495) (symbol 26272 . 26291) (semantic-list 26235 . 26271) (symbol 26219 . 26235) (string 26236 . 26270) (symbol 26074 . 26093) (semantic-list 26044 . 26073) (symbol 26028 . 26044) (string 26045 . 26072) (symbol 25950 . 25962) (symbol 25853 . 25865) (symbol 25788 . 25800) (symbol 25724 . 25736) (symbol 25660 . 25672) (symbol 25596 . 25608) (symbol 25499 . 25511) (symbol 25399 . 25411) (symbol 25332 . 25344) (symbol 25174 . 25186) (symbol 21151 . 21163) (symbol 19494 . 19506) (symbol 19426 . 19438) (symbol 19340 . 19352) (symbol 19278 . 19290) (symbol 19217 . 19229) (symbol 17697 . 17709) (symbol 17016 . 17028) (symbol 16957 . 16969) (symbol 16901 . 16913) (symbol 16834 . 16846) (symbol 16769 . 16781) (symbol 16675 . 16687) (symbol 16615 . 16627) (symbol 16458 . 16477) (symbol 16404 . 16416) (symbol 16350 . 16362) (symbol 16280 . 16292) (symbol 16212 . 16224) (symbol 16146 . 16158) (symbol 16081 . 16093) (symbol 16021 . 16033) (symbol 15963 . 15975) (semantic-list 15958 . 15960) (symbol 15895 . 15907) (semantic-list 15890 . 15892) (symbol 15825 . 15837) (semantic-list 15820 . 15822) (symbol 15758 . 15770) (symbol 15681 . 15693) (symbol 15621 . 15633) (symbol 15563 . 15575) (symbol 15489 . 15501) (symbol 15423 . 15435) (semantic-list 15352 . 15354) (semantic-list 15338 . 15340) (semantic-list 15325 . 15327) (symbol 15258 . 15270) (symbol 15176 . 15188) (symbol 15117 . 15129) (symbol 15055 . 15067) (symbol 14981 . 14993) (symbol 14886 . 14898) (symbol 14787 . 14799) (symbol 14681 . 14693) (symbol 14578 . 14590) (symbol 14501 . 14513) (symbol 14395 . 14407) (symbol 14303 . 14315) (symbol 14205 . 14217) (symbol 14111 . 14123) (symbol 14011 . 14023) (symbol 13935 . 13947) (symbol 13883 . 13895) (symbol 13810 . 13822) (symbol 13752 . 13764) (symbol 13692 . 13704) (symbol 13632 . 13644) (symbol 13563 . 13575) (symbol 13499 . 13511) (symbol 13428 . 13440) (symbol 13283 . 13295) (symbol 13194 . 13206) (symbol 13100 . 13112) (symbol 13009 . 13021) (symbol 12920 . 12932) (symbol 10903 . 10915) (symbol 10277 . 10289) (symbol 10216 . 10228) (symbol 10156 . 10168) (symbol 10087 . 10099) (symbol 10031 . 10043) (symbol 9969 . 9981) (symbol 9879 . 9891) (symbol 9791 . 9803) (symbol 9694 . 9706) (symbol 9598 . 9610) (symbol 9534 . 9546) (symbol 9471 . 9483) (symbol 9407 . 9419) (symbol 9344 . 9356) (symbol 9277 . 9289) (symbol 9212 . 9224) (symbol 9128 . 9140) (symbol 9045 . 9057) (symbol 8978 . 8990) (symbol 8912 . 8924) (symbol 8850 . 8862) (symbol 8789 . 8801) (symbol 8704 . 8716) (symbol 8621 . 8633) (symbol 8554 . 8566) (symbol 8488 . 8500) (symbol 8426 . 8438) (symbol 8365 . 8377) (symbol 8284 . 8296) (symbol 8205 . 8217) (symbol 8142 . 8154) (symbol 8080 . 8092) (symbol 8022 . 8034) (symbol 7965 . 7977) (symbol 7908 . 7920) (semantic-list 7389 . 7391) (semantic-list 7377 . 7379) (semantic-list 7365 . 7367) (symbol 7284 . 7296) (semantic-list 7279 . 7281) (semantic-list 7267 . 7269) (symbol 7185 . 7197) (semantic-list 7169 . 7171) (semantic-list 7157 . 7159) (symbol 7085 . 7097) (symbol 6997 . 7009) (symbol 6933 . 6945) (symbol 6859 . 6871) (symbol 6784 . 6796) (symbol 6688 . 6700) (symbol 6607 . 6619) (symbol 6536 . 6548) (symbol 6470 . 6482) (symbol 6404 . 6416) (symbol 6343 . 6355) (symbol 6286 . 6298) (symbol 6229 . 6241) (symbol 6164 . 6176) (symbol 6097 . 6109) (symbol 6034 . 6046) (semantic-list 6029 . 6031) (symbol 5962 . 5974) (semantic-list 5957 . 5959) (symbol 5886 . 5898) (semantic-list 5881 . 5883) (symbol 5811 . 5823) (semantic-list 5806 . 5808) (symbol 5732 . 5744) (symbol 5682 . 5694) (symbol 5623 . 5635) (symbol 5571 . 5583) (symbol 5499 . 5511) (symbol 5432 . 5444) (semantic-list 5406 . 5408) (symbol 5343 . 5355) (semantic-list 5327 . 5329) (symbol 5263 . 5275) (symbol 5200 . 5212) (symbol 5149 . 5161) (symbol 5018 . 5030) (symbol 4954 . 4966) (symbol 4906 . 4918) (symbol 4860 . 4872) (symbol 4765 . 4777) (symbol 4672 . 4684) (symbol 4541 . 4560) (semantic-list 4517 . 4540) (symbol 4501 . 4517) (string 4518 . 4539) (symbol 4423 . 4435) (symbol 4357 . 4369) (symbol 4291 . 4303) (symbol 4227 . 4239) (symbol 4172 . 4184) (symbol 4122 . 4134) (symbol 4048 . 4060) (symbol 3975 . 3987) (symbol 3904 . 3916) (symbol 3841 . 3853) (symbol 3771 . 3783) (symbol 3698 . 3710) (symbol 3627 . 3639) (symbol 3557 . 3569) (symbol 3488 . 3500) (symbol 3415 . 3427) (symbol 3344 . 3356) (symbol 3250 . 3262) (symbol 3160 . 3172) (symbol 3105 . 3117) (symbol 3051 . 3063) (semantic-list 3021 . 3023) (symbol 2971 . 2983) (symbol 2931 . 2943) (symbol 2859 . 2871) (symbol 2789 . 2801) (symbol 2743 . 2755) (symbol 2700 . 2712) (symbol 2640 . 2652) (symbol 2589 . 2601) (symbol 2538 . 2550) (symbol 2495 . 2507) (symbol 2440 . 2452) (symbol 2387 . 2399) (symbol 2332 . 2344) (symbol 2290 . 2302) (symbol 2251 . 2263) (symbol 144 . 156))
      :lexical-table 
        '(("KSPCG" . ((string "\"cg\"" 1084 . 1088)))
          ("KSPPIPECGRR" . ((string "\"pipecgrr\"" 1174 . 1184)))
          ("KSPPIPEFGMRES" . ((string "\"pipefgmres\"" 1421 . 1433)))
          ("KSPPGMRES" . ((string "\"pgmres\"" 1557 . 1565)))
          ("KSPTFQMR" . ((string "\"tfqmr\"" 1804 . 1811)))
          ("KSPLSQR" . ((string "\"lsqr\"" 1892 . 1898)))
          ("KSPPREONLY" . ((string "\"preonly\"" 1921 . 1930)))
          ("KSP_NORM_MAX" . ((semantic-list "(KSP_NORM_NATURAL + 1)" 17674 . 17696)))
          ("KSPFGMRES" . ((string "\"fgmres\"" 1458 . 1466)))
          ("KSPPIPEGCR" . ((string "\"pipegcr\"" 2159 . 2168)))
          ("KSPSTCG" . ((string "\"stcg\"" 1271 . 1277)))
          ("KSPIBCGS" . ((string "\"ibcgs\"" 1649 . 1656)))
          ("KSPPIPECR" . ((string "\"pipecr\"" 1861 . 1869)))
          ("KSPGCR" . ((string "\"gcr\"" 2131 . 2136)))
          ("KSPDefaultConverged" . ((semantic-list "(KSPDefaultConverged, KSPConvergedDefault)" 26176 . 26218)))
          ("KSPDefaultConvergedDestroy" . ((semantic-list "(KSPDefaultConvergedDestroy, KSPConvergedDefaultDestroy)" 26388 . 26444)))
          ("KSPLGMRES" . ((string "\"lgmres\"" 1491 . 1499)))
          ("KSPQCG" . ((string "\"qcg\"" 1953 . 1958)))
          ("KSPBICG" . ((string "\"bicg\"" 1981 . 1987)))
          ("KSPSYMMLQ" . ((string "\"symmlq\"" 2041 . 2049)))
          ("KSPTSIRM" . ((string "\"tsirm\"" 2191 . 2198)))
          ("__PETSCKSP_H")
          ("KSPPIPECG" . ((string "\"pipecg\"" 1143 . 1151)))
          ("KSPCGNE" . ((string "\"cgne\"" 1209 . 1215)))
          ("KSPRICHARDSON" . ((string "\"richardson\"" 1015 . 1027)))
          ("KSPNASH" . ((string "\"nash\"" 1240 . 1246)))
          ("KSPCGS" . ((string "\"cgs\"" 1776 . 1781)))
          ("KSPGLTR" . ((string "\"gltr\"" 1302 . 1308)))
          ("KSPGMRES" . ((string "\"gmres\"" 1391 . 1398)))
          ("KSPFBCGS" . ((string "\"fbcgs\"" 1681 . 1688)))
          ("KSPMINRES" . ((string "\"minres\"" 2010 . 2018)))
          ("KSPDefaultConvergedCreate" . ((semantic-list "(KSPDefaultConvergedCreate, KSPConvergedDefaultCreate)" 26611 . 26665)))
          ("KSPCHEBYSHEV" . ((string "\"chebyshev\"" 1050 . 1061)))
          ("KSPPIPEFCG" . ((string "\"pipefcg\"" 1359 . 1368)))
          ("KSPLCD" . ((string "\"lcd\"" 2072 . 2077)))
          ("KSPGROPPCG" . ((string "\"groppcg\"" 1111 . 1120)))
          ("KSPFCG" . ((string "\"fcg\"" 1331 . 1336)))
          ("KSPBCGSL" . ((string "\"bcgsl\"" 1746 . 1753)))
          ("KSPDGMRES" . ((string "\"dgmres\"" 1524 . 1532)))
          ("KSPFBCGSR" . ((string "\"fbcgsr\"" 1713 . 1721)))
          ("KSPPYTHON" . ((string "\"python\"" 2100 . 2108)))
          ("KSPTCQMR" . ((string "\"tcqmr\"" 1588 . 1595)))
          ("KSP_FILE_CLASSID" . ((number "1211223" 16760 . 16767)))
          ("KSPSkipConverged" . ((semantic-list "(KSPSkipConverged, KSPConvergedSkip)" 27292 . 27328)))
          ("KSPCR" . ((string "\"cr\"" 1834 . 1838)))
          ("KSPDefaultConvergedSetUMIRNorm" . ((semantic-list "(KSPDefaultConvergedSetUMIRNorm, KSPConvergedDefaultSetUMIRNorm)" 27088 . 27152)))
          ("KSPBCGS" . ((string "\"bcgs\"" 1618 . 1624)))
          ("KSPCGLS" . ((string "\"cgls\"" 2221 . 2227)))
          ("KSPDefaultConvergedSetUIRNorm" . ((semantic-list "(KSPDefaultConvergedSetUIRNorm, KSPConvergedDefaultSetUIRNorm)" 26844 . 26906)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__PETSCPC_H" variable (:constant-flag t) nil [70 81])
            ("petscmat.h" include (:system-flag t) nil [82 103])
            ("petscpctypes.h" include (:system-flag t) nil [104 129])
            ("PCInitializePackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [179 184]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [144 185])
            ("PCList" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) nil [312 337])
            ("PC_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [374 398])
            ("PCCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [437 446])
                    ("" variable
                       (:pointer 1
                        :type ("PC" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [446 450]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [413 451])
            ("PCSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [490 493])
                    ("" variable (:type ("PCType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [493 500]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [465 501])
            ("PCGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [540 543])
                    ("" variable
                       (:pointer 1
                        :type ("PCType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [543 551]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [515 552])
            ("PCSetUp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [589 592]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [566 593])
            ("PCGetSetUpFailedReason" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [645 648])
                    ("" variable
                       (:pointer 1
                        :type ("PCFailedReason" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [648 664]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [607 665])
            ("PCSetUpOnBlocks" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [710 713]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [679 714])
            ("PCApply" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [751 754])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [754 758])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [758 762]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [728 763])
            ("PCApplySymmetricLeft" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [813 816])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [816 820])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [820 824]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [777 825])
            ("PCApplySymmetricRight" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [876 879])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [879 883])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [883 887]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [839 888])
            ("PCApplyBAorAB" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [931 934])
                    ("" variable (:type ("PCSide" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [934 941])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [941 945])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [945 949])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [949 953]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [902 954])
            ("PCApplyTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1000 1003])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1003 1007])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1007 1011]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [968 1012])
            ("PCApplyTransposeExists" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1064 1067])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1067 1079]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1026 1080])
            ("PCApplyBAorABTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1132 1135])
                    ("" variable (:type ("PCSide" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1135 1142])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1142 1146])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1146 1150])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1150 1154]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1094 1155])
            ("PCSetReusePreconditioner" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1209 1212])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1212 1222]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1169 1223])
            ("PCGetReusePreconditioner" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1277 1280])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1280 1291]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1237 1292])
            ("PCSetErrorIfFailure" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1341 1344])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1344 1354]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1306 1355])
            ("PC_FILE_CLASSID" variable (:constant-flag t) nil [1365 1380])
            ("PCApplyRichardson" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1436 1439])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1439 1443])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1443 1447])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1447 1451])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1451 1461])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1461 1471])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1471 1481])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1481 1490])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1490 1501])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1501 1511])
                    ("" variable
                       (:pointer 1
                        :type ("PCRichardsonConvergedReason" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1511 1540]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1403 1541])
            ("PCApplyRichardsonExists" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1594 1597])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1597 1609]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1555 1610])
            ("PCSetUseAmat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1652 1655])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1655 1665]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1624 1666])
            ("PCGetUseAmat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1708 1711])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1711 1722]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1680 1723])
            ("PCRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1765 1777])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1796 1799]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1739 1801])
            ("PCReset" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1839 1842]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1816 1843])
            ("PCDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PC" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1882 1886]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1857 1887])
            ("PCSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1933 1936]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1901 1937])
            ("PCFactorGetMatrix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1985 1988])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1988 1993]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1952 1994])
            ("PCSetModifySubMatrices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2046 2049])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2067 2070])
                            ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2070 2079])
                            ("" variable
                               (:constant-flag t
                                :type ("IS" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2079 2089])
                            ("" variable
                               (:constant-flag t
                                :type ("IS" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2090 2100])
                            ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2101 2106])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [2107 2113]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [2114 2120]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2008 2121])
            ("PCModifySubMatrices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2170 2173])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2173 2182])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2182 2192])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2193 2203])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2204 2209])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [2210 2216]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2135 2217])
            ("PCSetOperators" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2262 2265])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2265 2269])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2269 2273]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2232 2274])
            ("PCGetOperators" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2318 2321])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2321 2326])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2326 2331]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2288 2332])
            ("PCGetOperatorsSet" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2379 2382])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2382 2394])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2394 2406]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2346 2407])
            ("PCView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2444 2447])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2447 2459]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2422 2460])
            ("PCLoad" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2496 2499])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2499 2511]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2474 2512])
            ("PCViewFromOptions" function
               (:arguments 
                  ( ("A" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2566 2571])
                    ("obj" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2571 2587])
                    ("name" variable
                       (:dereference 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2587 2605]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2533 2667])
            ("PCSetOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2716 2719])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2719 2731]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2682 2733])
            ("PCAppendOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2784 2787])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2787 2799]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2747 2801])
            ("PCGetOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2849 2852])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2852 2865]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2815 2867])
            ("PCComputeExplicitOperator" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2923 2926])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2926 2931]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2882 2932])
            ("PCGetDiagonalScale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3106 3109])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3109 3121]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3072 3122])
            ("PCDiagonalScaleLeft" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3171 3174])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3174 3178])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3178 3182]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3136 3183])
            ("PCDiagonalScaleRight" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3233 3236])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3236 3240])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3240 3244]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3197 3245])
            ("PCSetDiagonalScale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3293 3296])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3296 3300]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3259 3301])
            ("PCJacobiSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3425 3428])
                    ("" variable (:type ("PCJacobiType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3428 3441]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3394 3442])
            ("PCJacobiGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3487 3490])
                    ("" variable
                       (:pointer 1
                        :type ("PCJacobiType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3490 3504]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3456 3505])
            ("PCJacobiSetUseAbs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3552 3555])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3555 3565]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3519 3566])
            ("PCJacobiGetUseAbs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3613 3616])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3616 3627]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3580 3628])
            ("PCSORSetSymmetric" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3675 3678])
                    ("" variable (:type ("MatSORType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3678 3689]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3642 3690])
            ("PCSORGetSymmetric" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3737 3740])
                    ("" variable
                       (:pointer 1
                        :type ("MatSORType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3740 3752]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3704 3753])
            ("PCSORSetOmega" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3796 3799])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3799 3809]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3767 3810])
            ("PCSORGetOmega" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3853 3856])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3856 3867]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3824 3868])
            ("PCSORSetIterations" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3916 3919])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3919 3928])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3928 3937]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3882 3938])
            ("PCSORGetIterations" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3986 3989])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3989 3999])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3999 4009]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3952 4010])
            ("PCEisenstatSetOmega" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4060 4063])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4063 4073]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4025 4074])
            ("PCEisenstatGetOmega" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4123 4126])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4126 4137]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4088 4138])
            ("PCEisenstatSetNoDiagonalScaling" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4199 4202])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4202 4212]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4152 4213])
            ("PCEisenstatGetNoDiagonalScaling" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4274 4277])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4277 4288]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4227 4289])
            ("PCBJacobiSetTotalBlocks" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4343 4346])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4346 4355])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4355 4371]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4304 4373])
            ("PCBJacobiGetTotalBlocks" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4426 4429])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4429 4439])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4439 4456]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4387 4458])
            ("PCBJacobiSetLocalBlocks" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4511 4514])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4514 4523])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4523 4539]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4472 4541])
            ("PCBJacobiGetLocalBlocks" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4594 4597])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4597 4607])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4607 4624]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4555 4626])
            ("PCShellSetApply" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4672 4675])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4694 4697])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4697 4701])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4701 4705]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4641 4707])
            ("PCShellSetApplySymmetricLeft" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4765 4768])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4787 4790])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4790 4794])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4794 4798]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4721 4800])
            ("PCShellSetApplySymmetricRight" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4859 4862])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4881 4884])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4884 4888])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4888 4892]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4814 4894])
            ("PCShellSetApplyBA" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4941 4944])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4963 4966])
                            ("" variable (:type ("PCSide" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4966 4973])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4973 4977])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4977 4981])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4981 4985]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4908 4987])
            ("PCShellSetApplyTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5041 5044])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5063 5066])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5066 5070])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5070 5074]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5001 5076])
            ("PCShellSetSetUp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5121 5124])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5143 5146]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5090 5148])
            ("PCShellSetApplyRichardson" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5203 5206])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5225 5228])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5228 5232])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5232 5236])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5236 5240])
                            ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5240 5250])
                            ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5250 5260])
                            ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5260 5270])
                            ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5270 5279])
                            ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5279 5290])
                            ("" variable
                               (:pointer 1
                                :type ("PetscInt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5290 5300])
                            ("" variable
                               (:pointer 1
                                :type ("PCRichardsonConvergedReason" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5300 5329]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5162 5331])
            ("PCShellSetView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5375 5378])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5397 5400])
                            ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5400 5412]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5345 5414])
            ("PCShellSetDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5461 5464])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5483 5486]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5428 5488])
            ("PCShellSetContext" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5535 5538])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [5538 5544]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5502 5545])
            ("PCShellGetContext" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5592 5595])
                    ("" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) [5595 5602]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5559 5603])
            ("PCShellSetName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5647 5650])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5650 5662]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5617 5664])
            ("PCShellGetName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5708 5711])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5711 5724]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5678 5726])
            ("PCFactorSetZeroPivot" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5777 5780])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5780 5790]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5741 5791])
            ("PCFactorSetShiftType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5842 5845])
                    ("" variable (:type ("MatFactorShiftType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5845 5864]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5806 5865])
            ("PCFactorSetShiftAmount" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5917 5920])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5920 5930]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5879 5931])
            ("PCFactorSetMatSolverPackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5989 5992])
                    ("" variable
                       (:constant-flag t
                        :type ("MatSolverPackage" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5992 6015]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5946 6016])
            ("PCFactorGetMatSolverPackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6073 6076])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MatSolverPackage" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6076 6100]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6030 6101])
            ("PCFactorSetUpMatSolverPackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6160 6163]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6115 6164])
            ("PCFactorSetFill" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6210 6213])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6213 6223]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6179 6224])
            ("PCFactorSetColumnPivot" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6276 6279])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6279 6289]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6238 6290])
            ("PCFactorReorderForNonzeroDiagonal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6353 6356])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6356 6366]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6304 6367])
            ("PCFactorSetMatOrderingType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6424 6427])
                    ("" variable (:type ("MatOrderingType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6427 6443]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6382 6444])
            ("PCFactorSetReuseOrdering" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6498 6501])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6501 6512]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6458 6513])
            ("PCFactorSetReuseFill" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6563 6566])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6566 6577]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6527 6578])
            ("PCFactorSetUseInPlace" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6629 6632])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6632 6642]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6592 6643])
            ("PCFactorGetUseInPlace" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6694 6697])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6697 6708]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6657 6709])
            ("PCFactorSetAllowDiagonalFill" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6767 6770])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6770 6780]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6723 6781])
            ("PCFactorGetAllowDiagonalFill" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6839 6842])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6842 6853]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6795 6854])
            ("PCFactorSetPivotInBlocks" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6908 6911])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6911 6921]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6868 6922])
            ("PCFactorSetLevels" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6970 6973])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6973 6982]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6937 6983])
            ("PCFactorGetLevels" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7030 7033])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7033 7043]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6997 7044])
            ("PCFactorSetDropTolerance" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7098 7101])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7101 7111])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7111 7121])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7121 7130]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7058 7131])
            ("PCFactorGetZeroPivot" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7181 7184])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7184 7195]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7145 7196])
            ("PCFactorGetShiftAmount" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7248 7251])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7251 7262]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7210 7263])
            ("PCFactorGetShiftType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7313 7316])
                    ("" variable
                       (:pointer 1
                        :type ("MatFactorShiftType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7316 7336]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7277 7337])
            ("PCASMSetLocalSubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7391 7394])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7394 7403])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7403 7407])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7408 7412]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7352 7414])
            ("PCASMSetTotalSubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7467 7470])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7470 7479])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7479 7483])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7484 7488]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7428 7490])
            ("PCASMSetOverlap" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7535 7538])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7538 7547]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7504 7548])
            ("PCASMSetDMSubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7598 7601])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7601 7611]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7562 7612])
            ("PCASMGetDMSubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7662 7665])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7665 7676]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7626 7677])
            ("PCASMSetSortIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7726 7729])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7729 7739]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7691 7740])
            ("PCASMSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7783 7786])
                    ("" variable (:type ("PCASMType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7786 7796]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7755 7797])
            ("PCASMGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7839 7842])
                    ("" variable
                       (:pointer 1
                        :type ("PCASMType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7842 7853]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7811 7854])
            ("PCASMSetLocalType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7901 7904])
                    ("" variable (:type ("PCCompositeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7904 7920]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7868 7921])
            ("PCASMGetLocalType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7968 7971])
                    ("" variable
                       (:pointer 1
                        :type ("PCCompositeType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7971 7988]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7935 7989])
            ("PCASMCreateSubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8040 8044])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8044 8053])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8053 8058]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8003 8060])
            ("PCASMDestroySubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8112 8121])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8121 8125])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8126 8130]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8074 8132])
            ("PCASMCreateSubdomains2D" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8185 8194])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8194 8203])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8203 8212])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8212 8221])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8221 8230])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8230 8239])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8239 8249])
                    ("" variable
                       (:pointer 2
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8249 8254])
                    ("" variable
                       (:pointer 2
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8254 8259]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8146 8260])
            ("PCASMGetLocalSubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8313 8316])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8316 8326])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8326 8331])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8332 8337]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8274 8339])
            ("PCASMGetLocalSubmatrices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8393 8396])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8396 8406])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8406 8412]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8353 8414])
            ("PCGASMSetTotalSubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8469 8472])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8472 8481]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8429 8482])
            ("PCGASMSetSubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8531 8534])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8534 8543])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8543 8547])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8548 8552]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8496 8554])
            ("PCGASMSetOverlap" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8600 8603])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8603 8612]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8568 8613])
            ("PCGASMSetUseDMSubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8667 8670])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8670 8680]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8627 8681])
            ("PCGASMGetUseDMSubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8735 8738])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8738 8749]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8695 8750])
            ("PCGASMSetSortIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8800 8803])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8803 8814]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8764 8815])
            ("PCGASMSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8859 8862])
                    ("" variable (:type ("PCGASMType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8862 8873]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8830 8874])
            ("PCGASMCreateSubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8926 8930])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8930 8939])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8939 8949])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8949 8954]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8888 8956])
            ("PCGASMDestroySubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9009 9018])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9018 9023])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9024 9029]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8970 9031])
            ("PCGASMCreateSubdomains2D" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9085 9088])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9088 9097])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9097 9106])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9106 9115])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9115 9124])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9124 9133])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9133 9142])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9142 9152])
                    ("" variable
                       (:pointer 2
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9152 9157])
                    ("" variable
                       (:pointer 2
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9157 9162]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9045 9163])
            ("PCGASMGetSubdomains" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9212 9215])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9215 9225])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9225 9230])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9231 9236]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9177 9238])
            ("PCGASMGetSubmatrices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9288 9291])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9291 9301])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9301 9307]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9252 9309])
            ("PCCompositeSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9358 9361])
                    ("" variable (:type ("PCCompositeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9361 9377]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9324 9378])
            ("PCCompositeGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9426 9429])
                    ("" variable
                       (:pointer 1
                        :type ("PCCompositeType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9429 9446]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9392 9447])
            ("PCCompositeAddPC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9493 9496])
                    ("" variable (:type ("PCType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9496 9503]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9461 9504])
            ("PCCompositeGetNumberPC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9556 9559])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9559 9570]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9518 9571])
            ("PCCompositeGetPC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9617 9620])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9620 9629])
                    ("" variable
                       (:pointer 1
                        :type ("PC" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9629 9634]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9585 9635])
            ("PCCompositeSpecialSetAlpha" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9691 9694])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9694 9706]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9649 9707])
            ("PCRedundantSetNumber" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9758 9761])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9761 9770]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9722 9771])
            ("PCRedundantSetScatter" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9822 9825])
                    ("" variable (:type ("VecScatter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9825 9836])
                    ("" variable (:type ("VecScatter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9836 9847]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9785 9848])
            ("PCRedundantGetOperators" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9901 9904])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9904 9909])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9909 9914]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9862 9915])
            ("PCSPAISetEpsilon" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9962 9965])
                    ("" variable (:type "double") (reparse-symbol arg-sub-list) [9965 9972]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9930 9973])
            ("PCSPAISetNBSteps" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10019 10022])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10022 10031]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9987 10032])
            ("PCSPAISetMax" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10074 10077])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10077 10086]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10046 10087])
            ("PCSPAISetMaxNew" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10132 10135])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10135 10144]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10101 10145])
            ("PCSPAISetBlockSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10193 10196])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10196 10205]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10159 10206])
            ("PCSPAISetCacheSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10254 10257])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10257 10266]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10220 10267])
            ("PCSPAISetVerbose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10313 10316])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10316 10325]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10281 10326])
            ("PCSPAISetSp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10367 10370])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10370 10379]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10340 10380])
            ("PCHYPRESetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10425 10428])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [10428 10440]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10395 10442])
            ("PCHYPREGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10486 10489])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [10489 10502]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10456 10504])
            ("PCHYPRESetDiscreteGradient" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10560 10563])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10563 10567]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10518 10568])
            ("PCHYPRESetDiscreteCurl" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10620 10623])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10623 10627]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10582 10628])
            ("PCHYPRESetEdgeConstantVectors" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10687 10690])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10690 10694])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10694 10698])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10698 10702]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10642 10703])
            ("PCHYPRESetAlphaPoissonMatrix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10761 10764])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10764 10768]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10717 10769])
            ("PCHYPRESetBetaPoissonMatrix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10826 10829])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10829 10833]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10783 10834])
            ("PCBJacobiGetLocalBlocks" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10887 10890])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10890 10900])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10900 10917]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10848 10919])
            ("PCBJacobiGetTotalBlocks" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10972 10975])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10975 10985])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10985 11002]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10933 11004])
            ("PCFieldSplitSetFields" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11056 11059])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [11059 11071])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11072 11081])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11081 11097])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11097 11113]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11019 11114])
            ("PCFieldSplitSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11163 11166])
                    ("" variable (:type ("PCCompositeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11166 11182]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11128 11183])
            ("PCFieldSplitGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11232 11235])
                    ("" variable
                       (:pointer 1
                        :type ("PCCompositeType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11235 11252]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11197 11253])
            ("PCFieldSplitSetBlockSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11307 11310])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11310 11319]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11267 11320])
            ("PCFieldSplitSetIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11367 11370])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [11370 11382])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11383 11386]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11334 11387])
            ("PCFieldSplitGetIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11434 11437])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [11437 11449])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11450 11454]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11401 11455])
            ("PCFieldSplitRestrictIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11507 11510])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11510 11513]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11469 11514])
            ("PCFieldSplitSetDMSplits" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11567 11570])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11570 11580]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11528 11581])
            ("PCFieldSplitGetDMSplits" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11634 11637])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11637 11648]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11595 11649])
            ("PCFieldSplitSetDiagUseAmat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11705 11708])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11708 11718]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11663 11719])
            ("PCFieldSplitGetDiagUseAmat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11775 11778])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11778 11789]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11733 11790])
            ("PCFieldSplitSetOffDiagUseAmat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11849 11852])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11852 11862]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11804 11863])
            ("PCFieldSplitGetOffDiagUseAmat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11922 11925])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11925 11936]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11877 11937])
            ("PCFieldSplitSchurPrecondition" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12045 12048])
                    ("" variable (:type ("PCFieldSplitSchurPreType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12048 12073])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12073 12077]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12000 12078])
            ("PCFieldSplitSetSchurPre" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12131 12134])
                    ("" variable (:type ("PCFieldSplitSchurPreType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12134 12159])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12159 12163]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12092 12164])
            ("PCFieldSplitGetSchurPre" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12217 12220])
                    ("" variable
                       (:pointer 1
                        :type ("PCFieldSplitSchurPreType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12220 12246])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12246 12251]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12178 12252])
            ("PCFieldSplitSetSchurFactType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12310 12313])
                    ("" variable (:type ("PCFieldSplitSchurFactType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12313 12339]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12266 12340])
            ("PCFieldSplitGetSchurBlocks" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12396 12399])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12399 12404])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12404 12409])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12409 12414])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12414 12419]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12354 12420])
            ("PCFieldSplitSchurGetS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12471 12474])
                    ("S" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12474 12481]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12434 12482])
            ("PCFieldSplitSchurRestoreS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12537 12540])
                    ("S" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12540 12547]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12496 12548])
            ("PCGalerkinSetRestriction" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12603 12606])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12606 12610]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12563 12611])
            ("PCGalerkinSetInterpolation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12667 12670])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12670 12674]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12625 12675])
            ("PCSetCoordinates" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12722 12725])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12725 12734])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12734 12743])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12743 12754]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12690 12755])
            ("PCPythonSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12801 12804])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [12804 12816]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12770 12818])
            ("PCSetDM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12856 12859])
                    ("" variable (:type ("DM" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12859 12862]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12833 12863])
            ("PCGetDM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12900 12903])
                    ("" variable
                       (:pointer 1
                        :type ("DM" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12903 12907]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12877 12908])
            ("PCSetApplicationContext" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12962 12965])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [12965 12971]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12923 12972])
            ("PCGetApplicationContext" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13025 13028])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [13028 13034]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12986 13035])
            ("PCBiCGStabCUSPSetTolerance" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13092 13095])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13095 13105]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13050 13106])
            ("PCBiCGStabCUSPSetIterations" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13163 13166])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13166 13175]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13120 13176])
            ("PCBiCGStabCUSPSetUseVerboseMonitor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13240 13243])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13243 13253]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13190 13254])
            ("PCAINVCUSPSetDropTolerance" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13311 13314])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13314 13324]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13269 13325])
            ("PCAINVCUSPUseScaling" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13375 13378])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13378 13388]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13339 13389])
            ("PCAINVCUSPSetNonzeros" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13440 13443])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13443 13452]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13403 13453])
            ("PCAINVCUSPSetLinParameter" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13508 13511])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13511 13520]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13467 13521])
            ("PCPARMSSetGlobal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13568 13571])
                    ("" variable (:type ("PCPARMSGlobalType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13571 13589]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13536 13590])
            ("PCPARMSSetLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13635 13638])
                    ("" variable (:type ("PCPARMSLocalType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13638 13655]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13604 13656])
            ("PCPARMSSetSolveTolerances" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13711 13714])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13714 13724])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13724 13733]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13670 13734])
            ("PCPARMSSetSolveRestart" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13786 13789])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13789 13798]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13748 13799])
            ("PCPARMSSetNonsymPerm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13849 13852])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13852 13862]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13813 13863])
            ("PCPARMSSetFill" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13907 13910])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13910 13919])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13919 13928])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13928 13937]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13877 13938])
            ("PCGAMGSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13983 13986])
                    ("" variable (:type ("PCGAMGType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13986 13997]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13953 13998])
            ("PCGAMGGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14042 14045])
                    ("" variable
                       (:pointer 1
                        :type ("PCGAMGType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14045 14057]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14012 14058])
            ("PCGAMGSetProcEqLim" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14106 14109])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14109 14118]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14072 14119])
            ("PCGAMGSetRepartitioning" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14172 14175])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14175 14185]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14133 14186])
            ("PCGAMGSetUseASMAggs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14235 14238])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14238 14248]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14200 14249])
            ("PCGAMGSetSolverType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14298 14301])
                    ("" variable (:type "char") (reparse-symbol arg-sub-list) [14301 14307])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14308 14317]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14263 14318])
            ("PCGAMGSetThreshold" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14366 14369])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14369 14379]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14332 14380])
            ("PCGAMGSetCoarseEqLim" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14430 14433])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14433 14442]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14394 14443])
            ("PCGAMGSetNlevels" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14489 14492])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14492 14501]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14457 14502])
            ("PCGAMGSetNSmooths" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14549 14552])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14552 14561]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14516 14562])
            ("PCGAMGSetSymGraph" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14609 14612])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14612 14622]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14576 14623])
            ("PCGAMGSetSquareGraph" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14673 14676])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14676 14685]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14637 14686])
            ("PCGAMGSetReuseInterpolation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14743 14746])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14746 14756]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14700 14757])
            ("PCGAMGFinalizePackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [14808 14813]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14771 14814])
            ("PCGAMGInitializePackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [14867 14872]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14828 14873])
            ("PCGAMGRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PCGAMGType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14917 14928])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14947 14950]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14887 14952])
            ("PCGAMGClassicalSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15005 15008])
                    ("" variable (:type ("PCGAMGClassicalType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15008 15028]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14967 15029])
            ("PCGAMGClassicalGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15081 15084])
                    ("" variable
                       (:pointer 1
                        :type ("PCGAMGClassicalType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15084 15105]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15043 15106])
            ("PCBDDCSetChangeOfBasisMat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15162 15165])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15165 15169]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15121 15170])
            ("PCBDDCSetPrimalVerticesLocalIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15230 15233])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15233 15236]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15184 15237])
            ("PCBDDCSetCoarseningRatio" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15291 15294])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15294 15303]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15251 15304])
            ("PCBDDCSetLevels" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15349 15352])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15352 15361]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15318 15362])
            ("PCBDDCSetNullSpace" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15410 15413])
                    ("" variable (:type ("MatNullSpace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15413 15426]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15376 15427])
            ("PCBDDCSetDirichletBoundaries" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15485 15488])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15488 15491]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15441 15492])
            ("PCBDDCSetDirichletBoundariesLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15555 15558])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15558 15561]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15506 15562])
            ("PCBDDCGetDirichletBoundaries" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15620 15623])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15623 15627]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15576 15628])
            ("PCBDDCGetDirichletBoundariesLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15691 15694])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15694 15698]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15642 15699])
            ("PCBDDCSetNeumannBoundaries" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15755 15758])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15758 15761]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15713 15762])
            ("PCBDDCSetNeumannBoundariesLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15823 15826])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15826 15829]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15776 15830])
            ("PCBDDCGetNeumannBoundaries" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15886 15889])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15889 15893]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15844 15894])
            ("PCBDDCGetNeumannBoundariesLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15955 15958])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15958 15962]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15908 15963])
            ("PCBDDCSetDofsSplitting" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16015 16018])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16018 16027])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16027 16031]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15977 16033])
            ("PCBDDCSetDofsSplittingLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16090 16093])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16093 16102])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16102 16106]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16047 16108])
            ("PCBDDCSetLocalAdjacencyGraph" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16166 16169])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16169 16178])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16178 16194])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16195 16211])
                    ("" variable (:type ("PetscCopyMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16212 16226]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16122 16227])
            ("PCBDDCCreateFETIDPOperators" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16284 16287])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16287 16292])
                    ("" variable
                       (:pointer 1
                        :type ("PC" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16292 16296]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16241 16297])
            ("PCBDDCMatFETIDPGetRHS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16348 16352])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16352 16356])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16356 16360]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16311 16361])
            ("PCBDDCMatFETIDPGetSolution" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16417 16421])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16421 16425])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16425 16429]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16375 16430])
            ("PCISSetUseStiffnessScaling" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16487 16490])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16490 16500]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16445 16501])
            ("PCISSetSubdomainScalingFactor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16560 16563])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16563 16575]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16515 16576])
            ("PCISSetSubdomainDiagonalScaling" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16637 16640])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16640 16644]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16590 16645])
            ("PetscMGLevelId" variable (:type ("PetscInt" type (:type "class") nil nil)) nil [16660 16684])
            ("PCMGSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16725 16728])
                    ("" variable (:type ("PCMGType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16728 16737]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16698 16738])
            ("PCMGGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16779 16782])
                    ("" variable
                       (:pointer 1
                        :type ("PCMGType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16782 16792]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16752 16793])
            ("PCMGSetLevels" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16836 16839])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16839 16848])
                    ("" variable
                       (:pointer 1
                        :type ("MPI_Comm" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16848 16858]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16807 16859])
            ("PCMGGetLevels" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16902 16905])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16905 16915]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16873 16916])
            ("PCMGSetNumberSmoothUp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16968 16971])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16971 16980]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16931 16981])
            ("PCMGSetNumberSmoothDown" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17034 17037])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17037 17046]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16995 17047])
            ("PCMGSetCycleType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17093 17096])
                    ("" variable (:type ("PCMGCycleType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17096 17110]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17061 17111])
            ("PCMGSetCycleTypeOnLevel" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17164 17167])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17167 17176])
                    ("" variable (:type ("PCMGCycleType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17176 17190]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17125 17191])
            ("PCMGSetCyclesOnLevel" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17241 17244])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17244 17253])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17253 17262]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17205 17263])
            ("PCMGMultiplicativeSetCycles" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17320 17323])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17323 17332]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17277 17333])
            ("PCMGSetGalerkin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17378 17381])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17381 17391]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17347 17392])
            ("PCMGGetGalerkin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17437 17440])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17440 17451]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17406 17452])
            ("PCMGSetRhs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17493 17496])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17496 17505])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17505 17509]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17467 17510])
            ("PCMGSetX" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17548 17551])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17551 17560])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17560 17564]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17524 17565])
            ("PCMGSetR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17603 17606])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17606 17615])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17615 17619]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17579 17620])
            ("PCMGSetRestriction" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17669 17672])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17672 17681])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17681 17685]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17635 17686])
            ("PCMGGetRestriction" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17734 17737])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17737 17746])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17746 17751]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17700 17752])
            ("PCMGSetInterpolation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17802 17805])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17805 17814])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17814 17818]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17766 17819])
            ("PCMGGetInterpolation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17869 17872])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17872 17881])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17881 17886]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17833 17887])
            ("PCMGSetRScale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17930 17933])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17933 17942])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17942 17946]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17901 17947])
            ("PCMGGetRScale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17990 17993])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17993 18002])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18002 18007]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17961 18008])
            ("PCMGSetResidual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18053 18056])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18056 18065])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18084 18088])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18088 18092])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18092 18096])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18096 18100]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18101 18105]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18022 18106])
            ("PCMGResidualDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18155 18159])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18159 18163])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18163 18167])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18167 18171]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18120 18172])
            ("PCTelescopeGetReductionFactor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18232 18235])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18235 18245]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18187 18246])
            ("PCTelescopeSetReductionFactor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18305 18308])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18308 18317]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18260 18318])
            ("PCTelescopeGetIgnoreDM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18370 18373])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18373 18384]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18332 18385])
            ("PCTelescopeSetIgnoreDM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18437 18440])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18440 18450]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18399 18451])
            ("PCTelescopeGetIgnoreKSPComputeOperators" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18520 18523])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18523 18534]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18465 18535])
            ("PCTelescopeSetIgnoreKSPComputeOperators" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18604 18607])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18607 18617]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18549 18618])
            ("PCTelescopeGetDM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18664 18667])
                    ("" variable
                       (:pointer 1
                        :type ("DM" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18667 18671]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18632 18672]))          
      :file "petscpc.h"
      :pointmax 18699
      :fsize 18698
      :lastmodtime '(22513 48468 0 0)
      :unmatched-syntax '((symbol 18619 . 18631) (symbol 18536 . 18548) (symbol 18452 . 18464) (symbol 18386 . 18398) (symbol 18319 . 18331) (symbol 18247 . 18259) (symbol 18174 . 18186) (symbol 18107 . 18119) (symbol 18009 . 18021) (symbol 17948 . 17960) (symbol 17888 . 17900) (symbol 17820 . 17832) (symbol 17753 . 17765) (symbol 17687 . 17699) (symbol 17622 . 17634) (symbol 17566 . 17578) (symbol 17511 . 17523) (symbol 17454 . 17466) (symbol 17393 . 17405) (symbol 17334 . 17346) (symbol 17264 . 17276) (symbol 17192 . 17204) (symbol 17112 . 17124) (symbol 17048 . 17060) (symbol 16982 . 16994) (symbol 16918 . 16930) (symbol 16860 . 16872) (symbol 16794 . 16806) (symbol 16739 . 16751) (symbol 16685 . 16697) (symbol 16647 . 16659) (symbol 16577 . 16589) (symbol 16502 . 16514) (symbol 16432 . 16444) (symbol 16362 . 16374) (symbol 16298 . 16310) (symbol 16228 . 16240) (semantic-list 16209 . 16211) (semantic-list 16192 . 16194) (symbol 16109 . 16121) (semantic-list 16104 . 16106) (symbol 16034 . 16046) (semantic-list 16029 . 16031) (symbol 15964 . 15976) (symbol 15895 . 15907) (symbol 15831 . 15843) (symbol 15763 . 15775) (symbol 15700 . 15712) (symbol 15629 . 15641) (symbol 15563 . 15575) (symbol 15493 . 15505) (symbol 15428 . 15440) (symbol 15363 . 15375) (symbol 15305 . 15317) (symbol 15238 . 15250) (symbol 15171 . 15183) (symbol 15108 . 15120) (symbol 15030 . 15042) (symbol 14954 . 14966) (symbol 14874 . 14886) (symbol 14815 . 14827) (symbol 14758 . 14770) (symbol 14687 . 14699) (symbol 14624 . 14636) (symbol 14563 . 14575) (symbol 14503 . 14515) (symbol 14444 . 14456) (symbol 14381 . 14393) (symbol 14319 . 14331) (semantic-list 14305 . 14307) (symbol 14250 . 14262) (symbol 14187 . 14199) (symbol 14120 . 14132) (symbol 14059 . 14071) (symbol 13999 . 14011) (symbol 13940 . 13952) (symbol 13864 . 13876) (symbol 13800 . 13812) (symbol 13735 . 13747) (symbol 13657 . 13669) (symbol 13591 . 13603) (symbol 13523 . 13535) (symbol 13454 . 13466) (symbol 13390 . 13402) (symbol 13326 . 13338) (symbol 13256 . 13268) (symbol 13177 . 13189) (symbol 13107 . 13119) (symbol 13037 . 13049) (symbol 12973 . 12985) (symbol 12910 . 12922) (symbol 12864 . 12876) (symbol 12820 . 12832) (semantic-list 12814 . 12816) (symbol 12757 . 12769) (symbol 12677 . 12689) (symbol 12612 . 12624) (symbol 12550 . 12562) (symbol 12483 . 12495) (symbol 12421 . 12433) (symbol 12341 . 12353) (symbol 12253 . 12265) (symbol 12165 . 12177) (symbol 12079 . 12091) (semantic-list 11968 . 11999) (symbol 11952 . 11968) (string 11969 . 11998) (symbol 11939 . 11951) (string 11969 . 11998) (symbol 11864 . 11876) (symbol 11791 . 11803) (symbol 11720 . 11732) (symbol 11650 . 11662) (symbol 11582 . 11594) (symbol 11515 . 11527) (symbol 11456 . 11468) (semantic-list 11447 . 11449) (symbol 11388 . 11400) (semantic-list 11380 . 11382) (symbol 11321 . 11333) (symbol 11254 . 11266) (symbol 11184 . 11196) (symbol 11115 . 11127) (semantic-list 11069 . 11071) (symbol 11006 . 11018) (semantic-list 11000 . 11002) (symbol 10920 . 10932) (semantic-list 10915 . 10917) (symbol 10835 . 10847) (symbol 10770 . 10782) (symbol 10704 . 10716) (symbol 10629 . 10641) (symbol 10569 . 10581) (symbol 10505 . 10517) (semantic-list 10500 . 10502) (symbol 10443 . 10455) (semantic-list 10438 . 10440) (symbol 10382 . 10394) (symbol 10327 . 10339) (symbol 10268 . 10280) (symbol 10207 . 10219) (symbol 10146 . 10158) (symbol 10088 . 10100) (symbol 10033 . 10045) (symbol 9974 . 9986) (symbol 9917 . 9929) (symbol 9849 . 9861) (symbol 9772 . 9784) (symbol 9709 . 9721) (symbol 9636 . 9648) (symbol 9572 . 9584) (symbol 9505 . 9517) (symbol 9448 . 9460) (symbol 9379 . 9391) (symbol 9311 . 9323) (semantic-list 9305 . 9307) (symbol 9239 . 9251) (semantic-list 9234 . 9236) (semantic-list 9228 . 9230) (symbol 9164 . 9176) (symbol 9032 . 9044) (semantic-list 9027 . 9029) (semantic-list 9021 . 9023) (symbol 8957 . 8969) (semantic-list 8952 . 8954) (symbol 8875 . 8887) (symbol 8817 . 8829) (symbol 8751 . 8763) (symbol 8682 . 8694) (symbol 8614 . 8626) (symbol 8555 . 8567) (semantic-list 8550 . 8552) (semantic-list 8545 . 8547) (symbol 8483 . 8495) (symbol 8416 . 8428) (semantic-list 8410 . 8412) (symbol 8340 . 8352) (semantic-list 8335 . 8337) (semantic-list 8329 . 8331) (symbol 8261 . 8273) (symbol 8133 . 8145) (semantic-list 8128 . 8130) (semantic-list 8123 . 8125) (symbol 8061 . 8073) (semantic-list 8056 . 8058) (symbol 7990 . 8002) (symbol 7922 . 7934) (symbol 7855 . 7867) (symbol 7798 . 7810) (symbol 7742 . 7754) (symbol 7678 . 7690) (symbol 7613 . 7625) (symbol 7549 . 7561) (symbol 7491 . 7503) (semantic-list 7486 . 7488) (semantic-list 7481 . 7483) (symbol 7415 . 7427) (semantic-list 7410 . 7412) (semantic-list 7405 . 7407) (symbol 7339 . 7351) (symbol 7264 . 7276) (symbol 7197 . 7209) (symbol 7132 . 7144) (symbol 7045 . 7057) (symbol 6984 . 6996) (symbol 6924 . 6936) (symbol 6855 . 6867) (symbol 6782 . 6794) (symbol 6710 . 6722) (symbol 6644 . 6656) (symbol 6579 . 6591) (symbol 6514 . 6526) (symbol 6445 . 6457) (symbol 6369 . 6381) (symbol 6291 . 6303) (symbol 6225 . 6237) (symbol 6166 . 6178) (symbol 6102 . 6114) (symbol 6017 . 6029) (symbol 5933 . 5945) (symbol 5866 . 5878) (symbol 5793 . 5805) (symbol 5728 . 5740) (semantic-list 5722 . 5724) (symbol 5665 . 5677) (semantic-list 5660 . 5662) (symbol 5604 . 5616) (symbol 5546 . 5558) (symbol 5489 . 5501) (symbol 5415 . 5427) (symbol 5332 . 5344) (symbol 5149 . 5161) (symbol 5077 . 5089) (symbol 4988 . 5000) (symbol 4895 . 4907) (symbol 4801 . 4813) (symbol 4708 . 4720) (symbol 4628 . 4640) (semantic-list 4622 . 4624) (symbol 4542 . 4554) (semantic-list 4537 . 4539) (symbol 4459 . 4471) (semantic-list 4454 . 4456) (symbol 4374 . 4386) (semantic-list 4369 . 4371) (symbol 4291 . 4303) (symbol 4214 . 4226) (symbol 4139 . 4151) (symbol 4075 . 4087) (symbol 4012 . 4024) (symbol 3939 . 3951) (symbol 3869 . 3881) (symbol 3811 . 3823) (symbol 3754 . 3766) (symbol 3691 . 3703) (symbol 3629 . 3641) (symbol 3567 . 3579) (symbol 3506 . 3518) (symbol 3443 . 3455) (symbol 3381 . 3393) (symbol 3246 . 3258) (symbol 3184 . 3196) (symbol 3123 . 3135) (symbol 3059 . 3071) (symbol 2869 . 2881) (semantic-list 2863 . 2865) (symbol 2802 . 2814) (semantic-list 2797 . 2799) (symbol 2734 . 2746) (semantic-list 2729 . 2731) (symbol 2669 . 2681) (symbol 2513 . 2532) (symbol 2461 . 2473) (symbol 2409 . 2421) (symbol 2333 . 2345) (symbol 2275 . 2287) (symbol 2219 . 2231) (semantic-list 2207 . 2209) (semantic-list 2201 . 2203) (semantic-list 2190 . 2192) (symbol 2122 . 2134) (semantic-list 2104 . 2106) (semantic-list 2098 . 2100) (semantic-list 2087 . 2089) (symbol 1995 . 2007) (symbol 1939 . 1951) (symbol 1888 . 1900) (symbol 1844 . 1856) (symbol 1803 . 1815) (semantic-list 1775 . 1777) (symbol 1726 . 1738) (symbol 1667 . 1679) (symbol 1611 . 1623) (symbol 1542 . 1554) (symbol 1390 . 1402) (symbol 1293 . 1305) (symbol 1224 . 1236) (symbol 1156 . 1168) (symbol 1081 . 1093) (symbol 1013 . 1025) (symbol 955 . 967) (symbol 889 . 901) (symbol 826 . 838) (symbol 764 . 776) (symbol 715 . 727) (symbol 666 . 678) (symbol 594 . 606) (symbol 553 . 565) (symbol 502 . 514) (symbol 452 . 464) (symbol 400 . 412) (symbol 361 . 373) (symbol 299 . 311) (symbol 131 . 143))
      :lexical-table 
        '(("PC_FILE_CLASSID" . ((number "1211222" 1381 . 1388)))
          ("__PETSCPC_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_PETSCDRAWTYPES_H" variable (:constant-flag t) nil [35 52])
            ("PetscDrawType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [211 245])
            ("PETSC_DRAW_X" variable (:constant-flag t) nil [254 266])
            ("PETSC_DRAW_GLUT" variable (:constant-flag t) nil [288 303])
            ("PETSC_DRAW_OPENGLES" variable (:constant-flag t) nil [325 344])
            ("PETSC_DRAW_NULL" variable (:constant-flag t) nil [366 381])
            ("PETSC_DRAW_WIN32" variable (:constant-flag t) nil [403 419])
            ("PETSC_DRAW_TIKZ" variable (:constant-flag t) nil [441 456])
            ("PETSC_DRAW_IMAGE" variable (:constant-flag t) nil [478 494])
            ("PetscDraw" type
               (:typedef ("_p_PetscDraw" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [676 715])
            ("PetscDrawAxis" type
               (:typedef ("_p_PetscDrawAxis" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [923 970])
            ("PetscDrawLG" type
               (:typedef ("_p_PetscDrawLG" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [1151 1196])
            ("PetscDrawSP" type
               (:typedef ("_p_PetscDrawSP" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [1344 1389])
            ("PetscDrawHG" type
               (:typedef ("_p_PetscDrawHG" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [1531 1576])
            ("PetscDrawBar" type
               (:typedef ("_p_PetscDrawBar" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [1720 1767]))          
      :file "petscdrawtypes.h"
      :pointmax 1776
      :fsize 1775
      :lastmodtime '(22329 14111 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("PETSC_DRAW_WIN32" . ((string "\"win32\"" 425 . 432)))
          ("PETSC_DRAW_IMAGE" . ((string "\"image\"" 500 . 507)))
          ("PETSC_DRAW_GLUT" . ((string "\"glut\"" 310 . 316)))
          ("PETSC_DRAW_NULL" . ((string "\"null\"" 388 . 394)))
          ("PETSC_DRAW_TIKZ" . ((string "\"tikz\"" 463 . 469)))
          ("_PETSCDRAWTYPES_H")
          ("PETSC_DRAW_OPENGLES" . ((string "\"opengles\"" 347 . 357)))
          ("PETSC_DRAW_X" . ((string "\"x\"" 276 . 279)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__PETSCMAT_H" variable (:constant-flag t) nil [88 100])
            ("petscvec.h" include (:system-flag t) nil [101 122])
            ("Mat" type
               (:typedef ("_p_Mat" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [432 469])
            ("MatType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [619 647])
            ("MATSAME" variable (:constant-flag t) nil [656 663])
            ("MATMAIJ" variable (:constant-flag t) nil [690 697])
            ("MATSEQMAIJ" variable (:constant-flag t) nil [724 734])
            ("MATMPIMAIJ" variable (:constant-flag t) nil [761 771])
            ("MATIS" variable (:constant-flag t) nil [798 803])
            ("MATAIJ" variable (:constant-flag t) nil [830 836])
            ("MATSEQAIJ" variable (:constant-flag t) nil [863 872])
            ("MATMPIAIJ" variable (:constant-flag t) nil [899 908])
            ("MATAIJCRL" variable (:constant-flag t) nil [935 944])
            ("MATSEQAIJCRL" variable (:constant-flag t) nil [971 983])
            ("MATMPIAIJCRL" variable (:constant-flag t) nil [1010 1022])
            ("MATAIJCUSP" variable (:constant-flag t) nil [1049 1059])
            ("MATSEQAIJCUSP" variable (:constant-flag t) nil [1086 1099])
            ("MATMPIAIJCUSP" variable (:constant-flag t) nil [1126 1139])
            ("MATAIJCUSPARSE" variable (:constant-flag t) nil [1166 1180])
            ("MATSEQAIJCUSPARSE" variable (:constant-flag t) nil [1207 1224])
            ("MATMPIAIJCUSPARSE" variable (:constant-flag t) nil [1251 1268])
            ("MATAIJVIENNACL" variable (:constant-flag t) nil [1295 1309])
            ("MATSEQAIJVIENNACL" variable (:constant-flag t) nil [1336 1353])
            ("MATMPIAIJVIENNACL" variable (:constant-flag t) nil [1380 1397])
            ("MATAIJPERM" variable (:constant-flag t) nil [1424 1434])
            ("MATSEQAIJPERM" variable (:constant-flag t) nil [1461 1474])
            ("MATMPIAIJPERM" variable (:constant-flag t) nil [1501 1514])
            ("MATSHELL" variable (:constant-flag t) nil [1541 1549])
            ("MATDENSE" variable (:constant-flag t) nil [1576 1584])
            ("MATSEQDENSE" variable (:constant-flag t) nil [1611 1622])
            ("MATMPIDENSE" variable (:constant-flag t) nil [1649 1660])
            ("MATELEMENTAL" variable (:constant-flag t) nil [1687 1699])
            ("MATBAIJ" variable (:constant-flag t) nil [1726 1733])
            ("MATSEQBAIJ" variable (:constant-flag t) nil [1760 1770])
            ("MATMPIBAIJ" variable (:constant-flag t) nil [1797 1807])
            ("MATMPIADJ" variable (:constant-flag t) nil [1834 1843])
            ("MATSBAIJ" variable (:constant-flag t) nil [1870 1878])
            ("MATSEQSBAIJ" variable (:constant-flag t) nil [1905 1916])
            ("MATMPISBAIJ" variable (:constant-flag t) nil [1943 1954])
            ("MATSEQBSTRM" variable (:constant-flag t) nil [1981 1992])
            ("MATMPIBSTRM" variable (:constant-flag t) nil [2019 2030])
            ("MATBSTRM" variable (:constant-flag t) nil [2057 2065])
            ("MATSEQSBSTRM" variable (:constant-flag t) nil [2092 2104])
            ("MATMPISBSTRM" variable (:constant-flag t) nil [2131 2143])
            ("MATSBSTRM" variable (:constant-flag t) nil [2170 2179])
            ("MATDAAD" variable (:constant-flag t) nil [2206 2213])
            ("MATMFFD" variable (:constant-flag t) nil [2240 2247])
            ("MATNORMAL" variable (:constant-flag t) nil [2274 2283])
            ("MATNORMALHERMITIAN" variable (:constant-flag t) nil [2310 2328])
            ("MATLRC" variable (:constant-flag t) nil [2347 2353])
            ("MATSCATTER" variable (:constant-flag t) nil [2380 2390])
            ("MATBLOCKMAT" variable (:constant-flag t) nil [2417 2428])
            ("MATCOMPOSITE" variable (:constant-flag t) nil [2455 2467])
            ("MATFFT" variable (:constant-flag t) nil [2494 2500])
            ("MATFFTW" variable (:constant-flag t) nil [2527 2534])
            ("MATSEQCUFFT" variable (:constant-flag t) nil [2561 2572])
            ("MATTRANSPOSEMAT" variable (:constant-flag t) nil [2599 2614])
            ("MATSCHURCOMPLEMENT" variable (:constant-flag t) nil [2638 2656])
            ("MATPYTHON" variable (:constant-flag t) nil [2683 2692])
            ("MATHYPRESTRUCT" variable (:constant-flag t) nil [2719 2733])
            ("MATHYPRESSTRUCT" variable (:constant-flag t) nil [2760 2775])
            ("MATSUBMATRIX" variable (:constant-flag t) nil [2802 2814])
            ("MATLOCALREF" variable (:constant-flag t) nil [2841 2852])
            ("MATNEST" variable (:constant-flag t) nil [2879 2886])
            ("MATPREALLOCATOR" variable (:constant-flag t) nil [2913 2928])
            ("MatSolverPackage" variable (:constant-flag t) nil [3223 3239])
            ("MATSOLVERSUPERLU" variable (:constant-flag t) nil [3254 3270])
            ("MATSOLVERSUPERLU_DIST" variable (:constant-flag t) nil [3294 3315])
            ("MATSOLVERUMFPACK" variable (:constant-flag t) nil [3339 3355])
            ("MATSOLVERCHOLMOD" variable (:constant-flag t) nil [3379 3395])
            ("MATSOLVERCLIQUE" variable (:constant-flag t) nil [3419 3434])
            ("MATSOLVERKLU" variable (:constant-flag t) nil [3458 3470])
            ("MATSOLVERELEMENTAL" variable (:constant-flag t) nil [3494 3512])
            ("MATSOLVERESSL" variable (:constant-flag t) nil [3536 3549])
            ("MATSOLVERLUSOL" variable (:constant-flag t) nil [3573 3587])
            ("MATSOLVERMUMPS" variable (:constant-flag t) nil [3611 3625])
            ("MATSOLVERMKL_PARDISO" variable (:constant-flag t) nil [3649 3669])
            ("MATSOLVERMKL_CPARDISO" variable (:constant-flag t) nil [3693 3714])
            ("MATSOLVERPASTIX" variable (:constant-flag t) nil [3738 3753])
            ("MATSOLVERMATLAB" variable (:constant-flag t) nil [3777 3792])
            ("MATSOLVERPETSC" variable (:constant-flag t) nil [3816 3830])
            ("MATSOLVERBAS" variable (:constant-flag t) nil [3854 3866])
            ("MATSOLVERCUSPARSE" variable (:constant-flag t) nil [3890 3907])
            ("MATSOLVERBSTRM" variable (:constant-flag t) nil [3931 3945])
            ("MATSOLVERSBSTRM" variable (:constant-flag t) nil [3969 3984])
            ("MatFactorType" type
               (:typedef ("" type
                     (:members 
                        ( ("MAT_FACTOR_NONE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4244 4260])
                          ("MAT_FACTOR_LU" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4261 4275])
                          ("MAT_FACTOR_CHOLESKY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4276 4296])
                          ("MAT_FACTOR_ILU" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4297 4312])
                          ("MAT_FACTOR_ICC" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4313 4328])
                          ("MAT_FACTOR_ILUDT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4328 4345]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [4230 4360])
            ("MatFactorTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [4374 4409])
            ("MatGetFactor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4452 4456])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4456 4479])
                    ("" variable (:type ("MatFactorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4479 4493])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4493 4498]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4424 4499])
            ("MatGetFactorAvailable" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4550 4554])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4554 4577])
                    ("" variable (:type ("MatFactorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4577 4591])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4591 4603]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4513 4604])
            ("MatFactorGetSolverPackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4659 4663])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4663 4687]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4618 4688])
            ("MatGetFactorType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4734 4738])
                    ("" variable
                       (:pointer 1
                        :type ("MatFactorType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4738 4753]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4702 4754])
            ("MatSolverPackageRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4808 4831])
                    ("" variable
                       (:constant-flag t
                        :type ("MatType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4831 4845])
                    ("" variable (:type ("MatFactorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4845 4859])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4877 4881])
                            ("" variable (:type ("MatFactorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4881 4895])
                            ("" variable
                               (:pointer 1
                                :type ("Mat" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4895 4900]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4768 4902])
            ("MatSolverPackageGet" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4951 4974])
                    ("" variable
                       (:constant-flag t
                        :type ("MatType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4974 4988])
                    ("" variable (:type ("MatFactorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4988 5002])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5002 5013])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5013 5024])
                    (nil variable (:pointer (("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5044 5048]) ("" variable (:type ("MatFactorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5048 5062]) ("" variable (:pointer 1 :type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5062 5067])) :type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5024 5068]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4916 5069])
            ("MAT_FILE_CLASSID" variable (:constant-flag t) nil [5104 5120])
            ("MAT_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [5193 5218])
            ("MAT_COLORING_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [5232 5266])
            ("MAT_FDCOLORING_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [5280 5316])
            ("MAT_TRANSPOSECOLORING_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [5330 5373])
            ("MAT_PARTITIONING_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [5387 5425])
            ("MAT_COARSEN_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [5439 5472])
            ("MAT_NULLSPACE_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [5486 5521])
            ("MATMFFD_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [5535 5564])
            ("MatReuse" type
               (:typedef ("" type
                     (:members 
                        ( ("MAT_INITIAL_MATRIX" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [6055 6074])
                          ("MAT_REUSE_MATRIX" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [6074 6091])
                          ("MAT_IGNORE_MATRIX" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [6091 6109])
                          ("MAT_INPLACE_MATRIX" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [6109 6128]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [6041 6138])
            ("MatGetSubMatrixOption" type
               (:typedef ("" type
                     (:members 
                        ( ("MAT_DO_NOT_GET_VALUES" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [6406 6428])
                          ("MAT_GET_VALUES" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [6428 6443]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [6392 6466])
            ("MatInitializePackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6517 6522]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6481 6523])
            ("MatCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6563 6572])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6572 6577]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6538 6578])
            ("MatSetSizes" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6619 6623])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6623 6632])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6632 6641])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6641 6650])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6650 6659]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6592 6660])
            ("MatSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6700 6704])
                    ("" variable (:type ("MatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6704 6712]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6674 6713])
            ("MatSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6760 6764]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6727 6765])
            ("MatViewFromOptions" function
               (:arguments 
                  ( ("A" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6820 6826])
                    ("obj" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6826 6842])
                    ("name" variable
                       (:dereference 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [6842 6860]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6786 6922])
            ("MatRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [6963 6975])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6994 6998]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6936 7000])
            ("MatRegisterBaseName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [7049 7061])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [7062 7074])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [7075 7087]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7014 7089])
            ("MatSetOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7138 7142])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [7142 7154]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7103 7156])
            ("MatAppendOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7208 7212])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [7212 7224]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7170 7226])
            ("MatGetOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7275 7279])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [7279 7292]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7240 7294])
            ("MatSetErrorIfFailure" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7344 7348])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7348 7358]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7308 7359])
            ("MatList" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) nil [7374 7400])
            ("MatColoringList" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) nil [7414 7448])
            ("MatPartitioningList" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) nil [7462 7500])
            ("MatCoarsenList" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) nil [7514 7547])
            ("MatStructure" type
               (:typedef ("" type
                     (:members 
                        ( ("DIFFERENT_NONZERO_PATTERN" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7787 7813])
                          ("SUBSET_NONZERO_PATTERN" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7813 7836])
                          ("SAME_NONZERO_PATTERN" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7836 7857]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [7773 7871])
            ("MatCreateSeqDense" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7919 7928])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7928 7937])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7937 7946])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7946 7959])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7960 7965]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7886 7966])
            ("MatCreateDense" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8010 8019])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8019 8028])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8028 8037])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8037 8046])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8046 8055])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8055 8068])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8069 8074]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7980 8075])
            ("MatCreateSeqAIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8120 8129])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8129 8138])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8138 8147])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8147 8156])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8156 8172])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8173 8178]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8089 8179])
            ("MatCreateAIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8221 8230])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8230 8239])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8239 8248])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8248 8257])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8257 8266])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8266 8275])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8275 8291])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8292 8301])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8301 8317])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8318 8323]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8193 8324])
            ("MatCreateMPIAIJWithArrays" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8379 8388])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8388 8397])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8397 8406])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8406 8415])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8415 8424])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8424 8440])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8441 8457])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8458 8477])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8478 8484]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8338 8485])
            ("MatCreateMPIAIJWithSplitArrays" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8545 8554])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8554 8563])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8563 8572])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8572 8581])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8581 8590])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8590 8600])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8601 8611])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8612 8625])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8626 8636])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8637 8647])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8648 8661])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8662 8667]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8499 8668])
            ("MatCreateSeqBAIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8715 8724])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8724 8733])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8733 8742])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8742 8751])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8751 8760])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8760 8776])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8777 8782]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8683 8783])
            ("MatCreateBAIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8826 8835])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8835 8844])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8844 8853])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8853 8862])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8862 8871])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8871 8880])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8880 8889])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8889 8905])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8906 8915])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8915 8931])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8932 8937]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8797 8938])
            ("MatCreateMPIBAIJWithArrays" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8994 9003])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9003 9012])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9012 9021])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9021 9030])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9030 9039])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9039 9048])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9048 9064])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9065 9081])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9082 9101])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9102 9107]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8952 9108])
            ("MatCreateMPIAdj" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9154 9163])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9163 9172])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9172 9181])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9181 9191])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9192 9202])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9203 9213])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9214 9219]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9123 9220])
            ("MatCreateSeqSBAIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9267 9276])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9276 9285])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9285 9294])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9294 9303])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9303 9312])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9312 9328])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9329 9334]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9234 9335])
            ("MatCreateSBAIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9380 9389])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9389 9398])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9398 9407])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9407 9416])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9416 9425])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9425 9434])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9434 9443])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9443 9459])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9460 9469])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9469 9485])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9486 9491]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9350 9492])
            ("MatCreateMPISBAIJWithArrays" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9549 9558])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9558 9567])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9567 9576])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9576 9585])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9585 9594])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9594 9603])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9603 9619])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9620 9636])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9637 9656])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9657 9663]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9506 9664])
            ("MatSeqSBAIJSetPreallocationCSR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9724 9728])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9728 9737])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9737 9753])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9754 9770])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9771 9790]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9678 9792])
            ("MatMPISBAIJSetPreallocationCSR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9852 9856])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9856 9865])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9865 9881])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9882 9898])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9899 9918]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9806 9920])
            ("MatXAIJSetPreallocation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9973 9977])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9977 9986])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9986 10002])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10003 10019])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10020 10036])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10037 10053]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9934 10055])
            ("MatCreateShell" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10100 10109])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10109 10118])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10118 10127])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10127 10136])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10136 10145])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [10145 10152])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10152 10157]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10070 10158])
            ("MatCreateNormal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10203 10207])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10207 10212]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10172 10213])
            ("MatCreateNormalHermitian" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10267 10271])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10271 10276]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10227 10277])
            ("MatCreateLRC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10319 10323])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10323 10327])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10327 10331])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10331 10336]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10291 10337])
            ("MatCreateIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10378 10387])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10387 10396])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10396 10405])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10405 10414])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10414 10423])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10423 10432])
                    ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10432 10455])
                    ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10455 10478])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10478 10483]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10351 10484])
            ("MatCreateSeqAIJCRL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10532 10541])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10541 10550])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10550 10559])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10559 10568])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10568 10584])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10585 10590]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10498 10591])
            ("MatCreateMPIAIJCRL" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10639 10648])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10648 10657])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10657 10666])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10666 10675])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10675 10691])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10692 10701])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10701 10717])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10718 10723]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10605 10724])
            ("MatCreateSeqBSTRM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10772 10781])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10781 10790])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10790 10799])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10799 10808])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10808 10817])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10817 10833])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10834 10839]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10739 10840])
            ("MatCreateMPIBSTRM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10887 10896])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10896 10905])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10905 10914])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10914 10923])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10923 10932])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10932 10941])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10941 10950])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10950 10966])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10967 10976])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10976 10992])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10993 10998]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10854 10999])
            ("MatCreateSeqSBSTRM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11047 11056])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11056 11065])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11065 11074])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11074 11083])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11083 11092])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11092 11108])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11109 11114]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11013 11115])
            ("MatCreateMPISBSTRM" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11163 11172])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11172 11181])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11181 11190])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11190 11199])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11199 11208])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11208 11217])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11217 11226])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11226 11242])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11243 11252])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11252 11268])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11269 11274]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11129 11275])
            ("MatCreateScatter" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11322 11331])
                    ("" variable (:type ("VecScatter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11331 11342])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11342 11347]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11290 11348])
            ("MatScatterSetVecScatter" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11401 11405])
                    ("" variable (:type ("VecScatter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11405 11416]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11362 11417])
            ("MatScatterGetVecScatter" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11470 11474])
                    ("" variable
                       (:pointer 1
                        :type ("VecScatter" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11474 11486]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11431 11487])
            ("MatCreateBlockMat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11534 11543])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11543 11552])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11552 11561])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11561 11570])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11570 11579])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11579 11589])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11589 11594]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11501 11595])
            ("MatCompositeAddMat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11643 11647])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11647 11651]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11609 11652])
            ("MatCompositeMerge" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11699 11703]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11666 11704])
            ("MatCreateComposite" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11752 11761])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11761 11770])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11770 11781])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11781 11786]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11718 11787])
            ("MatCompositeType" type
               (:typedef ("" type
                     (:members 
                        ( ("MAT_COMPOSITE_ADDITIVE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11802 11825])
                          ("MAT_COMPOSITE_MULTIPLICATIVE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11825 11854]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [11788 11872])
            ("MatCompositeSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11921 11925])
                    ("" variable (:type ("MatCompositeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11925 11942]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11886 11943])
            ("MatCreateFFT" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11986 11995])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11995 12004])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12004 12020])
                    ("" variable (:type ("MatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12021 12029])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12029 12034]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11958 12035])
            ("MatCreateSeqCUFFT" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12082 12091])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12091 12100])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12100 12116])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12117 12122]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12049 12123])
            ("MatCreateTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12172 12176])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12176 12181]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12138 12182])
            ("MatCreateHermitianTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12239 12243])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12243 12248]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12196 12249])
            ("MatCreateSubMatrix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12297 12301])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12301 12304])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12304 12307])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12307 12312]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12263 12313])
            ("MatSubMatrixUpdate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12361 12365])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12365 12369])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12369 12372])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12372 12375]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12327 12376])
            ("MatCreateLocalRef" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12423 12427])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12427 12430])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12430 12433])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12433 12438]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12390 12439])
            ("MatPythonSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12486 12490])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [12490 12502]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12454 12504])
            ("MatSetUp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12543 12547]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12519 12548])
            ("MatDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12588 12593]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12562 12594])
            ("MatGetNonzeroState" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12642 12646])
                    ("" variable
                       (:pointer 1
                        :type ("PetscObjectState" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12646 12664]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12608 12665])
            ("MatConjugate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12708 12712]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12680 12713])
            ("MatRealPart" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12754 12758]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12727 12759])
            ("MatImaginaryPart" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12805 12809]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12773 12810])
            ("MatGetDiagonalBlock" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12859 12863])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12863 12868]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12824 12869])
            ("MatGetTrace" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12910 12914])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12914 12927]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12883 12928])
            ("MatInvertBlockDiagonal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12980 12984])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12984 13005]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12942 13006])
            ("MatSetValues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13115 13119])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13119 13128])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13128 13144])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13145 13154])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13154 13170])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13171 13190])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13191 13202]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13087 13203])
            ("MatSetValuesBlocked" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13252 13256])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13256 13265])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13265 13281])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13282 13291])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13291 13307])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13308 13327])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13328 13339]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13217 13340])
            ("MatSetValuesRow" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13385 13389])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13389 13398])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13398 13417]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13354 13419])
            ("MatSetValuesRowLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13469 13473])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13473 13482])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13482 13501]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13433 13503])
            ("MatSetValuesBatch" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13550 13554])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13554 13563])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13563 13572])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13572 13582])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13583 13602]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13517 13604])
            ("MatSetRandom" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13646 13650])
                    ("" variable (:type ("PetscRandom" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13650 13662]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13618 13663])
            ("MatStencil" type
               (:typedef ("" type
                     (:members 
                        ( ("k" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14052 14069])
                          ("j" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14052 14069])
                          ("i" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14052 14069])
                          ("c" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14052 14069]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [14033 14083])
            ("MatSetValuesStencil" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14133 14137])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14137 14146])
                    ("" variable
                       (:constant-flag t
                        :type ("MatStencil" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14146 14164])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14165 14174])
                    ("" variable
                       (:constant-flag t
                        :type ("MatStencil" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14174 14192])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14193 14212])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14213 14224]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14098 14225])
            ("MatSetValuesBlockedStencil" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14281 14285])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14285 14294])
                    ("" variable
                       (:constant-flag t
                        :type ("MatStencil" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14294 14312])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14313 14322])
                    ("" variable
                       (:constant-flag t
                        :type ("MatStencil" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14322 14340])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14341 14360])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14361 14372]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14239 14373])
            ("MatSetStencil" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14416 14420])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14420 14429])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14429 14445])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14446 14462])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14463 14472]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14387 14473])
            ("MatSetColoring" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14518 14522])
                    ("" variable (:type ("ISColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14522 14533]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14488 14534])
            ("MatSetValuesAdifor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14582 14586])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14586 14595])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [14595 14601]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14548 14602])
            ("MatAssemblyType" type
               (:typedef ("" type
                     (:members 
                        ( ("MAT_FLUSH_ASSEMBLY" variable
                             (:constant-flag t
                              :default-value (14831 14832)
                              :type "int")
                              (reparse-symbol enumsubparts) [14812 14832])
                          ("MAT_FINAL_ASSEMBLY" variable
                             (:constant-flag t
                              :default-value (14852 14853)
                              :type "int")
                              (reparse-symbol enumsubparts) [14833 14853]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [14798 14871])
            ("MatAssemblyBegin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14917 14921])
                    ("" variable (:type ("MatAssemblyType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14921 14937]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14885 14938])
            ("MatAssemblyEnd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14982 14986])
                    ("" variable (:type ("MatAssemblyType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14986 15002]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14952 15003])
            ("MatAssembled" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15045 15049])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15049 15061]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15017 15062])
            ("MatOption" type
               (:typedef ("" type
                     (:members 
                        ( ("MAT_OPTION_MIN" variable
                             (:constant-flag t
                              :default-value (15416 15418)
                              :type "int")
                              (reparse-symbol enumsubparts) [15399 15418])
                          ("MAT_UNUSED_NONZERO_LOCATION_ERR" variable
                             (:constant-flag t
                              :default-value (15468 15470)
                              :type "int")
                              (reparse-symbol enumsubparts) [15434 15470])
                          ("MAT_ROW_ORIENTED" variable
                             (:constant-flag t
                              :default-value (15505 15507)
                              :type "int")
                              (reparse-symbol enumsubparts) [15486 15507])
                          ("MAT_SYMMETRIC" variable
                             (:constant-flag t
                              :default-value (15539 15540)
                              :type "int")
                              (reparse-symbol enumsubparts) [15523 15540])
                          ("MAT_STRUCTURALLY_SYMMETRIC" variable
                             (:constant-flag t
                              :default-value (15585 15586)
                              :type "int")
                              (reparse-symbol enumsubparts) [15556 15586])
                          ("MAT_NEW_DIAGONALS" variable
                             (:constant-flag t
                              :default-value (15622 15623)
                              :type "int")
                              (reparse-symbol enumsubparts) [15602 15623])
                          ("MAT_IGNORE_OFF_PROC_ENTRIES" variable
                             (:constant-flag t
                              :default-value (15669 15670)
                              :type "int")
                              (reparse-symbol enumsubparts) [15639 15670])
                          ("MAT_USE_HASH_TABLE" variable
                             (:constant-flag t
                              :default-value (15707 15708)
                              :type "int")
                              (reparse-symbol enumsubparts) [15686 15708])
                          ("MAT_KEEP_NONZERO_PATTERN" variable
                             (:constant-flag t
                              :default-value (15751 15752)
                              :type "int")
                              (reparse-symbol enumsubparts) [15724 15752])
                          ("MAT_IGNORE_ZERO_ENTRIES" variable
                             (:constant-flag t
                              :default-value (15794 15795)
                              :type "int")
                              (reparse-symbol enumsubparts) [15768 15795])
                          ("MAT_USE_INODES" variable
                             (:constant-flag t
                              :default-value (15828 15829)
                              :type "int")
                              (reparse-symbol enumsubparts) [15811 15829])
                          ("MAT_HERMITIAN" variable
                             (:constant-flag t
                              :default-value (15861 15862)
                              :type "int")
                              (reparse-symbol enumsubparts) [15845 15862])
                          ("MAT_SYMMETRY_ETERNAL" variable
                             (:constant-flag t
                              :default-value (15901 15903)
                              :type "int")
                              (reparse-symbol enumsubparts) [15878 15903])
                          ("MAT_NEW_NONZERO_LOCATION_ERR" variable
                             (:constant-flag t
                              :default-value (15950 15952)
                              :type "int")
                              (reparse-symbol enumsubparts) [15919 15952])
                          ("MAT_IGNORE_LOWER_TRIANGULAR" variable
                             (:constant-flag t
                              :default-value (15998 16000)
                              :type "int")
                              (reparse-symbol enumsubparts) [15968 16000])
                          ("MAT_ERROR_LOWER_TRIANGULAR" variable
                             (:constant-flag t
                              :default-value (16045 16047)
                              :type "int")
                              (reparse-symbol enumsubparts) [16016 16047])
                          ("MAT_GETROW_UPPERTRIANGULAR" variable
                             (:constant-flag t
                              :default-value (16092 16094)
                              :type "int")
                              (reparse-symbol enumsubparts) [16063 16094])
                          ("MAT_SPD" variable
                             (:constant-flag t
                              :default-value (16120 16122)
                              :type "int")
                              (reparse-symbol enumsubparts) [16110 16122])
                          ("MAT_NO_OFF_PROC_ZERO_ROWS" variable
                             (:constant-flag t
                              :default-value (16166 16168)
                              :type "int")
                              (reparse-symbol enumsubparts) [16138 16168])
                          ("MAT_NO_OFF_PROC_ENTRIES" variable
                             (:constant-flag t
                              :default-value (16210 16212)
                              :type "int")
                              (reparse-symbol enumsubparts) [16184 16212])
                          ("MAT_NEW_NONZERO_LOCATIONS" variable
                             (:constant-flag t
                              :default-value (16256 16258)
                              :type "int")
                              (reparse-symbol enumsubparts) [16228 16258])
                          ("MAT_NEW_NONZERO_ALLOCATION_ERR" variable
                             (:constant-flag t
                              :default-value (16307 16309)
                              :type "int")
                              (reparse-symbol enumsubparts) [16274 16309])
                          ("MAT_SUBSET_OFF_PROC_ENTRIES" variable
                             (:constant-flag t
                              :default-value (16355 16357)
                              :type "int")
                              (reparse-symbol enumsubparts) [16325 16357])
                          ("MAT_OPTION_MAX" variable
                             (:constant-flag t
                              :default-value (16390 16392)
                              :type "int")
                              (reparse-symbol enumsubparts) [16373 16392]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [15385 16404])
            ("MatOptions" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [16419 16444])
            ("MatSetOption" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16486 16490])
                    ("" variable (:type ("MatOption" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16490 16500])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16500 16510]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16458 16511])
            ("MatGetOption" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16553 16557])
                    ("" variable (:type ("MatOption" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16557 16567])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16567 16578]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16525 16579])
            ("MatGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16619 16623])
                    ("" variable
                       (:pointer 1
                        :type ("MatType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16623 16632]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16593 16633])
            ("MatGetValues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16676 16680])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16680 16689])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16689 16705])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16706 16715])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16715 16731])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16732 16745]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16648 16747])
            ("MatGetRow" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16786 16790])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16790 16799])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16799 16810])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16810 16828])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16829 16849]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16761 16851])
            ("MatRestoreRow" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16894 16898])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16898 16907])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16907 16918])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16918 16936])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16937 16957]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16865 16959])
            ("MatGetRowUpperTriangular" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17013 17017]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16973 17018])
            ("MatRestoreRowUpperTriangular" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17076 17080]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17032 17081])
            ("MatGetColumn" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17123 17127])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17127 17136])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17136 17147])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17147 17165])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17166 17186]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17095 17188])
            ("MatRestoreColumn" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17234 17238])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17238 17247])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17247 17258])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17258 17276])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17277 17297]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17202 17299])
            ("MatGetColumnVector" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17347 17351])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17351 17355])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17355 17364]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17313 17365])
            ("MatSeqAIJGetArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17412 17416])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17416 17431]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17379 17433])
            ("MatSeqAIJRestoreArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17484 17488])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17488 17503]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17447 17505])
            ("MatSeqAIJGetMaxRowNonzeros" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17561 17565])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17565 17575]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17519 17576])
            ("MatSeqAIJSetValuesLocalFast" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17633 17637])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17637 17646])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17646 17662])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17663 17672])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17672 17688])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17689 17708])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17709 17720]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17590 17721])
            ("MatDenseGetArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17767 17771])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17771 17786]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17735 17788])
            ("MatDenseRestoreArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17838 17842])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17842 17857]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17802 17859])
            ("MatGetBlockSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17904 17908])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17908 17919]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17873 17920])
            ("MatSetBlockSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17965 17969])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17969 17978]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17934 17979])
            ("MatGetBlockSizes" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18025 18029])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18029 18040])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18040 18051]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17993 18052])
            ("MatSetBlockSizes" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18098 18102])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18102 18111])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18111 18120]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18066 18121])
            ("MatSetBlockSizesFromMats" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18175 18179])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18179 18183])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18183 18187]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18135 18188])
            ("MatMult" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18226 18230])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18230 18234])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18234 18238]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18203 18239])
            ("MatMultDiagonalBlock" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18289 18293])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18293 18297])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18297 18301]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18253 18302])
            ("MatMultAdd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18342 18346])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18346 18350])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18350 18354])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18354 18358]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18316 18359])
            ("MatMultTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18405 18409])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18409 18413])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18413 18417]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18373 18418])
            ("MatMultHermitianTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18473 18477])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18477 18481])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18481 18485]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18432 18486])
            ("MatIsTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18530 18534])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18534 18538])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18538 18548])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18548 18560]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18500 18561])
            ("MatIsHermitianTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18614 18618])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18618 18622])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18622 18632])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18632 18644]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18575 18645])
            ("MatMultTransposeAdd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18694 18698])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18698 18702])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18702 18706])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18706 18710]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18659 18711])
            ("MatMultHermitianTransposeAdd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18769 18773])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18773 18777])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18777 18781])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18781 18785]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18725 18786])
            ("MatMultConstrained" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18834 18838])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18838 18842])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18842 18846]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18800 18847])
            ("MatMultTransposeConstrained" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18904 18908])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18908 18912])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18912 18916]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18861 18917])
            ("MatMatSolve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18958 18962])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18962 18966])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18966 18970]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18931 18971])
            ("MatResidual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19012 19016])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19016 19020])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19020 19024])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19024 19028]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18985 19029])
            ("MatDuplicateOption" type
               (:typedef ("" type
                     (:members 
                        ( ("MAT_DO_NOT_COPY_VALUES" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [19632 19655])
                          ("MAT_COPY_VALUES" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [19655 19671])
                          ("MAT_SHARE_NONZERO_PATTERN" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [19671 19697]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [19618 19717])
            ("MatConvert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19758 19762])
                    ("" variable (:type ("MatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19762 19770])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19770 19779])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19779 19784]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19732 19785])
            ("MatDuplicate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19827 19831])
                    ("" variable (:type ("MatDuplicateOption" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19831 19850])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19850 19855]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19799 19856])
            ("MatCopy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19895 19899])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19899 19903])
                    ("" variable (:type ("MatStructure" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19903 19916]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19872 19917])
            ("MatView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19954 19958])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19958 19970]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19931 19971])
            ("MatIsSymmetric" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20015 20019])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20019 20029])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20029 20041]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19985 20042])
            ("MatIsStructurallySymmetric" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20098 20102])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20102 20114]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20056 20115])
            ("MatIsHermitian" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20159 20163])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20163 20173])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20173 20185]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20129 20186])
            ("MatIsSymmetricKnown" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20235 20239])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20239 20251])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20251 20263]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20200 20264])
            ("MatIsHermitianKnown" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20313 20317])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20317 20329])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20329 20341]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20278 20342])
            ("MatMissingDiagonal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20390 20394])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20394 20407])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20407 20418]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20356 20419])
            ("MatLoad" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20456 20460])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20461 20473]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20433 20474])
            ("MatGetRowIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20516 20520])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20520 20529])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20529 20540])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20540 20551])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20551 20561])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20561 20579])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20580 20598])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20599 20612]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20489 20613])
            ("MatRestoreRowIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20658 20662])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20662 20671])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20671 20682])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20682 20693])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20693 20704])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20704 20722])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20723 20741])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20742 20755]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20627 20756])
            ("MatGetColumnIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20800 20804])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20804 20813])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20813 20824])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20824 20835])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20835 20845])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20845 20863])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20864 20882])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20883 20896]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20770 20897])
            ("MatRestoreColumnIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20945 20949])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20949 20958])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20958 20969])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20969 20980])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20980 20991])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20991 21009])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21010 21028])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21029 21042]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20911 21043])
            ("MatInfo" type
               (:typedef ("" type
                     (:members 
                        ( ("block_size" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21325 21351])
                          ("nz_allocated" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21395 21443])
                          ("nz_used" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21395 21443])
                          ("nz_unneeded" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21395 21443])
                          ("memory" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21473 21495])
                          ("assemblies" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21549 21575])
                          ("mallocs" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21643 21666])
                          ("fill_ratio_given" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21742 21792])
                          ("fill_ratio_needed" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21742 21792])
                          ("factor_mallocs" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21823 21853]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [21306 21929])
            ("MatInfoType" type
               (:typedef ("" type
                     (:members 
                        ( ("MAT_LOCAL" variable
                             (:constant-flag t
                              :default-value (22264 22265)
                              :type "int")
                              (reparse-symbol enumsubparts) [22254 22265])
                          ("MAT_GLOBAL_MAX" variable
                             (:constant-flag t
                              :default-value (22281 22282)
                              :type "int")
                              (reparse-symbol enumsubparts) [22266 22282])
                          ("MAT_GLOBAL_SUM" variable
                             (:constant-flag t
                              :default-value (22298 22299)
                              :type "int")
                              (reparse-symbol enumsubparts) [22283 22299]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [22240 22313])
            ("MatGetInfo" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22353 22357])
                    ("" variable (:type ("MatInfoType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22357 22369])
                    ("" variable
                       (:pointer 1
                        :type ("MatInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22369 22378]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22327 22379])
            ("MatGetDiagonal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22423 22427])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22427 22431]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22393 22432])
            ("MatGetRowMax" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22474 22478])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22478 22482])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22482 22492]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22446 22494])
            ("MatGetRowMin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22536 22540])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22540 22544])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22544 22554]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22508 22556])
            ("MatGetRowMaxAbs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22601 22605])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22605 22609])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22609 22619]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22570 22621])
            ("MatGetRowMinAbs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22666 22670])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22670 22674])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22674 22684]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22635 22686])
            ("MatGetRowSum" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22728 22732])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22732 22736]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22700 22737])
            ("MatTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22779 22783])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22783 22792])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22792 22797]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22751 22798])
            ("MatHermitianTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22849 22853])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22853 22862])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22862 22867]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22812 22868])
            ("MatPermute" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22908 22912])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22912 22915])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22915 22918])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22918 22923]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22882 22924])
            ("MatDiagonalScale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22970 22974])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22974 22978])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22978 22982]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22938 22983])
            ("MatDiagonalSet" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23027 23031])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23031 23035])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23035 23046]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22997 23047])
            ("MatEqual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23086 23090])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23090 23094])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23094 23105]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23062 23106])
            ("MatMultEqual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23148 23152])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23152 23156])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23156 23165])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23165 23176]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23120 23177])
            ("MatMultAddEqual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23222 23226])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23226 23230])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23230 23239])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23239 23250]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23191 23251])
            ("MatMultTransposeEqual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23302 23306])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23306 23310])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23310 23319])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23319 23330]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23265 23331])
            ("MatMultTransposeAddEqual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23385 23389])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23389 23393])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23393 23402])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23402 23413]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23345 23414])
            ("MatMatMultEqual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23459 23463])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23463 23467])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23467 23471])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23471 23480])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23480 23491]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23428 23492])
            ("MatTransposeMatMultEqual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23546 23550])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23550 23554])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23554 23558])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23558 23567])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23567 23578]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23506 23579])
            ("MatNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23617 23621])
                    ("" variable (:type ("NormType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23621 23630])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23630 23641]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23594 23642])
            ("MatGetColumnNorms" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23689 23693])
                    ("" variable (:type ("NormType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23693 23702])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23702 23713]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23656 23714])
            ("MatZeroEntries" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23758 23762]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23728 23763])
            ("MatZeroRows" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23804 23808])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23808 23817])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23817 23834])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23835 23847])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23847 23851])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23851 23855]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23777 23856])
            ("MatZeroRowsIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23899 23903])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23903 23906])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23906 23918])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23918 23922])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23922 23926]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23870 23927])
            ("MatZeroRowsStencil" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23975 23979])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23979 23988])
                    ("" variable
                       (:constant-flag t
                        :type ("MatStencil" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23988 24007])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24008 24020])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24020 24024])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24024 24028]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23941 24029])
            ("MatZeroRowsColumnsStencil" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24084 24088])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24088 24097])
                    ("" variable
                       (:constant-flag t
                        :type ("MatStencil" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24097 24115])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24116 24128])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24128 24132])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24132 24136]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [24043 24137])
            ("MatZeroRowsColumns" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24185 24189])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24189 24198])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24198 24215])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24216 24228])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24228 24232])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24232 24236]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [24151 24237])
            ("MatZeroRowsColumnsIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24287 24291])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24291 24294])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24294 24306])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24306 24310])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24310 24314]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [24251 24315])
            ("MatGetSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24356 24360])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24360 24370])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24370 24380]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [24330 24381])
            ("MatGetLocalSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24426 24430])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24430 24440])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24440 24450]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [24395 24451])
            ("MatGetOwnershipRange" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24501 24505])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24505 24515])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24515 24525]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [24465 24526])
            ("MatGetOwnershipRanges" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24577 24581])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24581 24598]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [24540 24599])
            ("MatGetOwnershipRangeColumn" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24655 24659])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24659 24669])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24669 24679]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [24613 24680])
            ("MatGetOwnershipRangesColumn" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24737 24741])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24741 24758]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [24694 24759])
            ("MatGetOwnershipIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24806 24810])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24810 24814])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24814 24818]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [24773 24819])
            ("MatGetSubMatrices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24867 24871])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24871 24880])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24880 24890])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24891 24901])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24902 24911])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24911 24918]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [24834 24920])
            ("MatGetSubMatricesMPI" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24970 24974])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24974 24983])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24983 24993])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24994 25004])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25005 25014])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25014 25021]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [24934 25023])
            ("MatDestroyMatrices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25071 25080])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25080 25087]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25037 25089])
            ("MatGetSubMatrix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25134 25138])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25138 25141])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25141 25144])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25144 25153])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25153 25159]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25103 25160])
            ("MatGetLocalSubMatrix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25210 25214])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25214 25217])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25217 25220])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25220 25225]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25174 25226])
            ("MatRestoreLocalSubMatrix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25280 25284])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25284 25287])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25287 25290])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25290 25295]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25240 25296])
            ("MatGetSeqNonzeroStructure" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25351 25355])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25355 25360]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25310 25361])
            ("MatDestroySeqNonzeroStructure" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25420 25425]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25375 25426])
            ("MatCreateMPIAIJSumSeqAIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25481 25490])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25490 25494])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25494 25503])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25503 25512])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25512 25521])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25521 25526]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25441 25527])
            ("MatCreateMPIAIJSumSeqAIJSymbolic" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25589 25598])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25598 25602])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25602 25611])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25611 25620])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25620 25625]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25541 25626])
            ("MatCreateMPIAIJSumSeqAIJNumeric" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25687 25691])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25691 25695]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25640 25696])
            ("MatMPIAIJGetLocalMat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25746 25750])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25750 25759])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25759 25764]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25710 25765])
            ("MatMPIAIJGetLocalMatCondensed" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25824 25828])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25828 25837])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25837 25841])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25841 25845])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25845 25850]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25779 25851])
            ("MatGetBrowsOfAcols" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25899 25903])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25903 25907])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25907 25916])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25916 25920])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25920 25924])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25924 25929]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25865 25930])
            ("MatGetGhosts" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25972 25976])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25977 25988])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25988 26006]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25944 26008])
            ("MatIncreaseOverlap" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26057 26061])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26061 26070])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26070 26074])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26075 26084]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26023 26085])
            ("MatIncreaseOverlapSplit" function
               (:prototype-flag t
                :arguments 
                  ( ("mat" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26138 26146])
                    ("n" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26146 26157])
                    ("is" variable
                       (:dereference 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26157 26165])
                    ("ov" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26165 26177]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26099 26178])
            ("MatMPIAIJSetUseScalableIncreaseOverlap" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26246 26250])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26250 26260]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26192 26261])
            ("MatMatMult" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26302 26306])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26306 26310])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26310 26319])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26319 26329])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26329 26334]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26276 26335])
            ("MatMatMultSymbolic" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26383 26387])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26387 26391])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26391 26401])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26401 26406]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26349 26407])
            ("MatMatMultNumeric" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26454 26458])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26458 26462])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26462 26466]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26421 26467])
            ("MatMatMatMult" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26511 26515])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26515 26519])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26519 26523])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26523 26532])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26532 26542])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26542 26547]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26482 26548])
            ("MatPtAP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26586 26590])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26590 26594])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26594 26603])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26603 26613])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26613 26618]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26563 26619])
            ("MatPtAPSymbolic" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26664 26668])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26668 26672])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26672 26682])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26682 26687]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26633 26688])
            ("MatPtAPNumeric" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26732 26736])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26736 26740])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26740 26744]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26702 26745])
            ("MatRARt" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26782 26786])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26786 26790])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26790 26799])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26799 26809])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26809 26814]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26759 26815])
            ("MatRARtSymbolic" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26860 26864])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26864 26868])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26868 26878])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26878 26883]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26829 26884])
            ("MatRARtNumeric" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26928 26932])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26932 26936])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26936 26940]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26898 26941])
            ("MatTransposeMatMult" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26991 26995])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26995 26999])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26999 27008])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27008 27018])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27018 27023]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26956 27024])
            ("MatTransposetMatMultSymbolic" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27082 27086])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27086 27090])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27090 27100])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27100 27105]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27038 27106])
            ("MatTransposetMatMultNumeric" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27163 27167])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27167 27171])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27171 27175]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27120 27176])
            ("MatMatTransposeMult" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27225 27229])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27229 27233])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27233 27242])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27242 27252])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27252 27257]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27190 27258])
            ("MatMatTransposeMultSymbolic" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27315 27319])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27319 27323])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27323 27333])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27333 27338]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27272 27339])
            ("MatMatTransposeMultNumeric" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27395 27399])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27399 27403])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27403 27407]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27353 27408])
            ("MatAXPY" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27446 27450])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27450 27462])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27462 27466])
                    ("" variable (:type ("MatStructure" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27466 27479]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27423 27480])
            ("MatAYPX" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27517 27521])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27521 27533])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27533 27537])
                    ("" variable (:type ("MatStructure" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27537 27550]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27494 27551])
            ("MatScale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27590 27594])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27594 27606]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27566 27607])
            ("MatShift" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27645 27649])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27649 27661]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27621 27662])
            ("MatSetLocalToGlobalMapping" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27719 27723])
                    ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27723 27746])
                    ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27746 27769]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27677 27770])
            ("MatGetLocalToGlobalMapping" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27826 27830])
                    ("" variable
                       (:pointer 1
                        :type ("ISLocalToGlobalMapping" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27830 27854])
                    ("" variable
                       (:pointer 1
                        :type ("ISLocalToGlobalMapping" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27854 27878]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27784 27879])
            ("MatGetLayouts" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27922 27926])
                    ("" variable
                       (:pointer 1
                        :type ("PetscLayout" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27926 27939])
                    ("" variable
                       (:pointer 1
                        :type ("PetscLayout" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27939 27952]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27893 27953])
            ("MatZeroRowsLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27999 28003])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28003 28012])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28012 28029])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28030 28042])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28042 28046])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28046 28050]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [27967 28051])
            ("MatZeroRowsLocalIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28099 28103])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28103 28106])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28106 28118])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28118 28122])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28122 28126]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28065 28127])
            ("MatZeroRowsColumnsLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28180 28184])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28184 28193])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28193 28210])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28211 28223])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28223 28227])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28227 28231]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28141 28232])
            ("MatZeroRowsColumnsLocalIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28287 28291])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28291 28294])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28294 28306])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28306 28310])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28310 28314]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28246 28315])
            ("MatSetValuesLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28362 28366])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28366 28375])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28375 28391])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28392 28401])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28401 28417])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28418 28437])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28438 28449]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28329 28450])
            ("MatSetValuesBlockedLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28504 28508])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28508 28517])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28517 28533])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28534 28543])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28543 28559])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28560 28579])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28580 28591]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28464 28592])
            ("MatStashSetInitialSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28645 28649])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28649 28658])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28658 28667]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28607 28668])
            ("MatStashGetInfo" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28713 28717])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28717 28727])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28727 28737])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28737 28747])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28747 28757]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28682 28758])
            ("MatInterpolate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28803 28807])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28807 28811])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28811 28815]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28773 28816])
            ("MatInterpolateAdd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28863 28867])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28867 28871])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28871 28875])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28875 28879]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28830 28880])
            ("MatRestrict" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28921 28925])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28925 28929])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28929 28933]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28894 28934])
            ("MatCreateVecs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28977 28981])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28981 28986])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28986 28991]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [28948 28992])
            ("MatGetVecs" function
               (:arguments 
                  ( ("mat" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29079 29087])
                    ("x" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29087 29094])
                    ("y" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29094 29101]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29053 29134])
            ("MatCreateRedundantMatrix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29188 29192])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29192 29201])
                    ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29201 29210])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29210 29219])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29219 29224]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29148 29225])
            ("MatGetMultiProcBlock" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29275 29279])
                    ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29279 29288])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29288 29297])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29297 29302]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29239 29303])
            ("MatFindZeroDiagonals" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29353 29357])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29357 29361]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29317 29362])
            ("MatFindOffBlockDiagonalEntries" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29422 29426])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29426 29430]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29376 29431])
            ("MatCreateMPIMatConcatenateSeqMat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29493 29502])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29502 29506])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29506 29515])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29515 29524])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29524 29529]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [29445 29530])
            ("MatSetValue" function
               (:arguments 
                  ( ("v" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30182 30188])
                    ("i" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30188 30199])
                    ("j" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30199 30210])
                    ("va" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30210 30225])
                    ("mode" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30225 30241]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [30155 30286])
            ("MatGetValue" function
               (:arguments 
                  ( ("v" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30335 30341])
                    ("i" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30341 30352])
                    ("j" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30352 30363])
                    ("va" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30363 30379]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [30308 30418])
            ("MatSetValueLocal" function
               (:arguments 
                  ( ("v" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30472 30478])
                    ("i" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30478 30489])
                    ("j" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30489 30500])
                    ("va" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30500 30515])
                    ("mode" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30515 30531]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [30440 30581])
            ("MatPreallocateInitialize" variable (:constant-flag t) nil [31956 31980])
            ("MatPreallocateSetLocal" variable (:constant-flag t) nil [33736 33758])
            ("MatPreallocateSetLocalBlock" variable (:constant-flag t) nil [35378 35405])
            ("MatPreallocateSymmetricSetLocalBlock" variable (:constant-flag t) nil [36944 36980])
            ("MatPreallocateSet" variable (:constant-flag t) nil [38492 38509])
            ("MatPreallocateSymmetricSetBlock" variable (:constant-flag t) nil [40256 40287])
            ("MatPreallocateLocation" variable (:constant-flag t) nil [41605 41627])
            ("MatPreallocateFinalize" variable (:constant-flag t) nil [42799 42821])
            ("MatShellGetContext" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42982 42986])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [42986 42993]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [42948 42994])
            ("MatInodeAdjustForInodes" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43048 43052])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43052 43056])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43056 43060]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [43009 43061])
            ("MatInodeGetInodeSizes" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43112 43116])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43116 43127])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43127 43139])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43140 43151]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [43075 43152])
            ("MatSeqAIJSetColumnIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43208 43212])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43212 43222]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [43167 43224])
            ("MatSeqBAIJSetColumnIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43280 43284])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43284 43294]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [43238 43296])
            ("MatCreateSeqAIJWithArrays" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43351 43360])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43360 43369])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43369 43378])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43378 43388])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43389 43399])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43400 43413])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43414 43419]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [43310 43420])
            ("MatCreateSeqBAIJWithArrays" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43476 43485])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43485 43494])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43494 43503])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43503 43512])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43512 43522])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43523 43533])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43534 43547])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43548 43553]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [43434 43554])
            ("MatCreateSeqSBAIJWithArrays" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43611 43620])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43620 43629])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43629 43638])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43638 43647])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43647 43657])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43658 43668])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43669 43682])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43683 43688]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [43568 43689])
            ("MatCreateSeqAIJFromTriple" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43744 43753])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43753 43762])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43762 43771])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43771 43781])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43782 43792])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43793 43806])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43807 43812])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43812 43821])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43821 43831]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [43703 43832])
            ("MAT_SKIP_ALLOCATION" variable (:constant-flag t) nil [43842 43861])
            ("MatSeqBAIJSetPreallocation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43921 43925])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43925 43934])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43934 43943])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43943 43959]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [43879 43961])
            ("MatSeqSBAIJSetPreallocation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44018 44022])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44022 44031])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44031 44040])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44040 44056]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [43975 44058])
            ("MatSeqAIJSetPreallocation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44113 44117])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44117 44126])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44126 44142]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [44072 44144])
            ("MatMPIBAIJSetPreallocation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44201 44205])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44205 44214])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44214 44223])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44223 44239])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44240 44249])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44249 44265]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [44159 44267])
            ("MatMPISBAIJSetPreallocation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44324 44328])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44328 44337])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44337 44346])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44346 44362])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44363 44372])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44372 44388]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [44281 44390])
            ("MatMPIAIJSetPreallocation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44445 44449])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44449 44458])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44458 44474])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44475 44484])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44484 44500]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [44404 44502])
            ("MatSeqAIJSetPreallocationCSR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44560 44564])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44564 44581])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44582 44599])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44600 44620]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [44516 44622])
            ("MatSeqBAIJSetPreallocationCSR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44681 44685])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44685 44694])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44694 44710])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44711 44727])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44728 44747]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [44636 44749])
            ("MatMPIAIJSetPreallocationCSR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44807 44811])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44811 44827])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44828 44844])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44845 44864]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [44763 44866])
            ("MatMPIBAIJSetPreallocationCSR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44925 44929])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44929 44938])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44938 44954])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44955 44971])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [44972 44991]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [44880 44993])
            ("MatMPIAdjSetPreallocation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45048 45052])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45052 45062])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45063 45073])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45074 45084]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [45007 45086])
            ("MatMPIDenseSetPreallocation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45143 45147])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45147 45160]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [45100 45162])
            ("MatSeqDenseSetPreallocation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45219 45223])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45223 45236]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [45176 45238])
            ("MatMPIAIJGetSeqAIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45286 45290])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45290 45295])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45295 45300])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45300 45317]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [45252 45319])
            ("MatMPIBAIJGetSeqBAIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45369 45373])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45373 45378])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45378 45383])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45383 45400]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [45333 45402])
            ("MatMPIAdjCreateNonemptySubcommMat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45465 45469])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45469 45474]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [45416 45475])
            ("MatISSetPreallocation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45527 45531])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45531 45540])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45540 45556])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45557 45566])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45566 45582]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [45490 45584])
            ("MatSeqDenseSetLDA" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45631 45635])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45635 45644]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [45598 45645])
            ("MatDenseGetLocalMatrix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45697 45701])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45701 45706]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [45659 45707])
            ("MatStoreValues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45752 45756]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [45722 45757])
            ("MatRetrieveValues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45804 45808]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [45771 45809])
            ("MatDAADSetCtx" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45853 45857])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [45857 45863]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [45824 45864])
            ("MatFindNonzeroRows" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45913 45917])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45917 45921]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [45879 45922])
            ("MatOrderingType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [46168 46204])
            ("MATORDERINGNATURAL" variable (:constant-flag t) nil [46213 46231])
            ("MATORDERINGND" variable (:constant-flag t) nil [46254 46267])
            ("MATORDERING1WD" variable (:constant-flag t) nil [46290 46304])
            ("MATORDERINGRCM" variable (:constant-flag t) nil [46327 46341])
            ("MATORDERINGQMD" variable (:constant-flag t) nil [46364 46378])
            ("MATORDERINGROWLENGTH" variable (:constant-flag t) nil [46401 46421])
            ("MATORDERINGWBM" variable (:constant-flag t) nil [46444 46458])
            ("MATORDERINGSPECTRAL" variable (:constant-flag t) nil [46481 46500])
            ("MATORDERINGAMD" variable (:constant-flag t) nil [46523 46537])
            ("MatGetOrdering" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46659 46663])
                    ("" variable (:type ("MatOrderingType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46663 46679])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [46679 46683])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [46683 46687]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [46629 46688])
            ("MatGetOrderingList" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscFunctionList" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [46736 46755]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [46702 46756])
            ("MatOrderingRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [46805 46817])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46836 46840])
                            ("" variable (:type ("MatOrderingType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46840 46856])
                            ("" variable
                               (:pointer 1
                                :type ("IS" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46856 46860])
                            ("" variable
                               (:pointer 1
                                :type ("IS" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46860 46864]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [46770 46866])
            ("MatOrderingList" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) nil [46880 46914])
            ("MatReorderForNonzeroDiagonal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46973 46977])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46977 46987])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46987 46990])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46990 46993]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [46929 46994])
            ("MatCreateLaplacian" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47042 47046])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47046 47056])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47056 47066])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [47066 47071]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [47008 47072])
            ("MatFactorShiftType" type
               (:typedef ("" type
                     (:members 
                        ( ("MAT_SHIFT_NONE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [47157 47172])
                          ("MAT_SHIFT_NONZERO" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [47172 47190])
                          ("MAT_SHIFT_POSITIVE_DEFINITE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [47190 47218])
                          ("MAT_SHIFT_INBLOCKS" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [47218 47237]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [47143 47257])
            ("MatFactorShiftTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [47271 47311])
            ("MatFactorShiftTypesDetail" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [47325 47371])
            ("MatFactorError" type
               (:typedef ("" type
                     (:members 
                        ( ("MAT_FACTOR_NOERROR" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [47570 47589])
                          ("MAT_FACTOR_STRUCT_ZEROPIVOT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [47589 47617])
                          ("MAT_FACTOR_NUMERIC_ZEROPIVOT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [47617 47646])
                          ("MAT_FACTOR_OUTMEMORY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [47646 47667])
                          ("MAT_FACTOR_OTHER" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [47667 47684]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [47556 47700])
            ("MatFactorInfo" type
               (:typedef ("" type
                     (:members 
                        ( ("diagonal_fill" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48353 48381])
                          ("usedt" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48441 48461])
                          ("dt" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48464 48481])
                          ("dtcol" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48517 48537])
                          ("dtcount" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48578 48600])
                          ("fill" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48655 48674])
                          ("levels" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48764 48785])
                          ("pivotinblocks" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48818 48846])
                          ("zeropivot" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol classsubparts) [49009 49033])
                          ("shifttype" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol classsubparts) [49086 49110])
                          ("shiftamount" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol classsubparts) [49184 49210]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [48334 49260])
            ("MatFactorInfoInitialize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("MatFactorInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49314 49329]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [49275 49330])
            ("MatCholeskyFactor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49377 49381])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49381 49384])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MatFactorInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49384 49405]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [49344 49406])
            ("MatCholeskyFactorSymbolic" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49461 49465])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49465 49469])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49469 49472])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MatFactorInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49472 49493]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [49420 49494])
            ("MatCholeskyFactorNumeric" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49548 49552])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49552 49556])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MatFactorInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49556 49577]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [49508 49578])
            ("MatLUFactor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49619 49623])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49623 49626])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49626 49629])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MatFactorInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49629 49650]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [49592 49651])
            ("MatILUFactor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49693 49697])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49697 49700])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49700 49703])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MatFactorInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49703 49724]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [49665 49725])
            ("MatLUFactorSymbolic" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49774 49778])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49778 49782])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49782 49785])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49785 49788])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MatFactorInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49788 49809]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [49739 49810])
            ("MatILUFactorSymbolic" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49860 49864])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49864 49868])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49868 49871])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49871 49874])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MatFactorInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49874 49895]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [49824 49896])
            ("MatICCFactorSymbolic" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49946 49950])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49950 49954])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49954 49957])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MatFactorInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49957 49978]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [49910 49979])
            ("MatICCFactor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50021 50025])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50025 50028])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MatFactorInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50028 50049]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [49993 50050])
            ("MatLUFactorNumeric" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50098 50102])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50102 50106])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MatFactorInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50106 50127]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50064 50128])
            ("MatGetInertia" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50171 50175])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50175 50185])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50185 50195])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50195 50205]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50142 50206])
            ("MatSolve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50244 50248])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50248 50252])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50252 50256]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50220 50257])
            ("MatForwardSolve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50302 50306])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50306 50310])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50310 50314]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50271 50315])
            ("MatBackwardSolve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50361 50365])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50365 50369])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50369 50373]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50329 50374])
            ("MatSolveAdd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50415 50419])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50419 50423])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50423 50427])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50427 50431]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50388 50432])
            ("MatSolveTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50479 50483])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50483 50487])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50487 50491]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50446 50492])
            ("MatSolveTransposeAdd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50542 50546])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50546 50550])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50550 50554])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50554 50558]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50506 50559])
            ("MatSolves" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50598 50602])
                    ("" variable (:type ("Vecs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50602 50607])
                    ("" variable (:type ("Vecs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50607 50612]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50573 50613])
            ("MatFactorSetSchurIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50662 50666])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50666 50669]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50627 50670])
            ("MatFactorGetSchurComplement" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50727 50731])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50731 50736]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50684 50737])
            ("MatFactorRestoreSchurComplement" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50798 50802])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50802 50807]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50751 50808])
            ("MatFactorInvertSchurComplement" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50868 50872]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50822 50873])
            ("MatFactorCreateSchurComplement" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50933 50937])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50937 50942]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50887 50943])
            ("MatFactorSolveSchurComplement" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51002 51006])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51006 51010])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51010 51014]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50957 51015])
            ("MatFactorSolveSchurComplementTranspose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51083 51087])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51087 51091])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51091 51095]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [51029 51096])
            ("MatSetUnfactored" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51142 51146]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [51110 51147])
            ("MatSORType" type
               (:typedef ("" type
                     (:members 
                        ( ("SOR_FORWARD_SWEEP" variable
                             (:constant-flag t
                              :default-value (51469 51470)
                              :type "int")
                              (reparse-symbol enumsubparts) [51451 51470])
                          ("SOR_BACKWARD_SWEEP" variable
                             (:constant-flag t
                              :default-value (51490 51491)
                              :type "int")
                              (reparse-symbol enumsubparts) [51471 51491])
                          ("SOR_SYMMETRIC_SWEEP" variable
                             (:constant-flag t
                              :default-value (51512 51513)
                              :type "int")
                              (reparse-symbol enumsubparts) [51492 51513])
                          ("SOR_LOCAL_FORWARD_SWEEP" variable
                             (:constant-flag t
                              :default-value (51553 51554)
                              :type "int")
                              (reparse-symbol enumsubparts) [51529 51554])
                          ("SOR_LOCAL_BACKWARD_SWEEP" variable
                             (:constant-flag t
                              :default-value (51580 51581)
                              :type "int")
                              (reparse-symbol enumsubparts) [51555 51581])
                          ("SOR_LOCAL_SYMMETRIC_SWEEP" variable
                             (:constant-flag t
                              :default-value (51623 51625)
                              :type "int")
                              (reparse-symbol enumsubparts) [51597 51625])
                          ("SOR_ZERO_INITIAL_GUESS" variable
                             (:constant-flag t
                              :default-value (51649 51651)
                              :type "int")
                              (reparse-symbol enumsubparts) [51626 51651])
                          ("SOR_EISENSTAT" variable
                             (:constant-flag t
                              :default-value (51681 51683)
                              :type "int")
                              (reparse-symbol enumsubparts) [51667 51683])
                          ("SOR_APPLY_UPPER" variable
                             (:constant-flag t
                              :default-value (51700 51702)
                              :type "int")
                              (reparse-symbol enumsubparts) [51684 51702])
                          ("SOR_APPLY_LOWER" variable
                             (:constant-flag t
                              :default-value (51719 51722)
                              :type "int")
                              (reparse-symbol enumsubparts) [51703 51722]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [51437 51735])
            ("MatSOR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51771 51775])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51775 51779])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51779 51789])
                    ("" variable (:type ("MatSORType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51789 51800])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51800 51810])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51810 51819])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51819 51828])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51828 51832]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [51749 51833])
            ("MatColoring" type
               (:typedef ("_p_MatColoring" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [52107 52150])
            ("MatColoringType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [52295 52342])
            ("MATCOLORINGJP" variable (:constant-flag t) nil [52351 52364])
            ("MATCOLORINGPOWER" variable (:constant-flag t) nil [52383 52399])
            ("MATCOLORINGNATURAL" variable (:constant-flag t) nil [52418 52436])
            ("MATCOLORINGSL" variable (:constant-flag t) nil [52455 52468])
            ("MATCOLORINGLF" variable (:constant-flag t) nil [52487 52500])
            ("MATCOLORINGID" variable (:constant-flag t) nil [52519 52532])
            ("MATCOLORINGGREEDY" variable (:constant-flag t) nil [52551 52568])
            ("MatColoringWeightType" type
               (:typedef ("" type
                     (:members 
                        ( ("MAT_COLORING_WEIGHT_RANDOM" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [53002 53029])
                          ("MAT_COLORING_WEIGHT_LEXICAL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [53029 53057])
                          ("MAT_COLORING_WEIGHT_LF" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [53057 53080])
                          ("MAT_COLORING_WEIGHT_SL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [53080 53103]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [52988 53126])
            ("MatColoringCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53174 53178])
                    ("" variable
                       (:pointer 1
                        :type ("MatColoring" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53178 53191]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53141 53192])
            ("MatColoringGetDegrees" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53243 53247])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53247 53256])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53256 53266]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53206 53267])
            ("MatColoringDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("MatColoring" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53315 53328]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53281 53329])
            ("MatColoringView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53374 53386])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53386 53398]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53343 53399])
            ("MatColoringSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53447 53459])
                    ("" variable (:type ("MatColoringType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53459 53475]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53413 53476])
            ("MatColoringSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53531 53543]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53490 53544])
            ("MatColoringSetDistance" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53596 53608])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53608 53617]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53558 53618])
            ("MatColoringGetDistance" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53670 53682])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53682 53692]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53632 53693])
            ("MatColoringSetMaxColors" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53746 53758])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53758 53767]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53707 53768])
            ("MatColoringGetMaxColors" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53821 53833])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53833 53843]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53782 53844])
            ("MatColoringApply" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53890 53902])
                    ("" variable
                       (:pointer 1
                        :type ("ISColoring" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53902 53914]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53858 53915])
            ("MatColoringRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [53964 53976])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("MatColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53995 54007]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53929 54009])
            ("MatColoringPatch" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54055 54059])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54059 54068])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54068 54077])
                    ("" variable (:type ("ISColoringValue" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54077 54094])
                    ("" variable
                       (:pointer 1
                        :type ("ISColoring" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54095 54107]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54023 54108])
            ("MatColoringSetWeightType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54162 54174])
                    ("" variable (:type ("MatColoringWeightType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54174 54196]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54122 54197])
            ("MatColoringSetWeights" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54248 54260])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54260 54271])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54271 54281]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54211 54282])
            ("MatColoringCreateWeights" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54336 54348])
                    ("" variable
                       (:pointer 2
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54348 54361])
                    ("lperm" variable
                       (:pointer 2
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54361 54378]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54296 54379])
            ("MatFDColoring" type
               (:typedef ("_p_MatFDColoring" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [54606 54653])
            ("MatFDColoringCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54703 54707])
                    ("" variable (:type ("ISColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54707 54718])
                    ("" variable
                       (:pointer 1
                        :type ("MatFDColoring" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54718 54734]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54668 54735])
            ("MatFDColoringDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("MatFDColoring" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54785 54800]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54749 54801])
            ("MatFDColoringView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatFDColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54848 54862])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54862 54874]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54815 54875])
            ("MatFDColoringSetFunction" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatFDColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54929 54943])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [54962 54967]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [54968 54974]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54889 54975])
            ("MatFDColoringGetFunction" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatFDColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55029 55043])
                    (nil variable (:pointer (("" variable (:type "void") (reparse-symbol arg-sub-list) [55063 55068])) :type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55043 55069])
                    ("" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) [55069 55076]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54989 55077])
            ("MatFDColoringSetParameters" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatFDColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55133 55147])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55147 55157])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55157 55167]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55091 55168])
            ("MatFDColoringSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatFDColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55225 55239]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55182 55240])
            ("MatFDColoringApply" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55288 55292])
                    ("" variable (:type ("MatFDColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55292 55306])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55306 55310])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [55310 55317]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55254 55318])
            ("MatFDColoringSetF" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatFDColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55365 55379])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55379 55383]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55332 55384])
            ("MatFDColoringGetPerturbedColumns" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatFDColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55446 55460])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55460 55470])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55470 55481]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55398 55483])
            ("MatFDColoringSetUp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55531 55535])
                    ("" variable (:type ("ISColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55535 55546])
                    ("" variable (:type ("MatFDColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55546 55560]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55497 55561])
            ("MatFDColoringSetBlockSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatFDColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55616 55630])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55630 55639])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55639 55648]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55575 55649])
            ("MatTransposeColoring" type
               (:typedef ("_p_MatTransposeColoring" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [55860 55921])
            ("MatTransposeColoringCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55978 55982])
                    ("" variable (:type ("ISColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55982 55993])
                    ("" variable
                       (:pointer 1
                        :type ("MatTransposeColoring" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55993 56016]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55936 56017])
            ("MatTransColoringApplySpToDen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatTransposeColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56075 56096])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56096 56100])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56100 56104]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [56031 56105])
            ("MatTransColoringApplyDenToSp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatTransposeColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56163 56184])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56184 56188])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56188 56192]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [56119 56193])
            ("MatTransposeColoringDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("MatTransposeColoring" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56250 56272]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [56207 56273])
            ("MatPartitioning" type
               (:typedef ("_p_MatPartitioning" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [56587 56638])
            ("MatPartitioningType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [56800 56840])
            ("MATPARTITIONINGCURRENT" variable (:constant-flag t) nil [56849 56871])
            ("MATPARTITIONINGAVERAGE" variable (:constant-flag t) nil [56891 56913])
            ("MATPARTITIONINGSQUARE" variable (:constant-flag t) nil [56934 56955])
            ("MATPARTITIONINGPARMETIS" variable (:constant-flag t) nil [56975 56998])
            ("MATPARTITIONINGCHACO" variable (:constant-flag t) nil [57018 57038])
            ("MATPARTITIONINGPARTY" variable (:constant-flag t) nil [57058 57078])
            ("MATPARTITIONINGPTSCOTCH" variable (:constant-flag t) nil [57098 57121])
            ("MATPARTITIONINGHIERARCH" variable (:constant-flag t) nil [57141 57164])
            ("MatPartitioningCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57229 57238])
                    ("" variable
                       (:pointer 1
                        :type ("MatPartitioning" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [57238 57255]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [57192 57256])
            ("MatPartitioningSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57308 57324])
                    ("" variable (:type ("MatPartitioningType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57324 57344]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [57270 57345])
            ("MatPartitioningSetNParts" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57399 57415])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57415 57424]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [57359 57425])
            ("MatPartitioningSetAdjacency" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57482 57498])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57498 57502]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [57439 57503])
            ("MatPartitioningSetVertexWeights" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57564 57580])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [57580 57596]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [57517 57598])
            ("MatPartitioningSetPartitionWeights" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57662 57678])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [57678 57696]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [57612 57698])
            ("MatPartitioningApply" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57748 57764])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [57764 57768]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [57712 57769])
            ("MatPartitioningDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("MatPartitioning" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [57821 57838]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [57783 57839])
            ("MatPartitioningRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [57893 57905])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57925 57941]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [57854 57943])
            ("MatPartitioningView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57995 58011])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58011 58023]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [57960 58024])
            ("MatPartitioningSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58083 58099]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [58038 58100])
            ("MatPartitioningGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58152 58168])
                    ("" variable
                       (:pointer 1
                        :type ("MatPartitioningType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [58168 58189]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [58114 58190])
            ("MatPartitioningParmetisSetRepartition" function
               (:prototype-flag t
                :arguments 
                  ( ("part" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58258 58279]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [58205 58280])
            ("MatPartitioningParmetisSetCoarseSequential" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58352 58368]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [58294 58369])
            ("MatPartitioningParmetisGetEdgeCut" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58432 58448])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [58449 58460]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [58383 58461])
            ("MPChacoGlobalType" type
               (:typedef ("" type
                     (:members 
                        ( ("MP_CHACO_MULTILEVEL" variable
                             (:constant-flag t
                              :default-value (58498 58499)
                              :type "int")
                              (reparse-symbol enumsubparts) [58478 58499])
                          ("MP_CHACO_SPECTRAL" variable
                             (:constant-flag t
                              :default-value (58518 58519)
                              :type "int")
                              (reparse-symbol enumsubparts) [58500 58519])
                          ("MP_CHACO_LINEAR" variable
                             (:constant-flag t
                              :default-value (58536 58537)
                              :type "int")
                              (reparse-symbol enumsubparts) [58520 58537])
                          ("MP_CHACO_RANDOM" variable
                             (:constant-flag t
                              :default-value (58554 58555)
                              :type "int")
                              (reparse-symbol enumsubparts) [58538 58555])
                          ("MP_CHACO_SCATTERED" variable
                             (:constant-flag t
                              :default-value (58575 58576)
                              :type "int")
                              (reparse-symbol enumsubparts) [58556 58576]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [58463 58597])
            ("MPChacoGlobalTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [58611 58650])
            ("MPChacoLocalType" type
               (:typedef ("" type
                     (:members 
                        ( ("MP_CHACO_KERNIGHAN" variable
                             (:constant-flag t
                              :default-value (58685 58686)
                              :type "int")
                              (reparse-symbol enumsubparts) [58666 58686])
                          ("MP_CHACO_NONE" variable
                             (:constant-flag t
                              :default-value (58701 58702)
                              :type "int")
                              (reparse-symbol enumsubparts) [58687 58702]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [58651 58722])
            ("MPChacoLocalTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [58736 58774])
            ("MPChacoEigenType" type
               (:typedef ("" type
                     (:members 
                        ( ("MP_CHACO_LANCZOS" variable
                             (:constant-flag t
                              :default-value (58807 58808)
                              :type "int")
                              (reparse-symbol enumsubparts) [58790 58808])
                          ("MP_CHACO_RQI" variable
                             (:constant-flag t
                              :default-value (58822 58823)
                              :type "int")
                              (reparse-symbol enumsubparts) [58809 58823]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [58775 58843])
            ("MPChacoEigenTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [58857 58895])
            ("MatPartitioningChacoSetGlobal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58955 58971])
                    ("" variable (:type ("MPChacoGlobalType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58971 58989]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [58910 58990])
            ("MatPartitioningChacoGetGlobal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59049 59065])
                    ("" variable
                       (:pointer 1
                        :type ("MPChacoGlobalType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59065 59084]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59004 59085])
            ("MatPartitioningChacoSetLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59143 59159])
                    ("" variable (:type ("MPChacoLocalType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59159 59176]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59099 59177])
            ("MatPartitioningChacoGetLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59235 59251])
                    ("" variable
                       (:pointer 1
                        :type ("MPChacoLocalType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59251 59269]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59191 59270])
            ("MatPartitioningChacoSetCoarseLevel" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59334 59350])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59350 59360]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59284 59361])
            ("MatPartitioningChacoSetEigenSolver" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59425 59441])
                    ("" variable (:type ("MPChacoEigenType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59441 59458]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59375 59459])
            ("MatPartitioningChacoGetEigenSolver" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59523 59539])
                    ("" variable
                       (:pointer 1
                        :type ("MPChacoEigenType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59539 59557]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59473 59558])
            ("MatPartitioningChacoSetEigenTol" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59619 59635])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59635 59645]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59572 59646])
            ("MatPartitioningChacoGetEigenTol" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59707 59723])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59723 59734]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59660 59735])
            ("MatPartitioningChacoSetEigenNumber" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59799 59815])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59815 59824]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59749 59825])
            ("MatPartitioningChacoGetEigenNumber" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59889 59905])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59905 59915]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59839 59916])
            ("MP_PARTY_OPT" variable (:constant-flag t) nil [59926 59938])
            ("MP_PARTY_LIN" variable (:constant-flag t) nil [59953 59965])
            ("MP_PARTY_SCA" variable (:constant-flag t) nil [59980 59992])
            ("MP_PARTY_RAN" variable (:constant-flag t) nil [60007 60019])
            ("MP_PARTY_GBF" variable (:constant-flag t) nil [60034 60046])
            ("MP_PARTY_GCF" variable (:constant-flag t) nil [60061 60073])
            ("MP_PARTY_BUB" variable (:constant-flag t) nil [60088 60100])
            ("MP_PARTY_DEF" variable (:constant-flag t) nil [60115 60127])
            ("MatPartitioningPartySetGlobal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60192 60208])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [60208 60220]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60147 60221])
            ("MP_PARTY_HELPFUL_SETS" variable (:constant-flag t) nil [60230 60251])
            ("MP_PARTY_KERNIGHAN_LIN" variable (:constant-flag t) nil [60265 60287])
            ("MP_PARTY_NONE" variable (:constant-flag t) nil [60301 60314])
            ("MatPartitioningPartySetLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60377 60393])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [60393 60405]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60333 60406])
            ("MatPartitioningPartySetCoarseLevel" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60470 60486])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60486 60496]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60420 60497])
            ("MatPartitioningPartySetBipart" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60556 60572])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60572 60582]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60511 60583])
            ("MatPartitioningPartySetMatchOptimization" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60653 60669])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60669 60679]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60597 60680])
            ("MPPTScotchStrategyType" type
               (:typedef ("" type
                     (:members 
                        ( ("MP_PTSCOTCH_QUALITY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [60697 60717])
                          ("MP_PTSCOTCH_SPEED" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [60717 60735])
                          ("MP_PTSCOTCH_BALANCE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [60735 60755])
                          ("MP_PTSCOTCH_SAFETY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [60755 60774])
                          ("MP_PTSCOTCH_SCALABILITY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [60774 60799]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [60682 60823])
            ("MPPTScotchStrategyTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [60837 60881])
            ("MatPartitioningPTScotchSetImbalance" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60947 60963])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60963 60973]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60896 60974])
            ("MatPartitioningPTScotchGetImbalance" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61039 61055])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61055 61066]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60988 61067])
            ("MatPartitioningPTScotchSetStrategy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61131 61147])
                    ("" variable (:type ("MPPTScotchStrategyType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61147 61170]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61081 61171])
            ("MatPartitioningPTScotchGetStrategy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61235 61251])
                    ("" variable
                       (:pointer 1
                        :type ("MPPTScotchStrategyType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61251 61275]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61185 61276])
            ("MatPartitioningHierarchicalGetFineparts" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61382 61398])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61398 61402]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61327 61403])
            ("MatPartitioningHierarchicalGetCoarseparts" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61474 61490])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61490 61494]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61417 61495])
            ("MatPartitioningHierarchicalSetNcoarseparts" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61567 61583])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61583 61592]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61509 61593])
            ("MatPartitioningHierarchicalSetNfineparts" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatPartitioning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61663 61679])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61680 61689]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61607 61690])
            ("MatCoarsen" type
               (:typedef ("_p_MatCoarsen" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [61925 61966])
            ("MatCoarsenType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [62106 62141])
            ("MATCOARSENMIS" variable (:constant-flag t) nil [62150 62163])
            ("MATCOARSENHEM" variable (:constant-flag t) nil [62179 62192])
            ("_PetscCDIntNd" type
               (:members 
                  ( ("next" variable
                       (:pointer 1
                        :type ("_PetscCDIntNd" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [62266 62293])
                    ("gid" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [62296 62321]))                  
                :type "struct")
                nil [62234 62336])
            ("PetscCDIntNd" type
               (:typedef ("_PetscCDIntNd" type (:type "struct") nil nil)
                :type "typedef")
                nil [62234 62336])
            ("_PetscCDArrNd" type
               (:members 
                  ( ("next" variable
                       (:pointer 1
                        :type ("_PetscCDArrNd" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [62399 62426])
                    ("array" variable
                       (:pointer 1
                        :type ("_PetscCDIntNd" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [62429 62457]))                  
                :type "struct")
                nil [62367 62472])
            ("PetscCDArrNd" type
               (:typedef ("_PetscCDArrNd" type (:type "struct") nil nil)
                :type "typedef")
                nil [62367 62472])
            ("_PetscCoarsenData" type
               (:members 
                  ( ("pool_list" variable (:type ("PetscCDArrNd" type (:type "class") nil nil)) (reparse-symbol classsubparts) [62510 62533])
                    ("new_node" variable
                       (:pointer 1
                        :type ("PetscCDIntNd" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [62553 62576])
                    ("new_left" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [62579 62601])
                    ("chk_sz" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [62604 62624])
                    ("extra_nodes" variable
                       (:pointer 1
                        :type ("PetscCDIntNd" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [62627 62653])
                    ("array" variable
                       (:pointer 2
                        :type ("PetscCDIntNd" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [62656 62677])
                    ("size" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [62702 62720])
                    ("mat" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [62723 62740]))                  
                :type "struct")
                nil [62474 62801])
            ("PetscCoarsenData" type
               (:typedef ("_PetscCoarsenData" type (:type "struct") nil nil)
                :type "typedef")
                nil [62474 62801])
            ("MatCoarsenCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62848 62857])
                    ("" variable
                       (:pointer 1
                        :type ("MatCoarsen" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [62857 62869]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62816 62870])
            ("MatCoarsenSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatCoarsen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62917 62928])
                    ("" variable (:type ("MatCoarsenType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62928 62943]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62884 62944])
            ("MatCoarsenSetAdjacency" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatCoarsen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62996 63007])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63007 63011]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62958 63012])
            ("MatCoarsenSetGreedyOrdering" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatCoarsen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63069 63080])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [63080 63089]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63026 63090])
            ("MatCoarsenSetStrictAggs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatCoarsen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63143 63154])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63154 63164]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63104 63165])
            ("MatCoarsenGetData" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatCoarsen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63213 63224])
                    ("" variable
                       (:pointer 2
                        :type ("PetscCoarsenData" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [63225 63246]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63179 63247])
            ("MatCoarsenApply" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatCoarsen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63292 63303]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63261 63304])
            ("MatCoarsenDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("MatCoarsen" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [63351 63363]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63318 63364])
            ("MatCoarsenRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [63413 63425])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("MatCoarsen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63445 63456]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63379 63458])
            ("MatCoarsenView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatCoarsen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63505 63516])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63516 63528]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63475 63529])
            ("MatCoarsenSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatCoarsen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63583 63594]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63543 63595])
            ("MatCoarsenGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatCoarsen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63642 63653])
                    ("" variable
                       (:pointer 1
                        :type ("MatCoarsenType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [63653 63669]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63609 63670])
            ("MatCoarsenViewFromOptions" function
               (:arguments 
                  ( ("A" variable (:type ("MatCoarsen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63732 63745])
                    ("obj" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63745 63761])
                    ("name" variable
                       (:dereference 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [63761 63779]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63691 63841])
            ("MatMeshToVertexGraph" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63892 63896])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63896 63905])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [63905 63910]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63856 63911])
            ("MatMeshToCellGraph" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63959 63963])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63963 63972])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [63972 63977]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63925 63978])
            ("MatOperation" type
               (:typedef ("" type
                     (:members 
                        ( ("MATOP_SET_VALUES" variable
                             (:constant-flag t
                              :default-value (64098 64099)
                              :type "int")
                              (reparse-symbol enumsubparts) [64081 64099])
                          ("MATOP_GET_ROW" variable
                             (:constant-flag t
                              :default-value (64130 64131)
                              :type "int")
                              (reparse-symbol enumsubparts) [64116 64131])
                          ("MATOP_RESTORE_ROW" variable
                             (:constant-flag t
                              :default-value (64166 64167)
                              :type "int")
                              (reparse-symbol enumsubparts) [64148 64167])
                          ("MATOP_MULT" variable
                             (:constant-flag t
                              :default-value (64195 64196)
                              :type "int")
                              (reparse-symbol enumsubparts) [64184 64196])
                          ("MATOP_MULT_ADD" variable
                             (:constant-flag t
                              :default-value (64228 64229)
                              :type "int")
                              (reparse-symbol enumsubparts) [64213 64229])
                          ("MATOP_MULT_TRANSPOSE" variable
                             (:constant-flag t
                              :default-value (64267 64268)
                              :type "int")
                              (reparse-symbol enumsubparts) [64246 64268])
                          ("MATOP_MULT_TRANSPOSE_ADD" variable
                             (:constant-flag t
                              :default-value (64310 64311)
                              :type "int")
                              (reparse-symbol enumsubparts) [64285 64311])
                          ("MATOP_SOLVE" variable
                             (:constant-flag t
                              :default-value (64340 64341)
                              :type "int")
                              (reparse-symbol enumsubparts) [64328 64341])
                          ("MATOP_SOLVE_ADD" variable
                             (:constant-flag t
                              :default-value (64374 64375)
                              :type "int")
                              (reparse-symbol enumsubparts) [64358 64375])
                          ("MATOP_SOLVE_TRANSPOSE" variable
                             (:constant-flag t
                              :default-value (64414 64415)
                              :type "int")
                              (reparse-symbol enumsubparts) [64392 64415])
                          ("MATOP_SOLVE_TRANSPOSE_ADD" variable
                             (:constant-flag t
                              :default-value (64458 64460)
                              :type "int")
                              (reparse-symbol enumsubparts) [64432 64460])
                          ("MATOP_LUFACTOR" variable
                             (:constant-flag t
                              :default-value (64492 64494)
                              :type "int")
                              (reparse-symbol enumsubparts) [64477 64494])
                          ("MATOP_CHOLESKYFACTOR" variable
                             (:constant-flag t
                              :default-value (64532 64534)
                              :type "int")
                              (reparse-symbol enumsubparts) [64511 64534])
                          ("MATOP_SOR" variable
                             (:constant-flag t
                              :default-value (64561 64563)
                              :type "int")
                              (reparse-symbol enumsubparts) [64551 64563])
                          ("MATOP_TRANSPOSE" variable
                             (:constant-flag t
                              :default-value (64596 64598)
                              :type "int")
                              (reparse-symbol enumsubparts) [64580 64598])
                          ("MATOP_GETINFO" variable
                             (:constant-flag t
                              :default-value (64629 64631)
                              :type "int")
                              (reparse-symbol enumsubparts) [64615 64631])
                          ("MATOP_EQUAL" variable
                             (:constant-flag t
                              :default-value (64660 64662)
                              :type "int")
                              (reparse-symbol enumsubparts) [64648 64662])
                          ("MATOP_GET_DIAGONAL" variable
                             (:constant-flag t
                              :default-value (64698 64700)
                              :type "int")
                              (reparse-symbol enumsubparts) [64679 64700])
                          ("MATOP_DIAGONAL_SCALE" variable
                             (:constant-flag t
                              :default-value (64738 64740)
                              :type "int")
                              (reparse-symbol enumsubparts) [64717 64740])
                          ("MATOP_NORM" variable
                             (:constant-flag t
                              :default-value (64768 64770)
                              :type "int")
                              (reparse-symbol enumsubparts) [64757 64770])
                          ("MATOP_ASSEMBLY_BEGIN" variable
                             (:constant-flag t
                              :default-value (64808 64810)
                              :type "int")
                              (reparse-symbol enumsubparts) [64787 64810])
                          ("MATOP_ASSEMBLY_END" variable
                             (:constant-flag t
                              :default-value (64846 64848)
                              :type "int")
                              (reparse-symbol enumsubparts) [64827 64848])
                          ("MATOP_SET_OPTION" variable
                             (:constant-flag t
                              :default-value (64882 64884)
                              :type "int")
                              (reparse-symbol enumsubparts) [64865 64884])
                          ("MATOP_ZERO_ENTRIES" variable
                             (:constant-flag t
                              :default-value (64920 64922)
                              :type "int")
                              (reparse-symbol enumsubparts) [64901 64922])
                          ("MATOP_ZERO_ROWS" variable
                             (:constant-flag t
                              :default-value (64955 64957)
                              :type "int")
                              (reparse-symbol enumsubparts) [64939 64957])
                          ("MATOP_LUFACTOR_SYMBOLIC" variable
                             (:constant-flag t
                              :default-value (64998 65000)
                              :type "int")
                              (reparse-symbol enumsubparts) [64974 65000])
                          ("MATOP_LUFACTOR_NUMERIC" variable
                             (:constant-flag t
                              :default-value (65040 65042)
                              :type "int")
                              (reparse-symbol enumsubparts) [65017 65042])
                          ("MATOP_CHOLESKY_FACTOR_SYMBOLIC" variable
                             (:constant-flag t
                              :default-value (65090 65092)
                              :type "int")
                              (reparse-symbol enumsubparts) [65059 65092])
                          ("MATOP_CHOLESKY_FACTOR_NUMERIC" variable
                             (:constant-flag t
                              :default-value (65139 65141)
                              :type "int")
                              (reparse-symbol enumsubparts) [65109 65141])
                          ("MATOP_SETUP_PREALLOCATION" variable
                             (:constant-flag t
                              :default-value (65184 65186)
                              :type "int")
                              (reparse-symbol enumsubparts) [65158 65186])
                          ("MATOP_ILUFACTOR_SYMBOLIC" variable
                             (:constant-flag t
                              :default-value (65228 65230)
                              :type "int")
                              (reparse-symbol enumsubparts) [65203 65230])
                          ("MATOP_ICCFACTOR_SYMBOLIC" variable
                             (:constant-flag t
                              :default-value (65272 65274)
                              :type "int")
                              (reparse-symbol enumsubparts) [65247 65274])
                          ("MATOP_DUPLICATE" variable
                             (:constant-flag t
                              :default-value (65399 65401)
                              :type "int")
                              (reparse-symbol enumsubparts) [65383 65401])
                          ("MATOP_FORWARD_SOLVE" variable
                             (:constant-flag t
                              :default-value (65438 65440)
                              :type "int")
                              (reparse-symbol enumsubparts) [65418 65440])
                          ("MATOP_BACKWARD_SOLVE" variable
                             (:constant-flag t
                              :default-value (65478 65480)
                              :type "int")
                              (reparse-symbol enumsubparts) [65457 65480])
                          ("MATOP_ILUFACTOR" variable
                             (:constant-flag t
                              :default-value (65513 65515)
                              :type "int")
                              (reparse-symbol enumsubparts) [65497 65515])
                          ("MATOP_ICCFACTOR" variable
                             (:constant-flag t
                              :default-value (65548 65550)
                              :type "int")
                              (reparse-symbol enumsubparts) [65532 65550])
                          ("MATOP_AXPY" variable
                             (:constant-flag t
                              :default-value (65578 65580)
                              :type "int")
                              (reparse-symbol enumsubparts) [65567 65580])
                          ("MATOP_GET_SUBMATRICES" variable
                             (:constant-flag t
                              :default-value (65619 65621)
                              :type "int")
                              (reparse-symbol enumsubparts) [65597 65621])
                          ("MATOP_INCREASE_OVERLAP" variable
                             (:constant-flag t
                              :default-value (65661 65663)
                              :type "int")
                              (reparse-symbol enumsubparts) [65638 65663])
                          ("MATOP_GET_VALUES" variable
                             (:constant-flag t
                              :default-value (65697 65699)
                              :type "int")
                              (reparse-symbol enumsubparts) [65680 65699])
                          ("MATOP_COPY" variable
                             (:constant-flag t
                              :default-value (65727 65729)
                              :type "int")
                              (reparse-symbol enumsubparts) [65716 65729])
                          ("MATOP_GET_ROW_MAX" variable
                             (:constant-flag t
                              :default-value (65764 65766)
                              :type "int")
                              (reparse-symbol enumsubparts) [65746 65766])
                          ("MATOP_SCALE" variable
                             (:constant-flag t
                              :default-value (65795 65797)
                              :type "int")
                              (reparse-symbol enumsubparts) [65783 65797])
                          ("MATOP_SHIFT" variable
                             (:constant-flag t
                              :default-value (65826 65828)
                              :type "int")
                              (reparse-symbol enumsubparts) [65814 65828])
                          ("MATOP_DIAGONAL_SET" variable
                             (:constant-flag t
                              :default-value (65864 65866)
                              :type "int")
                              (reparse-symbol enumsubparts) [65845 65866])
                          ("MATOP_ZERO_ROWS_COLUMNS" variable
                             (:constant-flag t
                              :default-value (65907 65909)
                              :type "int")
                              (reparse-symbol enumsubparts) [65883 65909])
                          ("MATOP_SET_RANDOM" variable
                             (:constant-flag t
                              :default-value (65943 65945)
                              :type "int")
                              (reparse-symbol enumsubparts) [65926 65945])
                          ("MATOP_GET_ROW_IJ" variable
                             (:constant-flag t
                              :default-value (65979 65981)
                              :type "int")
                              (reparse-symbol enumsubparts) [65962 65981])
                          ("MATOP_RESTORE_ROW_IJ" variable
                             (:constant-flag t
                              :default-value (66019 66021)
                              :type "int")
                              (reparse-symbol enumsubparts) [65998 66021])
                          ("MATOP_GET_COLUMN_IJ" variable
                             (:constant-flag t
                              :default-value (66058 66060)
                              :type "int")
                              (reparse-symbol enumsubparts) [66038 66060])
                          ("MATOP_RESTORE_COLUMN_IJ" variable
                             (:constant-flag t
                              :default-value (66101 66103)
                              :type "int")
                              (reparse-symbol enumsubparts) [66077 66103])
                          ("MATOP_FDCOLORING_CREATE" variable
                             (:constant-flag t
                              :default-value (66144 66146)
                              :type "int")
                              (reparse-symbol enumsubparts) [66120 66146])
                          ("MATOP_COLORING_PATCH" variable
                             (:constant-flag t
                              :default-value (66184 66186)
                              :type "int")
                              (reparse-symbol enumsubparts) [66163 66186])
                          ("MATOP_SET_UNFACTORED" variable
                             (:constant-flag t
                              :default-value (66224 66226)
                              :type "int")
                              (reparse-symbol enumsubparts) [66203 66226])
                          ("MATOP_PERMUTE" variable
                             (:constant-flag t
                              :default-value (66257 66259)
                              :type "int")
                              (reparse-symbol enumsubparts) [66243 66259])
                          ("MATOP_SET_VALUES_BLOCKED" variable
                             (:constant-flag t
                              :default-value (66301 66303)
                              :type "int")
                              (reparse-symbol enumsubparts) [66276 66303])
                          ("MATOP_GET_SUBMATRIX" variable
                             (:constant-flag t
                              :default-value (66340 66342)
                              :type "int")
                              (reparse-symbol enumsubparts) [66320 66342])
                          ("MATOP_DESTROY" variable
                             (:constant-flag t
                              :default-value (66373 66375)
                              :type "int")
                              (reparse-symbol enumsubparts) [66359 66375])
                          ("MATOP_VIEW" variable
                             (:constant-flag t
                              :default-value (66403 66405)
                              :type "int")
                              (reparse-symbol enumsubparts) [66392 66405])
                          ("MATOP_CONVERT_FROM" variable
                             (:constant-flag t
                              :default-value (66441 66443)
                              :type "int")
                              (reparse-symbol enumsubparts) [66422 66443])
                          ("MATOP_MATMAT_MULT" variable
                             (:constant-flag t
                              :default-value (66478 66480)
                              :type "int")
                              (reparse-symbol enumsubparts) [66460 66480])
                          ("MATOP_MATMAT_MULT_SYMBOLIC" variable
                             (:constant-flag t
                              :default-value (66524 66526)
                              :type "int")
                              (reparse-symbol enumsubparts) [66497 66526])
                          ("MATOP_MATMAT_MULT_NUMERIC" variable
                             (:constant-flag t
                              :default-value (66569 66571)
                              :type "int")
                              (reparse-symbol enumsubparts) [66543 66571])
                          ("MATOP_SET_LOCAL_TO_GLOBAL_MAP" variable
                             (:constant-flag t
                              :default-value (66618 66620)
                              :type "int")
                              (reparse-symbol enumsubparts) [66588 66620])
                          ("MATOP_SET_VALUES_LOCAL" variable
                             (:constant-flag t
                              :default-value (66660 66662)
                              :type "int")
                              (reparse-symbol enumsubparts) [66637 66662])
                          ("MATOP_ZERO_ROWS_LOCAL" variable
                             (:constant-flag t
                              :default-value (66701 66703)
                              :type "int")
                              (reparse-symbol enumsubparts) [66679 66703])
                          ("MATOP_GET_ROW_MAX_ABS" variable
                             (:constant-flag t
                              :default-value (66742 66744)
                              :type "int")
                              (reparse-symbol enumsubparts) [66720 66744])
                          ("MATOP_GET_ROW_MIN_ABS" variable
                             (:constant-flag t
                              :default-value (66783 66785)
                              :type "int")
                              (reparse-symbol enumsubparts) [66761 66785])
                          ("MATOP_CONVERT" variable
                             (:constant-flag t
                              :default-value (66816 66818)
                              :type "int")
                              (reparse-symbol enumsubparts) [66802 66818])
                          ("MATOP_SET_COLORING" variable
                             (:constant-flag t
                              :default-value (66854 66856)
                              :type "int")
                              (reparse-symbol enumsubparts) [66835 66856])
                          ("MATOP_SET_VALUES_ADIFOR" variable
                             (:constant-flag t
                              :default-value (66943 66945)
                              :type "int")
                              (reparse-symbol enumsubparts) [66919 66945])
                          ("MATOP_FD_COLORING_APPLY" variable
                             (:constant-flag t
                              :default-value (66986 66988)
                              :type "int")
                              (reparse-symbol enumsubparts) [66962 66988])
                          ("MATOP_SET_FROM_OPTIONS" variable
                             (:constant-flag t
                              :default-value (67028 67030)
                              :type "int")
                              (reparse-symbol enumsubparts) [67005 67030])
                          ("MATOP_MULT_CONSTRAINED" variable
                             (:constant-flag t
                              :default-value (67070 67072)
                              :type "int")
                              (reparse-symbol enumsubparts) [67047 67072])
                          ("MATOP_MULT_TRANSPOSE_CONSTRAIN" variable
                             (:constant-flag t
                              :default-value (67120 67122)
                              :type "int")
                              (reparse-symbol enumsubparts) [67089 67122])
                          ("MATOP_FIND_ZERO_DIAGONALS" variable
                             (:constant-flag t
                              :default-value (67165 67167)
                              :type "int")
                              (reparse-symbol enumsubparts) [67139 67167])
                          ("MATOP_MULT_MULTIPLE" variable
                             (:constant-flag t
                              :default-value (67204 67206)
                              :type "int")
                              (reparse-symbol enumsubparts) [67184 67206])
                          ("MATOP_SOLVE_MULTIPLE" variable
                             (:constant-flag t
                              :default-value (67244 67246)
                              :type "int")
                              (reparse-symbol enumsubparts) [67223 67246])
                          ("MATOP_GET_INERTIA" variable
                             (:constant-flag t
                              :default-value (67281 67283)
                              :type "int")
                              (reparse-symbol enumsubparts) [67263 67283])
                          ("MATOP_LOAD" variable
                             (:constant-flag t
                              :default-value (67311 67313)
                              :type "int")
                              (reparse-symbol enumsubparts) [67300 67313])
                          ("MATOP_IS_SYMMETRIC" variable
                             (:constant-flag t
                              :default-value (67349 67351)
                              :type "int")
                              (reparse-symbol enumsubparts) [67330 67351])
                          ("MATOP_IS_HERMITIAN" variable
                             (:constant-flag t
                              :default-value (67387 67389)
                              :type "int")
                              (reparse-symbol enumsubparts) [67368 67389])
                          ("MATOP_IS_STRUCTURALLY_SYMMETRIC" variable
                             (:constant-flag t
                              :default-value (67438 67440)
                              :type "int")
                              (reparse-symbol enumsubparts) [67406 67440])
                          ("MATOP_SET_VALUES_BLOCKEDLOCAL" variable
                             (:constant-flag t
                              :default-value (67487 67489)
                              :type "int")
                              (reparse-symbol enumsubparts) [67457 67489])
                          ("MATOP_GET_VECS" variable
                             (:constant-flag t
                              :default-value (67521 67523)
                              :type "int")
                              (reparse-symbol enumsubparts) [67506 67523])
                          ("MATOP_MAT_MULT" variable
                             (:constant-flag t
                              :default-value (67555 67557)
                              :type "int")
                              (reparse-symbol enumsubparts) [67540 67557])
                          ("MATOP_MAT_MULT_SYMBOLIC" variable
                             (:constant-flag t
                              :default-value (67598 67600)
                              :type "int")
                              (reparse-symbol enumsubparts) [67574 67600])
                          ("MATOP_MAT_MULT_NUMERIC" variable
                             (:constant-flag t
                              :default-value (67640 67642)
                              :type "int")
                              (reparse-symbol enumsubparts) [67617 67642])
                          ("MATOP_PTAP" variable
                             (:constant-flag t
                              :default-value (67670 67672)
                              :type "int")
                              (reparse-symbol enumsubparts) [67659 67672])
                          ("MATOP_PTAP_SYMBOLIC" variable
                             (:constant-flag t
                              :default-value (67709 67711)
                              :type "int")
                              (reparse-symbol enumsubparts) [67689 67711])
                          ("MATOP_PTAP_NUMERIC" variable
                             (:constant-flag t
                              :default-value (67747 67749)
                              :type "int")
                              (reparse-symbol enumsubparts) [67728 67749])
                          ("MATOP_MAT_TRANSPOSE_MULT" variable
                             (:constant-flag t
                              :default-value (67791 67793)
                              :type "int")
                              (reparse-symbol enumsubparts) [67766 67793])
                          ("MATOP_MAT_TRANSPOSE_MULT_SYMBO" variable
                             (:constant-flag t
                              :default-value (67841 67843)
                              :type "int")
                              (reparse-symbol enumsubparts) [67810 67843])
                          ("MATOP_MAT_TRANSPOSE_MULT_NUMER" variable
                             (:constant-flag t
                              :default-value (67891 67893)
                              :type "int")
                              (reparse-symbol enumsubparts) [67860 67893])
                          ("MATOP_CONJUGATE" variable
                             (:constant-flag t
                              :default-value (68114 68117)
                              :type "int")
                              (reparse-symbol enumsubparts) [68098 68117])
                          ("MATOP_SET_VALUES_ROW" variable
                             (:constant-flag t
                              :default-value (68203 68206)
                              :type "int")
                              (reparse-symbol enumsubparts) [68182 68206])
                          ("MATOP_REAL_PART" variable
                             (:constant-flag t
                              :default-value (68239 68242)
                              :type "int")
                              (reparse-symbol enumsubparts) [68223 68242])
                          ("MATOP_IMAGINARY_PART" variable
                             (:constant-flag t
                              :default-value (68280 68283)
                              :type "int")
                              (reparse-symbol enumsubparts) [68259 68283])
                          ("MATOP_GET_ROW_UPPER_TRIANGULAR" variable
                             (:constant-flag t
                              :default-value (68331 68334)
                              :type "int")
                              (reparse-symbol enumsubparts) [68300 68334])
                          ("MATOP_RESTORE_ROW_UPPER_TRIANG" variable
                             (:constant-flag t
                              :default-value (68382 68385)
                              :type "int")
                              (reparse-symbol enumsubparts) [68351 68385])
                          ("MATOP_MAT_SOLVE" variable
                             (:constant-flag t
                              :default-value (68418 68421)
                              :type "int")
                              (reparse-symbol enumsubparts) [68402 68421])
                          ("MATOP_GET_REDUNDANT_MATRIX" variable
                             (:constant-flag t
                              :default-value (68465 68468)
                              :type "int")
                              (reparse-symbol enumsubparts) [68438 68468])
                          ("MATOP_GET_ROW_MIN" variable
                             (:constant-flag t
                              :default-value (68503 68506)
                              :type "int")
                              (reparse-symbol enumsubparts) [68485 68506])
                          ("MATOP_GET_COLUMN_VECTOR" variable
                             (:constant-flag t
                              :default-value (68547 68550)
                              :type "int")
                              (reparse-symbol enumsubparts) [68523 68550])
                          ("MATOP_MISSING_DIAGONAL" variable
                             (:constant-flag t
                              :default-value (68590 68593)
                              :type "int")
                              (reparse-symbol enumsubparts) [68567 68593])
                          ("MATOP_GET_SEQ_NONZERO_STRUCTUR" variable
                             (:constant-flag t
                              :default-value (68641 68644)
                              :type "int")
                              (reparse-symbol enumsubparts) [68610 68644])
                          ("MATOP_CREATE" variable
                             (:constant-flag t
                              :default-value (68674 68677)
                              :type "int")
                              (reparse-symbol enumsubparts) [68661 68677])
                          ("MATOP_GET_GHOSTS" variable
                             (:constant-flag t
                              :default-value (68711 68714)
                              :type "int")
                              (reparse-symbol enumsubparts) [68694 68714])
                          ("MATOP_GET_LOCAL_SUB_MATRIX" variable
                             (:constant-flag t
                              :default-value (68758 68761)
                              :type "int")
                              (reparse-symbol enumsubparts) [68731 68761])
                          ("MATOP_RESTORE_LOCALSUB_MATRIX" variable
                             (:constant-flag t
                              :default-value (68808 68811)
                              :type "int")
                              (reparse-symbol enumsubparts) [68778 68811])
                          ("MATOP_MULT_DIAGONAL_BLOCK" variable
                             (:constant-flag t
                              :default-value (68854 68857)
                              :type "int")
                              (reparse-symbol enumsubparts) [68828 68857])
                          ("MATOP_HERMITIAN_TRANSPOSE" variable
                             (:constant-flag t
                              :default-value (68900 68903)
                              :type "int")
                              (reparse-symbol enumsubparts) [68874 68903])
                          ("MATOP_MULT_HERMITIAN_TRANSPOSE" variable
                             (:constant-flag t
                              :default-value (68951 68954)
                              :type "int")
                              (reparse-symbol enumsubparts) [68920 68954])
                          ("MATOP_MULT_HERMITIAN_TRANS_ADD" variable
                             (:constant-flag t
                              :default-value (69002 69005)
                              :type "int")
                              (reparse-symbol enumsubparts) [68971 69005])
                          ("MATOP_GET_MULTI_PROC_BLOCK" variable
                             (:constant-flag t
                              :default-value (69049 69052)
                              :type "int")
                              (reparse-symbol enumsubparts) [69022 69052])
                          ("MATOP_FIND_NONZERO_ROWS" variable
                             (:constant-flag t
                              :default-value (69093 69096)
                              :type "int")
                              (reparse-symbol enumsubparts) [69069 69096])
                          ("MATOP_GET_COLUMN_NORMS" variable
                             (:constant-flag t
                              :default-value (69136 69139)
                              :type "int")
                              (reparse-symbol enumsubparts) [69113 69139])
                          ("MATOP_INVERT_BLOCK_DIAGONAL" variable
                             (:constant-flag t
                              :default-value (69184 69187)
                              :type "int")
                              (reparse-symbol enumsubparts) [69156 69187])
                          ("MATOP_GET_SUB_MATRICES_PARALLE" variable
                             (:constant-flag t
                              :default-value (69283 69286)
                              :type "int")
                              (reparse-symbol enumsubparts) [69252 69286])
                          ("MATOP_SET_VALUES_BATCH" variable
                             (:constant-flag t
                              :default-value (69326 69329)
                              :type "int")
                              (reparse-symbol enumsubparts) [69303 69329])
                          ("MATOP_TRANSPOSE_MAT_MULT" variable
                             (:constant-flag t
                              :default-value (69371 69374)
                              :type "int")
                              (reparse-symbol enumsubparts) [69346 69374])
                          ("MATOP_TRANSPOSE_MAT_MULT_SYMBO" variable
                             (:constant-flag t
                              :default-value (69422 69425)
                              :type "int")
                              (reparse-symbol enumsubparts) [69391 69425])
                          ("MATOP_TRANSPOSE_MAT_MULT_NUMER" variable
                             (:constant-flag t
                              :default-value (69473 69476)
                              :type "int")
                              (reparse-symbol enumsubparts) [69442 69476])
                          ("MATOP_TRANSPOSE_COLORING_CREAT" variable
                             (:constant-flag t
                              :default-value (69524 69527)
                              :type "int")
                              (reparse-symbol enumsubparts) [69493 69527])
                          ("MATOP_TRANS_COLORING_APPLY_SPT" variable
                             (:constant-flag t
                              :default-value (69575 69578)
                              :type "int")
                              (reparse-symbol enumsubparts) [69544 69578])
                          ("MATOP_TRANS_COLORING_APPLY_DEN" variable
                             (:constant-flag t
                              :default-value (69626 69629)
                              :type "int")
                              (reparse-symbol enumsubparts) [69595 69629])
                          ("MATOP_RART" variable
                             (:constant-flag t
                              :default-value (69657 69660)
                              :type "int")
                              (reparse-symbol enumsubparts) [69646 69660])
                          ("MATOP_RART_SYMBOLIC" variable
                             (:constant-flag t
                              :default-value (69697 69700)
                              :type "int")
                              (reparse-symbol enumsubparts) [69677 69700])
                          ("MATOP_RART_NUMERIC" variable
                             (:constant-flag t
                              :default-value (69736 69739)
                              :type "int")
                              (reparse-symbol enumsubparts) [69717 69739])
                          ("MATOP_SET_BLOCK_SIZES" variable
                             (:constant-flag t
                              :default-value (69778 69781)
                              :type "int")
                              (reparse-symbol enumsubparts) [69756 69781])
                          ("MATOP_AYPX" variable
                             (:constant-flag t
                              :default-value (69809 69812)
                              :type "int")
                              (reparse-symbol enumsubparts) [69798 69812])
                          ("MATOP_RESIDUAL" variable
                             (:constant-flag t
                              :default-value (69844 69847)
                              :type "int")
                              (reparse-symbol enumsubparts) [69829 69847])
                          ("MATOP_FDCOLORING_SETUP" variable
                             (:constant-flag t
                              :default-value (69887 69890)
                              :type "int")
                              (reparse-symbol enumsubparts) [69864 69890])
                          ("MATOP_MPICONCATENATESEQ" variable
                             (:constant-flag t
                              :default-value (69931 69934)
                              :type "int")
                              (reparse-symbol enumsubparts) [69907 69934]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [64066 69963])
            ("MatHasOperation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70008 70012])
                    ("" variable (:type ("MatOperation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70012 70025])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [70025 70037]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [69977 70038])
            ("MatShellSetOperation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70088 70092])
                    ("" variable (:type ("MatOperation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70092 70105])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [70113 70118]))                          
                        :type "void")
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [70052 70120])
            ("MatShellGetOperation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70170 70174])
                    ("" variable (:type ("MatOperation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70174 70187])
                    (nil variable (:pointer (("" variable (:type "void") (reparse-symbol arg-sub-list) [70196 70201])) :type "void") (reparse-symbol arg-sub-list) [70187 70202]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [70134 70203])
            ("MatShellSetContext" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70251 70255])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [70255 70261]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [70217 70262])
            ("MATRIX_BINARY_FORMAT_DENSE" variable (:constant-flag t) nil [70648 70674])
            ("MatMPIBAIJSetHashTableFactor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70736 70740])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70740 70750]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [70692 70751])
            ("MatISGetLocalMat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70797 70801])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [70801 70806]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [70765 70807])
            ("MatISSetLocalMat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70853 70857])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70857 70861]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [70821 70862])
            ("MatISGetMPIXAIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70907 70911])
                    ("" variable (:type ("MatReuse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70911 70920])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [70920 70925]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [70876 70926])
            ("MatNullSpace" type
               (:typedef ("_p_MatNullSpace" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [71203 71248])
            ("MatNullSpaceCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71297 71306])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71306 71317])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71317 71326])
                    ("" variable
                       (:constant-flag t
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [71326 71337])
                    ("" variable
                       (:pointer 1
                        :type ("MatNullSpace" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [71338 71352]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71263 71353])
            ("MatNullSpaceSetFunction" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatNullSpace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71406 71419])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("MatNullSpace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71438 71451])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71451 71455])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [71455 71461]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [71462 71468]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71367 71469])
            ("MatNullSpaceDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("MatNullSpace" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [71518 71532]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71483 71533])
            ("MatNullSpaceRemove" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatNullSpace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71581 71594])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71594 71598]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71547 71599])
            ("MatGetNullSpace" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71644 71648])
                    ("" variable
                       (:pointer 1
                        :type ("MatNullSpace" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [71649 71664]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71613 71665])
            ("MatGetTransposeNullSpace" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71719 71723])
                    ("" variable
                       (:pointer 1
                        :type ("MatNullSpace" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [71724 71739]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71679 71740])
            ("MatSetTransposeNullSpace" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71794 71798])
                    ("" variable (:type ("MatNullSpace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71798 71811]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71754 71812])
            ("MatSetNullSpace" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71857 71861])
                    ("" variable (:type ("MatNullSpace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71861 71874]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71826 71875])
            ("MatSetNearNullSpace" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71924 71928])
                    ("" variable (:type ("MatNullSpace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71928 71941]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71889 71942])
            ("MatGetNearNullSpace" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71991 71995])
                    ("" variable
                       (:pointer 1
                        :type ("MatNullSpace" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [71995 72009]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71956 72010])
            ("MatNullSpaceTest" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatNullSpace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72056 72069])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72069 72073])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72073 72086]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72024 72087])
            ("MatNullSpaceView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatNullSpace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72133 72146])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72146 72158]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72101 72159])
            ("MatNullSpaceGetVecs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatNullSpace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72208 72221])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72221 72232])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72232 72242])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72242 72254]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72173 72255])
            ("MatNullSpaceCreateRigidBody" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72312 72316])
                    ("" variable
                       (:pointer 1
                        :type ("MatNullSpace" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72316 72330]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72269 72331])
            ("MatReorderingSeqSBAIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72383 72387])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72387 72390]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72346 72391])
            ("MatMPISBAIJSetHashTableFactor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72450 72454])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72454 72464]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72405 72465])
            ("MatSeqSBAIJSetColumnIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72522 72526])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72526 72537]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72479 72538])
            ("MatSeqBAIJInvertBlockDiagonal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72597 72601]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72552 72602])
            ("MatCreateMAIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72646 72650])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72650 72659])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72659 72664]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72617 72665])
            ("MatMAIJRedimension" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72713 72717])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72717 72726])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72726 72731]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72679 72732])
            ("MatMAIJGetAIJ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72775 72779])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72779 72784]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72746 72785])
            ("MatComputeExplicitOperator" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72842 72846])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72846 72851]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72800 72852])
            ("MatDiagonalScaleLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72904 72908])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72908 72912]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72867 72913])
            ("MatCreateMFFD" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72957 72966])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72966 72975])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72975 72984])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72984 72993])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72993 73002])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [73002 73007]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72928 73008])
            ("MatMFFDSetBase" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73052 73056])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73056 73060])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73060 73064]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73022 73065])
            ("MatMFFDSetFunction" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73113 73117])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [73135 73141])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73141 73145])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73145 73149]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [73150 73156]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73079 73157])
            ("MatMFFDSetFunctioni" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73206 73210])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [73229 73235])
                            ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73235 73244])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73244 73248])
                            ("" variable
                               (:pointer 1
                                :type ("PetscScalar" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [73248 73261]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73171 73263])
            ("MatMFFDSetFunctioniBase" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73316 73320])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [73339 73345])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73345 73349]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73277 73351])
            ("MatMFFDSetHHistory" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73399 73403])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73403 73416])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73417 73426]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73365 73427])
            ("MatMFFDResetHHistory" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73477 73481]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73441 73482])
            ("MatMFFDSetFunctionError" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73535 73539])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73539 73549]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73496 73550])
            ("MatMFFDSetPeriod" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73596 73600])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73600 73609]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73564 73610])
            ("MatMFFDGetH" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73651 73655])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [73655 73669]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73624 73670])
            ("MatMFFDSetOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73723 73727])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [73727 73739]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73684 73741])
            ("MatMFFDCheckPositivity" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [73793 73799])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73799 73803])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73803 73807])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [73807 73820]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73755 73821])
            ("MatMFFDSetCheckh" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73867 73871])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [73890 73896])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73896 73900])
                            ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73900 73904])
                            ("" variable
                               (:pointer 1
                                :type ("PetscScalar" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [73904 73917]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [73918 73924]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73835 73925])
            ("MatMFFD" type
               (:typedef ("_p_MatMFFD" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [74388 74423])
            ("MatMFFDType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [74624 74656])
            ("MATMFFD_DS" variable (:constant-flag t) nil [74665 74675])
            ("MATMFFD_WP" variable (:constant-flag t) nil [74690 74700])
            ("MatMFFDSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74751 74755])
                    ("" variable (:type ("MatMFFDType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74755 74767]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [74721 74768])
            ("MatMFFDRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [74813 74825])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("MatMFFD" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74845 74853]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [74782 74855])
            ("MatMFFDDSSetUmin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74902 74906])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74906 74916]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [74870 74917])
            ("MatMFFDWPSetComputeNormU" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74971 74975])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74975 74986]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [74931 74987])
            ("MatFDColoringSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MatFDColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75038 75052])
                    ("" variable (:type ("MatMFFDType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75052 75064]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [75002 75065])
            ("PetscViewerMathematicaPutMatrix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75127 75139])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75140 75149])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75150 75159])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [75160 75172]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [75080 75173])
            ("PetscViewerMathematicaPutCSRMatrix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75237 75249])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75250 75259])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75260 75269])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [75270 75281])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [75282 75293])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [75294 75306]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [75187 75307])
            ("MatCreateNest" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81045 81054])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81054 81063])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81063 81073])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81074 81083])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81083 81093])
                    ("" variable
                       (:constant-flag t
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81094 81105])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81106 81111]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [81016 81112])
            ("MatNestGetSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81156 81160])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81160 81170])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81170 81180]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [81126 81181])
            ("MatNestGetISs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81224 81228])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81228 81232])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81233 81237]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [81195 81239])
            ("MatNestGetLocalISs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81287 81291])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81291 81295])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81296 81300]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [81253 81302])
            ("MatNestGetSubMats" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81349 81353])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81353 81363])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81363 81373])
                    ("" variable
                       (:pointer 3
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81373 81380]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [81316 81381])
            ("MatNestGetSubMat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81427 81431])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81431 81440])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81440 81449])
                    ("" variable
                       (:pointer 1
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81449 81454]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [81395 81455])
            ("MatNestSetVecType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81502 81506])
                    ("" variable (:type ("VecType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81506 81514]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [81469 81515])
            ("MatNestSetSubMats" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81562 81566])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81566 81575])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81575 81585])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81586 81595])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81595 81605])
                    ("" variable
                       (:constant-flag t
                        :type ("Mat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81606 81617]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [81529 81619])
            ("MatNestSetSubMat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81665 81669])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81669 81678])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81678 81687])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81687 81691]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [81633 81692])
            ("MatChop" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81730 81734])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81734 81744]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [81707 81745])
            ("MatComputeBandwidth" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81794 81798])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81798 81808])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81808 81818]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [81759 81819])
            ("MatSubdomainsCreateCoalesce" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81877 81881])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81881 81890])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81890 81900])
                    ("" variable
                       (:pointer 2
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [81900 81905]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [81834 81906])
            ("MatPreallocatorPreallocate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81963 81967])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81967 81977])
                    ("" variable (:type ("Mat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81977 81981]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [81921 81982]))          
      :file "petscmat.h"
      :pointmax 81991
      :fsize 81990
      :lastmodtime '(22420 61452 0 0)
      :unmatched-syntax '((symbol 81908 . 81920) (symbol 81821 . 81833) (symbol 81746 . 81758) (symbol 81694 . 81706) (symbol 81620 . 81632) (semantic-list 81615 . 81617) (semantic-list 81603 . 81605) (semantic-list 81583 . 81585) (symbol 81516 . 81528) (symbol 81456 . 81468) (symbol 81382 . 81394) (symbol 81303 . 81315) (semantic-list 81298 . 81300) (semantic-list 81293 . 81295) (symbol 81240 . 81252) (semantic-list 81235 . 81237) (semantic-list 81230 . 81232) (symbol 81182 . 81194) (symbol 81113 . 81125) (semantic-list 81103 . 81105) (semantic-list 81091 . 81093) (semantic-list 81071 . 81073) (symbol 81003 . 81015) (symbol 75174 . 75186) (symbol 75067 . 75079) (symbol 74989 . 75001) (symbol 74918 . 74930) (symbol 74857 . 74869) (semantic-list 74823 . 74825) (symbol 74769 . 74781) (symbol 74708 . 74720) (symbol 73822 . 73834) (symbol 73742 . 73754) (semantic-list 73737 . 73739) (symbol 73671 . 73683) (symbol 73611 . 73623) (symbol 73551 . 73563) (symbol 73483 . 73495) (symbol 73428 . 73440) (semantic-list 73414 . 73416) (symbol 73352 . 73364) (symbol 73264 . 73276) (symbol 73158 . 73170) (symbol 73066 . 73078) (symbol 73009 . 73021) (symbol 72915 . 72927) (symbol 72854 . 72866) (symbol 72787 . 72799) (symbol 72733 . 72745) (symbol 72666 . 72678) (symbol 72604 . 72616) (symbol 72539 . 72551) (symbol 72466 . 72478) (symbol 72392 . 72404) (symbol 72333 . 72345) (symbol 72256 . 72268) (symbol 72160 . 72172) (symbol 72088 . 72100) (symbol 72011 . 72023) (symbol 71943 . 71955) (symbol 71876 . 71888) (symbol 71813 . 71825) (symbol 71741 . 71753) (symbol 71666 . 71678) (symbol 71600 . 71612) (symbol 71534 . 71546) (symbol 71470 . 71482) (symbol 71354 . 71366) (semantic-list 71335 . 71337) (symbol 71250 . 71262) (symbol 70863 . 70875) (symbol 70808 . 70820) (symbol 70752 . 70764) (symbol 70679 . 70691) (symbol 70204 . 70216) (symbol 70121 . 70133) (symbol 70039 . 70051) (symbol 69964 . 69976) (symbol 63912 . 63924) (symbol 63843 . 63855) (symbol 63671 . 63690) (symbol 63596 . 63608) (symbol 63530 . 63542) (symbol 63462 . 63474) (semantic-list 63423 . 63425) (symbol 63366 . 63378) (symbol 63305 . 63317) (symbol 63248 . 63260) (symbol 63166 . 63178) (symbol 63091 . 63103) (symbol 63013 . 63025) (symbol 62945 . 62957) (symbol 62871 . 62883) (symbol 62803 . 62815) (symbol 61594 . 61606) (symbol 61496 . 61508) (symbol 61404 . 61416) (symbol 61314 . 61326) (symbol 61172 . 61184) (symbol 61068 . 61080) (symbol 60975 . 60987) (symbol 60883 . 60895) (symbol 60824 . 60836) (symbol 60584 . 60596) (symbol 60498 . 60510) (symbol 60407 . 60419) (symbol 60320 . 60332) (symbol 60134 . 60146) (symbol 59826 . 59838) (symbol 59736 . 59748) (symbol 59647 . 59659) (symbol 59559 . 59571) (symbol 59460 . 59472) (symbol 59362 . 59374) (symbol 59271 . 59283) (symbol 59178 . 59190) (symbol 59086 . 59098) (symbol 58991 . 59003) (symbol 58897 . 58909) (symbol 58844 . 58856) (symbol 58723 . 58735) (symbol 58598 . 58610) (symbol 58370 . 58382) (symbol 58281 . 58293) (symbol 58192 . 58204) (symbol 58101 . 58113) (symbol 58025 . 58037) (symbol 57947 . 57959) (semantic-list 57903 . 57905) (symbol 57841 . 57853) (symbol 57770 . 57782) (symbol 57699 . 57711) (semantic-list 57694 . 57696) (symbol 57599 . 57611) (semantic-list 57594 . 57596) (symbol 57504 . 57516) (symbol 57426 . 57438) (symbol 57346 . 57358) (symbol 57257 . 57269) (symbol 57179 . 57191) (symbol 56194 . 56206) (symbol 56106 . 56118) (symbol 56018 . 56030) (symbol 55923 . 55935) (symbol 55562 . 55574) (symbol 55484 . 55496) (semantic-list 55479 . 55481) (symbol 55385 . 55397) (symbol 55319 . 55331) (symbol 55241 . 55253) (symbol 55169 . 55181) (symbol 55078 . 55090) (symbol 54976 . 54988) (symbol 54876 . 54888) (symbol 54802 . 54814) (symbol 54736 . 54748) (symbol 54655 . 54667) (symbol 54283 . 54295) (symbol 54198 . 54210) (symbol 54109 . 54121) (semantic-list 54092 . 54094) (symbol 54010 . 54022) (semantic-list 53974 . 53976) (symbol 53916 . 53928) (symbol 53845 . 53857) (symbol 53769 . 53781) (symbol 53694 . 53706) (symbol 53619 . 53631) (symbol 53545 . 53557) (symbol 53477 . 53489) (symbol 53400 . 53412) (symbol 53330 . 53342) (symbol 53268 . 53280) (symbol 53193 . 53205) (symbol 53128 . 53140) (symbol 51736 . 51748) (symbol 51097 . 51109) (symbol 51016 . 51028) (symbol 50944 . 50956) (symbol 50874 . 50886) (symbol 50809 . 50821) (symbol 50738 . 50750) (symbol 50671 . 50683) (symbol 50614 . 50626) (symbol 50560 . 50572) (symbol 50493 . 50505) (symbol 50433 . 50445) (symbol 50375 . 50387) (symbol 50316 . 50328) (symbol 50258 . 50270) (symbol 50207 . 50219) (symbol 50129 . 50141) (symbol 50051 . 50063) (symbol 49980 . 49992) (symbol 49897 . 49909) (symbol 49811 . 49823) (symbol 49726 . 49738) (symbol 49652 . 49664) (symbol 49579 . 49591) (symbol 49495 . 49507) (symbol 49407 . 49419) (symbol 49331 . 49343) (symbol 49262 . 49274) (symbol 47312 . 47324) (symbol 47258 . 47270) (symbol 46995 . 47007) (symbol 46916 . 46928) (symbol 46867 . 46879) (semantic-list 46815 . 46817) (symbol 46757 . 46769) (symbol 46689 . 46701) (symbol 46616 . 46628) (symbol 45866 . 45878) (symbol 45811 . 45823) (symbol 45758 . 45770) (symbol 45709 . 45721) (symbol 45646 . 45658) (symbol 45585 . 45597) (semantic-list 45580 . 45582) (semantic-list 45554 . 45556) (symbol 45477 . 45489) (symbol 45403 . 45415) (semantic-list 45398 . 45400) (symbol 45320 . 45332) (semantic-list 45315 . 45317) (symbol 45239 . 45251) (semantic-list 45234 . 45236) (symbol 45163 . 45175) (semantic-list 45158 . 45160) (symbol 45087 . 45099) (semantic-list 45082 . 45084) (semantic-list 45071 . 45073) (semantic-list 45060 . 45062) (symbol 44994 . 45006) (semantic-list 44989 . 44991) (semantic-list 44969 . 44971) (semantic-list 44952 . 44954) (symbol 44867 . 44879) (semantic-list 44862 . 44864) (semantic-list 44842 . 44844) (semantic-list 44825 . 44827) (symbol 44750 . 44762) (semantic-list 44745 . 44747) (semantic-list 44725 . 44727) (semantic-list 44708 . 44710) (symbol 44623 . 44635) (semantic-list 44618 . 44620) (semantic-list 44597 . 44599) (semantic-list 44579 . 44581) (symbol 44503 . 44515) (semantic-list 44498 . 44500) (semantic-list 44472 . 44474) (symbol 44391 . 44403) (semantic-list 44386 . 44388) (semantic-list 44360 . 44362) (symbol 44268 . 44280) (semantic-list 44263 . 44265) (semantic-list 44237 . 44239) (symbol 44146 . 44158) (semantic-list 44140 . 44142) (symbol 44059 . 44071) (semantic-list 44054 . 44056) (symbol 43962 . 43974) (semantic-list 43957 . 43959) (symbol 43866 . 43878) (semantic-list 43804 . 43806) (semantic-list 43790 . 43792) (semantic-list 43779 . 43781) (symbol 43690 . 43702) (semantic-list 43680 . 43682) (semantic-list 43666 . 43668) (semantic-list 43655 . 43657) (symbol 43555 . 43567) (semantic-list 43545 . 43547) (semantic-list 43531 . 43533) (semantic-list 43520 . 43522) (symbol 43421 . 43433) (semantic-list 43411 . 43413) (semantic-list 43397 . 43399) (semantic-list 43386 . 43388) (symbol 43297 . 43309) (semantic-list 43292 . 43294) (symbol 43225 . 43237) (semantic-list 43220 . 43222) (symbol 43154 . 43166) (semantic-list 43137 . 43139) (symbol 43062 . 43074) (symbol 42996 . 43008) (symbol 42935 . 42947) (symbol 30420 . 30439) (symbol 30288 . 30307) (symbol 30135 . 30154) (symbol 29432 . 29444) (symbol 29363 . 29375) (symbol 29304 . 29316) (symbol 29226 . 29238) (symbol 29135 . 29147) (symbol 29033 . 29052) (semantic-list 29009 . 29032) (symbol 28993 . 29009) (string 29010 . 29031) (symbol 28935 . 28947) (symbol 28881 . 28893) (symbol 28817 . 28829) (symbol 28760 . 28772) (symbol 28669 . 28681) (symbol 28594 . 28606) (semantic-list 28577 . 28579) (semantic-list 28557 . 28559) (semantic-list 28531 . 28533) (symbol 28451 . 28463) (semantic-list 28435 . 28437) (semantic-list 28415 . 28417) (semantic-list 28389 . 28391) (symbol 28316 . 28328) (symbol 28233 . 28245) (semantic-list 28208 . 28210) (symbol 28128 . 28140) (symbol 28052 . 28064) (semantic-list 28027 . 28029) (symbol 27954 . 27966) (symbol 27880 . 27892) (symbol 27771 . 27783) (symbol 27664 . 27676) (symbol 27608 . 27620) (symbol 27553 . 27565) (symbol 27481 . 27493) (symbol 27410 . 27422) (symbol 27340 . 27352) (symbol 27259 . 27271) (symbol 27177 . 27189) (symbol 27107 . 27119) (symbol 27025 . 27037) (symbol 26943 . 26955) (symbol 26885 . 26897) (symbol 26816 . 26828) (symbol 26746 . 26758) (symbol 26689 . 26701) (symbol 26620 . 26632) (symbol 26550 . 26562) (symbol 26469 . 26481) (symbol 26408 . 26420) (symbol 26336 . 26348) (symbol 26263 . 26275) (symbol 26179 . 26191) (symbol 26086 . 26098) (semantic-list 26072 . 26074) (symbol 26010 . 26022) (semantic-list 26004 . 26006) (symbol 25931 . 25943) (symbol 25852 . 25864) (symbol 25766 . 25778) (symbol 25697 . 25709) (symbol 25627 . 25639) (symbol 25528 . 25540) (symbol 25428 . 25440) (symbol 25362 . 25374) (symbol 25297 . 25309) (symbol 25227 . 25239) (symbol 25161 . 25173) (symbol 25090 . 25102) (semantic-list 25085 . 25087) (symbol 25024 . 25036) (semantic-list 25019 . 25021) (semantic-list 25002 . 25004) (semantic-list 24991 . 24993) (symbol 24921 . 24933) (semantic-list 24916 . 24918) (semantic-list 24899 . 24901) (semantic-list 24888 . 24890) (symbol 24821 . 24833) (symbol 24760 . 24772) (symbol 24681 . 24693) (symbol 24600 . 24612) (symbol 24527 . 24539) (symbol 24452 . 24464) (symbol 24382 . 24394) (symbol 24317 . 24329) (symbol 24238 . 24250) (semantic-list 24213 . 24215) (symbol 24138 . 24150) (semantic-list 24113 . 24115) (symbol 24030 . 24042) (semantic-list 24005 . 24007) (symbol 23928 . 23940) (symbol 23857 . 23869) (semantic-list 23832 . 23834) (symbol 23764 . 23776) (symbol 23715 . 23727) (symbol 23643 . 23655) (symbol 23581 . 23593) (symbol 23493 . 23505) (symbol 23415 . 23427) (symbol 23332 . 23344) (symbol 23252 . 23264) (symbol 23178 . 23190) (symbol 23107 . 23119) (symbol 23049 . 23061) (symbol 22984 . 22996) (symbol 22925 . 22937) (symbol 22869 . 22881) (symbol 22799 . 22811) (symbol 22738 . 22750) (symbol 22687 . 22699) (semantic-list 22682 . 22684) (symbol 22622 . 22634) (semantic-list 22617 . 22619) (symbol 22557 . 22569) (semantic-list 22552 . 22554) (symbol 22495 . 22507) (semantic-list 22490 . 22492) (symbol 22433 . 22445) (symbol 22380 . 22392) (symbol 22314 . 22326) (semantic-list 21026 . 21028) (semantic-list 21007 . 21009) (symbol 20898 . 20910) (semantic-list 20880 . 20882) (semantic-list 20861 . 20863) (symbol 20757 . 20769) (semantic-list 20739 . 20741) (semantic-list 20720 . 20722) (symbol 20614 . 20626) (semantic-list 20596 . 20598) (semantic-list 20577 . 20579) (symbol 20476 . 20488) (symbol 20420 . 20432) (symbol 20343 . 20355) (symbol 20265 . 20277) (symbol 20187 . 20199) (symbol 20116 . 20128) (symbol 20043 . 20055) (symbol 19972 . 19984) (symbol 19918 . 19930) (symbol 19859 . 19871) (symbol 19786 . 19798) (symbol 19719 . 19731) (symbol 18972 . 18984) (symbol 18918 . 18930) (symbol 18848 . 18860) (symbol 18787 . 18799) (symbol 18712 . 18724) (symbol 18646 . 18658) (symbol 18562 . 18574) (symbol 18487 . 18499) (symbol 18419 . 18431) (symbol 18360 . 18372) (symbol 18303 . 18315) (symbol 18240 . 18252) (symbol 18190 . 18202) (symbol 18122 . 18134) (symbol 18053 . 18065) (symbol 17980 . 17992) (symbol 17921 . 17933) (symbol 17860 . 17872) (semantic-list 17855 . 17857) (symbol 17789 . 17801) (semantic-list 17784 . 17786) (symbol 17722 . 17734) (semantic-list 17706 . 17708) (semantic-list 17686 . 17688) (semantic-list 17660 . 17662) (symbol 17577 . 17589) (symbol 17506 . 17518) (semantic-list 17501 . 17503) (symbol 17434 . 17446) (semantic-list 17429 . 17431) (symbol 17366 . 17378) (symbol 17300 . 17312) (semantic-list 17295 . 17297) (semantic-list 17274 . 17276) (symbol 17189 . 17201) (semantic-list 17184 . 17186) (semantic-list 17163 . 17165) (symbol 17082 . 17094) (symbol 17019 . 17031) (symbol 16960 . 16972) (semantic-list 16955 . 16957) (semantic-list 16934 . 16936) (symbol 16852 . 16864) (semantic-list 16847 . 16849) (semantic-list 16826 . 16828) (symbol 16748 . 16760) (semantic-list 16743 . 16745) (semantic-list 16729 . 16731) (semantic-list 16703 . 16705) (symbol 16635 . 16647) (symbol 16580 . 16592) (symbol 16512 . 16524) (symbol 16445 . 16457) (symbol 16406 . 16418) (symbol 15004 . 15016) (symbol 14939 . 14951) (symbol 14872 . 14884) (symbol 14535 . 14547) (symbol 14475 . 14487) (semantic-list 14460 . 14462) (semantic-list 14443 . 14445) (symbol 14374 . 14386) (semantic-list 14358 . 14360) (semantic-list 14338 . 14340) (semantic-list 14310 . 14312) (symbol 14226 . 14238) (semantic-list 14210 . 14212) (semantic-list 14190 . 14192) (semantic-list 14162 . 14164) (symbol 14085 . 14097) (symbol 13605 . 13617) (semantic-list 13600 . 13602) (semantic-list 13580 . 13582) (symbol 13504 . 13516) (semantic-list 13499 . 13501) (symbol 13420 . 13432) (semantic-list 13415 . 13417) (symbol 13341 . 13353) (semantic-list 13325 . 13327) (semantic-list 13305 . 13307) (semantic-list 13279 . 13281) (symbol 13204 . 13216) (semantic-list 13188 . 13190) (semantic-list 13168 . 13170) (semantic-list 13142 . 13144) (symbol 13074 . 13086) (symbol 12929 . 12941) (symbol 12870 . 12882) (symbol 12811 . 12823) (symbol 12760 . 12772) (symbol 12714 . 12726) (symbol 12667 . 12679) (symbol 12595 . 12607) (symbol 12549 . 12561) (symbol 12506 . 12518) (semantic-list 12500 . 12502) (symbol 12441 . 12453) (symbol 12377 . 12389) (symbol 12314 . 12326) (symbol 12250 . 12262) (symbol 12183 . 12195) (symbol 12125 . 12137) (semantic-list 12114 . 12116) (symbol 12036 . 12048) (semantic-list 12018 . 12020) (symbol 11945 . 11957) (symbol 11873 . 11885) (symbol 11705 . 11717) (symbol 11653 . 11665) (symbol 11596 . 11608) (symbol 11488 . 11500) (symbol 11418 . 11430) (symbol 11349 . 11361) (symbol 11277 . 11289) (semantic-list 11266 . 11268) (semantic-list 11240 . 11242) (symbol 11116 . 11128) (semantic-list 11106 . 11108) (symbol 11000 . 11012) (semantic-list 10990 . 10992) (semantic-list 10964 . 10966) (symbol 10841 . 10853) (semantic-list 10831 . 10833) (symbol 10726 . 10738) (semantic-list 10715 . 10717) (semantic-list 10689 . 10691) (symbol 10592 . 10604) (semantic-list 10582 . 10584) (symbol 10485 . 10497) (symbol 10338 . 10350) (symbol 10278 . 10290) (symbol 10214 . 10226) (symbol 10159 . 10171) (symbol 10057 . 10069) (semantic-list 10051 . 10053) (semantic-list 10034 . 10036) (semantic-list 10017 . 10019) (semantic-list 10000 . 10002) (symbol 9921 . 9933) (semantic-list 9916 . 9918) (semantic-list 9896 . 9898) (semantic-list 9879 . 9881) (symbol 9793 . 9805) (semantic-list 9788 . 9790) (semantic-list 9768 . 9770) (semantic-list 9751 . 9753) (symbol 9665 . 9677) (semantic-list 9654 . 9656) (semantic-list 9634 . 9636) (semantic-list 9617 . 9619) (symbol 9493 . 9505) (semantic-list 9483 . 9485) (semantic-list 9457 . 9459) (symbol 9337 . 9349) (semantic-list 9326 . 9328) (symbol 9221 . 9233) (semantic-list 9211 . 9213) (semantic-list 9200 . 9202) (semantic-list 9189 . 9191) (symbol 9110 . 9122) (semantic-list 9099 . 9101) (semantic-list 9079 . 9081) (semantic-list 9062 . 9064) (symbol 8939 . 8951) (semantic-list 8929 . 8931) (semantic-list 8903 . 8905) (symbol 8784 . 8796) (semantic-list 8774 . 8776) (symbol 8670 . 8682) (semantic-list 8659 . 8661) (semantic-list 8645 . 8647) (semantic-list 8634 . 8636) (semantic-list 8623 . 8625) (semantic-list 8609 . 8611) (semantic-list 8598 . 8600) (symbol 8486 . 8498) (semantic-list 8475 . 8477) (semantic-list 8455 . 8457) (semantic-list 8438 . 8440) (symbol 8325 . 8337) (semantic-list 8315 . 8317) (semantic-list 8289 . 8291) (symbol 8180 . 8192) (semantic-list 8170 . 8172) (symbol 8076 . 8088) (semantic-list 8066 . 8068) (symbol 7967 . 7979) (semantic-list 7957 . 7959) (symbol 7873 . 7885) (symbol 7501 . 7513) (symbol 7449 . 7461) (symbol 7401 . 7413) (symbol 7361 . 7373) (symbol 7295 . 7307) (semantic-list 7290 . 7292) (symbol 7227 . 7239) (semantic-list 7222 . 7224) (symbol 7157 . 7169) (semantic-list 7152 . 7154) (symbol 7090 . 7102) (semantic-list 7085 . 7087) (semantic-list 7072 . 7074) (semantic-list 7059 . 7061) (symbol 7001 . 7013) (semantic-list 6973 . 6975) (symbol 6923 . 6935) (symbol 6766 . 6785) (symbol 6714 . 6726) (symbol 6661 . 6673) (symbol 6579 . 6591) (symbol 6525 . 6537) (symbol 6468 . 6480) (symbol 5522 . 5534) (symbol 5473 . 5485) (symbol 5426 . 5438) (symbol 5374 . 5386) (symbol 5317 . 5329) (symbol 5267 . 5279) (symbol 5219 . 5231) (symbol 5180 . 5192) (symbol 4903 . 4915) (symbol 4755 . 4767) (symbol 4689 . 4701) (symbol 4605 . 4617) (symbol 4500 . 4512) (symbol 4411 . 4423) (symbol 4361 . 4373))
      :lexical-table 
        '(("MATSEQAIJCUSPARSE" . ((string "\"seqaijcusparse\"" 1226 . 1242)))
          ("MATMPIBSTRM" . ((string "\"mpibstrm\"" 2038 . 2048)))
          ("MATSOLVERESSL" . ((string "\"essl\"" 3558 . 3564)))
          ("MatPreallocateSet" (spp-arg-list ("row" "nc" "cols" "dnz" "onz") 38509 . 38530) . 
              ((number "0" 38531 . 38532) (punctuation ";" 38532 . 38533) (semantic-list "{ PetscInt __i; \\
  if (row < __rstart) SETERRQ2(PETSC_COMM_SELF,PETSC_ERR_ARG_OUTOFRANGE,\"Trying to set preallocation for row %D less than first local row %D\",row,__rstart);\\
  if (row >= __rstart+__nrows) SETERRQ2(PETSC_COMM_SELF,PETSC_ERR_ARG_OUTOFRANGE,\"Trying to set preallocation for row %D greater than last local row %D\",row,__rstart+__nrows-1);\\
  for (__i=0; __i<nc; __i++) {\\
    if ((cols)[__i] < __start || (cols)[__i] >= __end) onz[row - __rstart]++; \\
    else dnz[row - __rstart]++;\\
  }\\
}" 38535 . 39041)))
          ("MatPreallocateSymmetricSetBlock" (spp-arg-list ("row" "nc" "cols" "dnz" "onz") 40287 . 40308) . 
              ((number "0" 40309 . 40310) (punctuation ";" 40310 . 40311) (semantic-list "{ PetscInt __i; \\
  for (__i=0; __i<nc; __i++) {\\
    if (cols[__i] >= __end) onz[row - __rstart]++; \\
    else if (cols[__i] >= row) dnz[row - __rstart]++;\\
  }\\
}" 40313 . 40477)))
          ("MATORDERING1WD" . ((string "\"1wd\"" 46313 . 46318)))
          ("MATPARTITIONINGPTSCOTCH" . ((string "\"ptscotch\"" 57122 . 57132)))
          ("MATSEQAIJCRL" . ((string "\"seqaijcrl\"" 990 . 1001)))
          ("MATSEQAIJCUSP" . ((string "\"seqaijcusp\"" 1105 . 1117)))
          ("MATMPIBAIJ" . ((string "\"mpibaij\"" 1816 . 1825)))
          ("MATSEQBSTRM" . ((string "\"seqbstrm\"" 2000 . 2010)))
          ("MATMFFD" . ((string "\"mffd\"" 2259 . 2265)))
          ("MATTRANSPOSEMAT" . ((string "\"transpose\"" 2618 . 2629)))
          ("MATSUBMATRIX" . ((string "\"submatrix\"" 2821 . 2832)))
          ("MATSOLVERKLU" . ((string "\"klu\"" 3480 . 3485)))
          ("MATCOLORINGNATURAL" . ((string "\"natural\"" 52437 . 52446)))
          ("MATPARTITIONINGSQUARE" . ((string "\"square\"" 56958 . 56966)))
          ("MATMFFD_WP" . ((string "\"wp\"" 74702 . 74706)))
          ("__PETSCMAT_H")
          ("MATIS" . ((string "\"is\"" 817 . 821)))
          ("MATMPISBAIJ" . ((string "\"mpisbaij\"" 1962 . 1972)))
          ("MATSCHURCOMPLEMENT" . ((string "\"schurcomplement\"" 2657 . 2674)))
          ("MATSOLVERMUMPS" . ((string "\"mumps\"" 3633 . 3640)))
          ("MATSOLVERBAS" . ((string "\"bas\"" 3876 . 3881)))
          ("MATSOLVERSBSTRM" . ((string "\"sbstrm\"" 3991 . 3999)))
          ("MatPreallocateSetLocal" (spp-arg-list ("rmap" "nrows" "rows" "cmap" "ncols" "cols" "dnz" "onz") 33758 . 33799) . 
              ((number "0" 33800 . 33801) (punctuation ";" 33801 . 33802) (semantic-list "{\\
  PetscInt __l;\\
  _4_ierr = ISLocalToGlobalMappingApply(rmap,nrows,rows,rows);CHKERRQ(_4_ierr);\\
  _4_ierr = ISLocalToGlobalMappingApply(cmap,ncols,cols,cols);CHKERRQ(_4_ierr);\\
  for (__l=0;__l<nrows;__l++) {\\
    _4_ierr = MatPreallocateSet((rows)[__l],ncols,cols,dnz,onz);CHKERRQ(_4_ierr);\\
  }\\
}" 33805 . 34109)))
          ("MATORDERINGND" . ((string "\"nd\"" 46277 . 46281)))
          ("MATORDERINGWBM" . ((string "\"wbm\"" 46467 . 46472)))
          ("MATPARTITIONINGPARTY" . ((string "\"party\"" 57082 . 57089)))
          ("MP_PARTY_BUB" . ((string "\"bub\"" 60101 . 60106)))
          ("MP_PARTY_DEF" . ((string "\"def\"" 60128 . 60133)))
          ("MATAIJCUSP" . ((string "\"aijcusp\"" 1068 . 1077)))
          ("MATSEQSBAIJ" . ((string "\"seqsbaij\"" 1924 . 1934)))
          ("MATMPISBSTRM" . ((string "\"mpisbstrm\"" 2150 . 2161)))
          ("MATFFTW" . ((string "\"fftw\"" 2546 . 2552)))
          ("MATPYTHON" . ((string "\"python\"" 2702 . 2710)))
          ("MATORDERINGSPECTRAL" . ((string "\"spectral\"" 46504 . 46514)))
          ("MATPARTITIONINGCHACO" . ((string "\"chaco\"" 57042 . 57049)))
          ("MP_PARTY_LIN" . ((string "\"lin\"" 59966 . 59971)))
          ("MATAIJ" . ((string "\"aij\"" 849 . 854)))
          ("MATAIJVIENNACL" . ((string "\"aijviennacl\"" 1314 . 1327)))
          ("MATMPIAIJVIENNACL" . ((string "\"mpiaijviennacl\"" 1399 . 1415)))
          ("MATHYPRESSTRUCT" . ((string "\"hypresstruct\"" 2779 . 2793)))
          ("MATSOLVERSUPERLU" . ((string "\"superlu\"" 3276 . 3285)))
          ("MATSOLVERCHOLMOD" . ((string "\"cholmod\"" 3401 . 3410)))
          ("MATSOLVERLUSOL" . ((string "\"lusol\"" 3595 . 3602)))
          ("MATSOLVERBSTRM" . ((string "\"bstrm\"" 3953 . 3960)))
          ("MatPreallocateInitialize" (spp-arg-list ("comm" "nrows" "ncols" "dnz" "onz") 31980 . 32006) . 
              ((number "0" 32007 . 32008) (punctuation ";" 32008 . 32009) (open-paren "{" 32012 . 32013) (symbol "PetscErrorCode" 32018 . 32032) (symbol "_4_ierr" 32033 . 32040) (punctuation ";" 32040 . 32041) (symbol "PetscInt" 32042 . 32050) (symbol "__nrows" 32051 . 32058) (punctuation "=" 32059 . 32060) (semantic-list "(nrows)" 32061 . 32068) (punctuation "," 32068 . 32069) (symbol "__ctmp" 32069 . 32075) (punctuation "=" 32076 . 32077) (semantic-list "(ncols)" 32078 . 32085) (punctuation "," 32085 . 32086) (symbol "__rstart" 32086 . 32094) (punctuation "," 32094 . 32095) (symbol "__start" 32095 . 32102) (punctuation "," 32102 . 32103) (symbol "__end" 32103 . 32108) (punctuation ";" 32108 . 32109) (symbol "_4_ierr" 32114 . 32121) (punctuation "=" 32122 . 32123) (symbol "PetscCalloc2" 32124 . 32136) (semantic-list "(__nrows,&dnz,__nrows,&onz)" 32136 . 32163) (punctuation ";" 32163 . 32164) (symbol "CHKERRQ" 32164 . 32171) (semantic-list "(_4_ierr)" 32171 . 32180) (punctuation ";" 32180 . 32181) (symbol "__start" 32186 . 32193) (punctuation "=" 32194 . 32195) (number "0" 32196 . 32197) (punctuation ";" 32197 . 32198) (symbol "__end" 32199 . 32204) (punctuation "=" 32205 . 32206) (symbol "__start" 32207 . 32214) (punctuation ";" 32214 . 32215) (symbol "_4_ierr" 32260 . 32267) (punctuation "=" 32268 . 32269) (symbol "MPI_Scan" 32270 . 32278) (semantic-list "(&__ctmp,&__end,1,MPIU_INT,MPI_SUM,comm)" 32278 . 32318) (punctuation ";" 32318 . 32319) (symbol "CHKERRQ" 32319 . 32326) (semantic-list "(_4_ierr)" 32326 . 32335) (punctuation ";" 32335 . 32336) (symbol "__start" 32337 . 32344) (punctuation "=" 32345 . 32346) (symbol "__end" 32347 . 32352) (punctuation "-" 32353 . 32354) (symbol "__ctmp" 32355 . 32361) (punctuation ";" 32361 . 32362) (symbol "_4_ierr" 32366 . 32373) (punctuation "=" 32374 . 32375) (symbol "MPI_Scan" 32376 . 32384) (semantic-list "(&__nrows,&__rstart,1,MPIU_INT,MPI_SUM,comm)" 32384 . 32428) (punctuation ";" 32428 . 32429) (symbol "CHKERRQ" 32429 . 32436) (semantic-list "(_4_ierr)" 32436 . 32445) (punctuation ";" 32445 . 32446) (symbol "__rstart" 32447 . 32455) (punctuation "=" 32456 . 32457) (symbol "__rstart" 32458 . 32466) (punctuation "-" 32467 . 32468) (symbol "__nrows" 32469 . 32476) (punctuation ";" 32476 . 32477)))
          ("MatPreallocateLocation" (spp-arg-list ("A" "row" "ncols" "cols" "dnz" "onz") 41627 . 41653) . 
              ((number "0" 41654 . 41655) (punctuation ";" 41655 . 41656) (IF "if" 41656 . 41658) (semantic-list "(A)" 41659 . 41662) (semantic-list "{ierr = MatSetValues(A,1,&row,ncols,cols,NULL,INSERT_VALUES);CHKERRQ(ierr);}" 41663 . 41739) (ELSE "else" 41740 . 41744) (semantic-list "{ierr =  MatPreallocateSet(row,ncols,cols,dnz,onz);CHKERRQ(ierr);}" 41745 . 41811)))
          ("MatPreallocateFinalize" (spp-arg-list ("dnz" "onz") 42821 . 42830) . 
              ((number "0" 42831 . 42832) (punctuation ";" 42832 . 42833) (symbol "_4_ierr" 42833 . 42840) (punctuation "=" 42841 . 42842) (symbol "PetscFree2" 42843 . 42853) (semantic-list "(dnz,onz)" 42853 . 42862) (punctuation ";" 42862 . 42863) (symbol "CHKERRQ" 42863 . 42870) (semantic-list "(_4_ierr)" 42870 . 42879) (punctuation ";" 42879 . 42880) (close-paren "}" 42880 . 42881)))
          ("MP_PARTY_NONE" . ((string "\"no\"" 60315 . 60319)))
          ("MATRIX_BINARY_FORMAT_DENSE" . ((punctuation "-" 70675 . 70676) (number "1" 70676 . 70677)))
          ("MATMPIAIJCUSP" . ((string "\"mpiaijcusp\"" 1145 . 1157)))
          ("MATSEQAIJVIENNACL" . ((string "\"seqaijviennacl\"" 1355 . 1371)))
          ("MATDENSE" . ((string "\"dense\"" 1595 . 1602)))
          ("MATNORMALHERMITIAN" . ((string "\"normalh\"" 2329 . 2338)))
          ("MATSOLVERCUSPARSE" . ((string "\"cusparse\"" 3912 . 3922)))
          ("MAT_FILE_CLASSID" . ((number "1211216" 5121 . 5128)))
          ("MP_PARTY_OPT" . ((string "\"opt\"" 59939 . 59944)))
          ("MATCOARSENMIS" . ((string "\"mis\"" 62165 . 62170)))
          ("MATAIJCRL" . ((string "\"aijcrl\"" 954 . 962)))
          ("MATSEQSBSTRM" . ((string "\"seqsbstrm\"" 2111 . 2122)))
          ("MATNORMAL" . ((string "\"normal\"" 2293 . 2301)))
          ("MATLRC" . ((string "\"lrc\"" 2366 . 2371)))
          ("MATCOLORINGLF" . ((string "\"lf\"" 52506 . 52510)))
          ("MATSEQAIJPERM" . ((string "\"seqaijperm\"" 1480 . 1492)))
          ("MATMPIADJ" . ((string "\"mpiadj\"" 1853 . 1861)))
          ("MATBSTRM" . ((string "\"bstrm\"" 2076 . 2083)))
          ("MATCOMPOSITE" . ((string "\"composite\"" 2474 . 2485)))
          ("MATSEQCUFFT" . ((string "\"seqcufft\"" 2580 . 2590)))
          ("MATSOLVERMATLAB" . ((string "\"matlab\"" 3799 . 3807)))
          ("MATORDERINGNATURAL" . ((string "\"natural\"" 46236 . 46245)))
          ("MATORDERINGROWLENGTH" . ((string "\"rowlength\"" 46424 . 46435)))
          ("MATCOLORINGSL" . ((string "\"sl\"" 52474 . 52478)))
          ("MP_PARTY_RAN" . ((string "\"ran\"" 60020 . 60025)))
          ("MP_PARTY_GBF" . ((string "\"gbf\"" 60047 . 60052)))
          ("MATCOARSENHEM" . ((string "\"hem\"" 62194 . 62199)))
          ("MATSEQMAIJ" . ((string "\"seqmaij\"" 743 . 752)))
          ("MATELEMENTAL" . ((string "\"elemental\"" 1706 . 1717)))
          ("MATPREALLOCATOR" . ((string "\"preallocator\"" 2932 . 2946)))
          ("MatSolverPackage" . ((CHAR "char" 3240 . 3244) (punctuation "*" 3244 . 3245)))
          ("MATSOLVERCLIQUE" . ((string "\"clique\"" 3441 . 3449)))
          ("MATSOLVERELEMENTAL" . ((string "\"elemental\"" 3516 . 3527)))
          ("MATSOLVERPASTIX" . ((string "\"pastix\"" 3760 . 3768)))
          ("MATCOLORINGID" . ((string "\"id\"" 52538 . 52542)))
          ("MATPARTITIONINGPARMETIS" . ((string "\"parmetis\"" 56999 . 57009)))
          ("MATPARTITIONINGHIERARCH" . ((string "\"hierarch\"" 57166 . 57176)))
          ("MATMPIAIJ" . ((string "\"mpiaij\"" 918 . 926)))
          ("MATAIJPERM" . ((string "\"aijperm\"" 1443 . 1452)))
          ("MATSBAIJ" . ((string "\"sbaij\"" 1889 . 1896)))
          ("MATBLOCKMAT" . ((string "\"blockmat\"" 2436 . 2446)))
          ("MATNEST" . ((string "\"nest\"" 2898 . 2904)))
          ("MATSOLVERMKL_PARDISO" . ((string "\"mkl_pardiso\"" 3671 . 3684)))
          ("MAT_SKIP_ALLOCATION" . ((punctuation "-" 43862 . 43863) (number "4" 43863 . 43864)))
          ("MP_PARTY_SCA" . ((string "\"sca\"" 59993 . 59998)))
          ("MP_PARTY_KERNIGHAN_LIN" . ((string "\"kl\"" 60288 . 60292)))
          ("MATSAME" . ((string "\"same\"" 675 . 681)))
          ("MATMAIJ" . ((string "\"maij\"" 709 . 715)))
          ("MATSHELL" . ((string "\"shell\"" 1560 . 1567)))
          ("MATSEQBAIJ" . ((string "\"seqbaij\"" 1779 . 1788)))
          ("MATDAAD" . ((string "\"daad\"" 2225 . 2231)))
          ("MATSOLVERMKL_CPARDISO" . ((string "\"mkl_cpardiso\"" 3715 . 3729)))
          ("MATORDERINGAMD" . ((string "\"amd\"" 46546 . 46551)))
          ("MATCOLORINGJP" . ((string "\"jp\"" 52370 . 52374)))
          ("MATCOLORINGPOWER" . ((string "\"power\"" 52402 . 52409)))
          ("MP_PARTY_GCF" . ((string "\"gcf\"" 60074 . 60079)))
          ("MATMPIAIJCRL" . ((string "\"mpiaijcrl\"" 1029 . 1040)))
          ("MATMPIAIJPERM" . ((string "\"mpiaijperm\"" 1520 . 1532)))
          ("MATMPIDENSE" . ((string "\"mpidense\"" 1668 . 1678)))
          ("MATSBSTRM" . ((string "\"sbstrm\"" 2189 . 2197)))
          ("MATFFT" . ((string "\"fft\"" 2513 . 2518)))
          ("MATLOCALREF" . ((string "\"localref\"" 2860 . 2870)))
          ("MATSOLVERUMFPACK" . ((string "\"umfpack\"" 3361 . 3370)))
          ("MatPreallocateSetLocalBlock" (spp-arg-list ("rmap" "nrows" "rows" "cmap" "ncols" "cols" "dnz" "onz") 35405 . 35446) . 
              ((number "0" 35447 . 35448) (punctuation ";" 35448 . 35449) (semantic-list "{\\
  PetscInt __l;\\
  _4_ierr = ISLocalToGlobalMappingApplyBlock(rmap,nrows,rows,rows);CHKERRQ(_4_ierr);\\
  _4_ierr = ISLocalToGlobalMappingApplyBlock(cmap,ncols,cols,cols);CHKERRQ(_4_ierr);\\
  for (__l=0;__l<nrows;__l++) {\\
    _4_ierr = MatPreallocateSet((rows)[__l],ncols,cols,dnz,onz);CHKERRQ(_4_ierr);\\
  }\\
}" 35452 . 35766)))
          ("MatPreallocateSymmetricSetLocalBlock" (spp-arg-list ("map" "nrows" "rows" "ncols" "cols" "dnz" "onz") 36980 . 37015) . 
              ((number "0" 37016 . 37017) (punctuation ";" 37017 . 37018) (semantic-list "{\\
  PetscInt __l;\\
  _4_ierr = ISLocalToGlobalMappingApplyBlock(map,nrows,rows,rows);CHKERRQ(_4_ierr);\\
  _4_ierr = ISLocalToGlobalMappingApplyBlock(map,ncols,cols,cols);CHKERRQ(_4_ierr);\\
  for (__l=0;__l<nrows;__l++) {\\
    _4_ierr = MatPreallocateSymmetricSetBlock((rows)[__l],ncols,cols,dnz,onz);CHKERRQ(_4_ierr);\\
  }\\
}" 37020 . 37346)))
          ("MATORDERINGQMD" . ((string "\"qmd\"" 46387 . 46392)))
          ("MATCOLORINGGREEDY" . ((string "\"greedy\"" 52570 . 52578)))
          ("MATPARTITIONINGCURRENT" . ((string "\"current\"" 56873 . 56882)))
          ("MATPARTITIONINGAVERAGE" . ((string "\"average\"" 56916 . 56925)))
          ("MP_PARTY_HELPFUL_SETS" . ((string "\"hs\"" 60252 . 60256)))
          ("MATMPIMAIJ" . ((string "\"mpimaij\"" 780 . 789)))
          ("MATSEQAIJ" . ((string "\"seqaij\"" 882 . 890)))
          ("MATAIJCUSPARSE" . ((string "\"aijcusparse\"" 1185 . 1198)))
          ("MATMPIAIJCUSPARSE" . ((string "\"mpiaijcusparse\"" 1270 . 1286)))
          ("MATSEQDENSE" . ((string "\"seqdense\"" 1630 . 1640)))
          ("MATBAIJ" . ((string "\"baij\"" 1745 . 1751)))
          ("MATSCATTER" . ((string "\"scatter\"" 2399 . 2408)))
          ("MATHYPRESTRUCT" . ((string "\"hyprestruct\"" 2738 . 2751)))
          ("MATSOLVERSUPERLU_DIST" . ((string "\"superlu_dist\"" 3316 . 3330)))
          ("MATSOLVERPETSC" . ((string "\"petsc\"" 3838 . 3845)))
          ("MATORDERINGRCM" . ((string "\"rcm\"" 46350 . 46355)))
          ("MATMFFD_DS" . ((string "\"ds\"" 74677 . 74681)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_PETSCPCTYPES_H" variable (:constant-flag t) nil [39 54])
            ("petscdmtypes.h" include (:system-flag t) nil [56 81])
            ("PC" type
               (:typedef ("_p_PC" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [317 342])
            ("PCType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [688 715])
            ("PCNONE" variable (:constant-flag t) nil [724 730])
            ("PCJACOBI" variable (:constant-flag t) nil [757 765])
            ("PCSOR" variable (:constant-flag t) nil [792 797])
            ("PCLU" variable (:constant-flag t) nil [824 828])
            ("PCSHELL" variable (:constant-flag t) nil [855 862])
            ("PCBJACOBI" variable (:constant-flag t) nil [889 898])
            ("PCMG" variable (:constant-flag t) nil [925 929])
            ("PCEISENSTAT" variable (:constant-flag t) nil [956 967])
            ("PCILU" variable (:constant-flag t) nil [994 999])
            ("PCICC" variable (:constant-flag t) nil [1026 1031])
            ("PCASM" variable (:constant-flag t) nil [1058 1063])
            ("PCGASM" variable (:constant-flag t) nil [1090 1096])
            ("PCKSP" variable (:constant-flag t) nil [1123 1128])
            ("PCCOMPOSITE" variable (:constant-flag t) nil [1155 1166])
            ("PCREDUNDANT" variable (:constant-flag t) nil [1193 1204])
            ("PCSPAI" variable (:constant-flag t) nil [1231 1237])
            ("PCNN" variable (:constant-flag t) nil [1264 1268])
            ("PCCHOLESKY" variable (:constant-flag t) nil [1295 1305])
            ("PCPBJACOBI" variable (:constant-flag t) nil [1332 1342])
            ("PCMAT" variable (:constant-flag t) nil [1369 1374])
            ("PCHYPRE" variable (:constant-flag t) nil [1401 1408])
            ("PCPARMS" variable (:constant-flag t) nil [1435 1442])
            ("PCFIELDSPLIT" variable (:constant-flag t) nil [1469 1481])
            ("PCTFS" variable (:constant-flag t) nil [1508 1513])
            ("PCML" variable (:constant-flag t) nil [1540 1544])
            ("PCGALERKIN" variable (:constant-flag t) nil [1571 1581])
            ("PCEXOTIC" variable (:constant-flag t) nil [1608 1616])
            ("PCCP" variable (:constant-flag t) nil [1643 1647])
            ("PCBFBT" variable (:constant-flag t) nil [1674 1680])
            ("PCLSC" variable (:constant-flag t) nil [1707 1712])
            ("PCPYTHON" variable (:constant-flag t) nil [1739 1747])
            ("PCPFMG" variable (:constant-flag t) nil [1774 1780])
            ("PCSYSPFMG" variable (:constant-flag t) nil [1807 1816])
            ("PCREDISTRIBUTE" variable (:constant-flag t) nil [1843 1857])
            ("PCSVD" variable (:constant-flag t) nil [1884 1889])
            ("PCGAMG" variable (:constant-flag t) nil [1916 1922])
            ("PCSACUSP" variable (:constant-flag t) nil [1949 1957])
            ("PCSACUSPPOLY" variable (:constant-flag t) nil [2038 2050])
            ("PCBICGSTABCUSP" variable (:constant-flag t) nil [2077 2091])
            ("PCAINVCUSP" variable (:constant-flag t) nil [2118 2128])
            ("PCBDDC" variable (:constant-flag t) nil [2155 2161])
            ("PCKACZMARZ" variable (:constant-flag t) nil [2188 2198])
            ("PCTELESCOPE" variable (:constant-flag t) nil [2225 2236])
            ("PCSide" type
               (:typedef ("" type
                     (:members 
                        ( ("PC_SIDE_DEFAULT" variable
                             (:constant-flag t
                              :default-value (2440 2442)
                              :type "int")
                              (reparse-symbol enumsubparts) [2424 2442])
                          ("PC_LEFT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2443 2451])
                          ("PC_RIGHT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2451 2460])
                          ("PC_SYMMETRIC" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2460 2473]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [2409 2481])
            ("PC_SIDE_MAX" variable (:constant-flag t) nil [2490 2501])
            ("PCSides" variable
               (:pointer 2
                :constant-flag t
                :type "char")
                nil [2534 2567])
            ("PCRichardsonConvergedReason" type
               (:typedef ("" type
                     (:members 
                        ( ("PCRICHARDSON_CONVERGED_RTOL" variable
                             (:constant-flag t
                              :default-value (2881 2882)
                              :type "int")
                              (reparse-symbol enumsubparts) [2836 2882])
                          ("PCRICHARDSON_CONVERGED_ATOL" variable
                             (:constant-flag t
                              :default-value (2943 2944)
                              :type "int")
                              (reparse-symbol enumsubparts) [2898 2944])
                          ("PCRICHARDSON_CONVERGED_ITS" variable
                             (:constant-flag t
                              :default-value (3005 3006)
                              :type "int")
                              (reparse-symbol enumsubparts) [2960 3006])
                          ("PCRICHARDSON_DIVERGED_DTOL" variable
                             (:constant-flag t
                              :default-value (3066 3068)
                              :type "int")
                              (reparse-symbol enumsubparts) [3022 3068]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [2807 3098])
            ("PCJacobiType" type
               (:typedef ("" type
                     (:members 
                        ( ("PC_JACOBI_DIAGONAL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [3234 3253])
                          ("PC_JACOBI_ROWMAX" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [3253 3270])
                          ("PC_JACOBI_ROWSUM" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [3270 3287]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [3219 3301])
            ("PCJacobiTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [3315 3349])
            ("PCASMType" type
               (:typedef ("" type
                     (:members 
                        ( ("PC_ASM_BASIC" variable
                             (:constant-flag t
                              :default-value (4208 4209)
                              :type "int")
                              (reparse-symbol enumsubparts) [4193 4209])
                          ("PC_ASM_RESTRICT" variable
                             (:constant-flag t
                              :default-value (4228 4229)
                              :type "int")
                              (reparse-symbol enumsubparts) [4210 4229])
                          ("PC_ASM_INTERPOLATE" variable
                             (:constant-flag t
                              :default-value (4251 4252)
                              :type "int")
                              (reparse-symbol enumsubparts) [4230 4252])
                          ("PC_ASM_NONE" variable
                             (:constant-flag t
                              :default-value (4267 4268)
                              :type "int")
                              (reparse-symbol enumsubparts) [4253 4268]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [4179 4280])
            ("PCASMTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [4294 4325])
            ("PCGASMType" type
               (:typedef ("" type
                     (:members 
                        ( ("PC_GASM_BASIC" variable
                             (:constant-flag t
                              :default-value (6354 6355)
                              :type "int")
                              (reparse-symbol enumsubparts) [6338 6355])
                          ("PC_GASM_RESTRICT" variable
                             (:constant-flag t
                              :default-value (6375 6376)
                              :type "int")
                              (reparse-symbol enumsubparts) [6356 6376])
                          ("PC_GASM_INTERPOLATE" variable
                             (:constant-flag t
                              :default-value (6399 6400)
                              :type "int")
                              (reparse-symbol enumsubparts) [6377 6400])
                          ("PC_GASM_NONE" variable
                             (:constant-flag t
                              :default-value (6416 6417)
                              :type "int")
                              (reparse-symbol enumsubparts) [6401 6417]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [6324 6430])
            ("PCGASMTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [6444 6476])
            ("PCCompositeType" type
               (:typedef ("" type
                     (:members 
                        ( ("PC_COMPOSITE_ADDITIVE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7381 7403])
                          ("PC_COMPOSITE_MULTIPLICATIVE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7403 7431])
                          ("PC_COMPOSITE_SYMMETRIC_MULTIPLICATIVE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7431 7469])
                          ("PC_COMPOSITE_SPECIAL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7469 7490])
                          ("PC_COMPOSITE_SCHUR" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7490 7509]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [7367 7526])
            ("PCCompositeTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [7540 7577])
            ("PCFieldSplitSchurPreType" type
               (:typedef ("" type
                     (:members 
                        ( ("PC_FIELDSPLIT_SCHUR_PRE_SELF" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7742 7771])
                          ("PC_FIELDSPLIT_SCHUR_PRE_SELFP" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7771 7801])
                          ("PC_FIELDSPLIT_SCHUR_PRE_A11" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7801 7829])
                          ("PC_FIELDSPLIT_SCHUR_PRE_USER" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7829 7858])
                          ("PC_FIELDSPLIT_SCHUR_PRE_FULL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [7858 7887]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [7728 7913])
            ("PCFieldSplitSchurPreTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [7927 7973])
            ("PCFieldSplitSchurFactType" type
               (:typedef ("" type
                     (:members 
                        ( ("PC_FIELDSPLIT_SCHUR_FACT_DIAG" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [8181 8211])
                          ("PC_FIELDSPLIT_SCHUR_FACT_LOWER" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [8214 8245])
                          ("PC_FIELDSPLIT_SCHUR_FACT_UPPER" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [8248 8279])
                          ("PC_FIELDSPLIT_SCHUR_FACT_FULL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [8282 8313]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [8164 8340])
            ("PCFieldSplitSchurFactTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [8354 8401])
            ("PCPARMSGlobalType" type
               (:typedef ("" type
                     (:members 
                        ( ("PC_PARMS_GLOBAL_RAS" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [8557 8577])
                          ("PC_PARMS_GLOBAL_SCHUR" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [8577 8599])
                          ("PC_PARMS_GLOBAL_BJ" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [8599 8618]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [8543 8637])
            ("PCPARMSGlobalTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [8651 8690])
            ("PCPARMSLocalType" type
               (:typedef ("" type
                     (:members 
                        ( ("PC_PARMS_LOCAL_ILU0" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [8842 8862])
                          ("PC_PARMS_LOCAL_ILUK" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [8862 8882])
                          ("PC_PARMS_LOCAL_ILUT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [8882 8902])
                          ("PC_PARMS_LOCAL_ARMS" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [8902 8922]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [8828 8940])
            ("PCPARMSLocalTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [8954 8992])
            ("PCGAMGType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [9204 9235])
            ("PCGAMGAGG" variable (:constant-flag t) nil [9244 9253])
            ("PCGAMGGEO" variable (:constant-flag t) nil [9276 9285])
            ("PCGAMGCLASSICAL" variable (:constant-flag t) nil [9308 9323])
            ("PCGAMGClassicalType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [9339 9379])
            ("PCGAMGCLASSICALDIRECT" variable (:constant-flag t) nil [9388 9409])
            ("PCGAMGCLASSICALSTANDARD" variable (:constant-flag t) nil [9429 9452])
            ("PCMGType" type
               (:typedef ("" type
                     (:members 
                        ( ("PC_MG_MULTIPLICATIVE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [10621 10642])
                          ("PC_MG_ADDITIVE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [10642 10657])
                          ("PC_MG_FULL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [10657 10668])
                          ("PC_MG_KASKADE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [10668 10683]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [10606 10693])
            ("PCMGTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [10707 10737])
            ("PC_MG_CASCADE" variable (:constant-flag t) nil [10746 10759])
            ("PCMGCycleType" type
               (:typedef ("" type
                     (:members 
                        ( ("PC_MG_CYCLE_V" variable
                             (:constant-flag t
                              :default-value (10955 10956)
                              :type "int")
                              (reparse-symbol enumsubparts) [10939 10956])
                          ("PC_MG_CYCLE_W" variable
                             (:constant-flag t
                              :default-value (10973 10974)
                              :type "int")
                              (reparse-symbol enumsubparts) [10957 10974]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [10924 10991])
            ("PCMGCycleTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [11005 11040])
            ("PCExoticType" type
               (:typedef ("" type
                     (:members 
                        ( ("PC_EXOTIC_FACE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11192 11207])
                          ("PC_EXOTIC_WIREBASKET" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11207 11229]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [11177 11243])
            ("PCExoticTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [11257 11291])
            ("PCExoticSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PC" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11336 11339])
                    ("" variable (:type ("PCExoticType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11339 11352]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11305 11353])
            ("PCFailedReason" type
               (:typedef ("" type
                     (:members 
                        ( ("PC_NOERROR" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11534 11545])
                          ("PC_FACTOR_STRUCT_ZEROPIVOT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11545 11572])
                          ("PC_FACTOR_NUMERIC_ZEROPIVOT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11572 11600])
                          ("PC_FACTOR_OUTMEMORY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11600 11620])
                          ("PC_FACTOR_OTHER" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11620 11636])
                          ("PC_SUBPC_ERROR" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11636 11651]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [11520 11667])
            ("PCFailedReasons" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [11681 11717]))          
      :file "petscpctypes.h"
      :pointmax 11725
      :fsize 11724
      :lastmodtime '(22329 14111 0 0)
      :unmatched-syntax '((symbol 11668 . 11680) (symbol 11292 . 11304) (symbol 11244 . 11256) (symbol 10992 . 11004) (symbol 10694 . 10706) (symbol 8941 . 8953) (symbol 8638 . 8650) (symbol 8341 . 8353) (symbol 7914 . 7926) (symbol 7527 . 7539) (symbol 6431 . 6443) (symbol 4281 . 4293) (symbol 3302 . 3314) (symbol 2521 . 2533))
      :lexical-table 
        '(("PCPBJACOBI" . ((string "\"pbjacobi\"" 1350 . 1360)))
          ("PCGAMGCLASSICALSTANDARD" . ((string "\"standard\"" 9453 . 9463)))
          ("PCREDUNDANT" . ((string "\"redundant\"" 1211 . 1222)))
          ("PCBFBT" . ((string "\"bfbt\"" 1692 . 1698)))
          ("PCPYTHON" . ((string "\"python\"" 1757 . 1765)))
          ("PCTELESCOPE" . ((string "\"telescope\"" 2243 . 2254)))
          ("PCML" . ((string "\"ml\"" 1558 . 1562)))
          ("PCCP" . ((string "\"cp\"" 1661 . 1665)))
          ("PCSVD" . ((string "\"svd\"" 1902 . 1907)))
          ("PCILU" . ((string "\"ilu\"" 1012 . 1017)))
          ("PCSPAI" . ((string "\"spai\"" 1249 . 1255)))
          ("PCTFS" . ((string "\"tfs\"" 1526 . 1531)))
          ("PCAINVCUSP" . ((string "\"ainvcusp\"" 2136 . 2146)))
          ("PCSHELL" . ((string "\"shell\"" 873 . 880)))
          ("PCEISENSTAT" . ((string "\"eisenstat\"" 974 . 985)))
          ("PCGASM" . ((string "\"gasm\"" 1108 . 1114)))
          ("PCCOMPOSITE" . ((string "\"composite\"" 1173 . 1184)))
          ("PCMAT" . ((string "\"mat\"" 1387 . 1392)))
          ("PCSACUSP" . ((string "\"sacusp\"" 1967 . 1975)))
          ("PCSACUSPPOLY" . ((string "\"sacusppoly\"" 2056 . 2068)))
          ("PCGAMGAGG" . ((string "\"agg\"" 9262 . 9267)))
          ("PCJACOBI" . ((string "\"jacobi\"" 775 . 783)))
          ("PCNN" . ((string "\"nn\"" 1282 . 1286)))
          ("PCGALERKIN" . ((string "\"galerkin\"" 1589 . 1599)))
          ("PCLSC" . ((string "\"lsc\"" 1725 . 1730)))
          ("PCGAMG" . ((string "\"gamg\"" 1934 . 1940)))
          ("PC_SIDE_MAX" . ((semantic-list "(PC_SYMMETRIC + 1)" 2502 . 2520)))
          ("_PETSCPCTYPES_H")
          ("PCSOR" . ((string "\"sor\"" 810 . 815)))
          ("PCLU" . ((string "\"lu\"" 842 . 846)))
          ("PCHYPRE" . ((string "\"hypre\"" 1419 . 1426)))
          ("PCBICGSTABCUSP" . ((string "\"bicgstabcusp\"" 2095 . 2109)))
          ("PCASM" . ((string "\"asm\"" 1076 . 1081)))
          ("PCCHOLESKY" . ((string "\"cholesky\"" 1313 . 1323)))
          ("PCPFMG" . ((string "\"pfmg\"" 1792 . 1798)))
          ("PCGAMGGEO" . ((string "\"geo\"" 9294 . 9299)))
          ("PCMG" . ((string "\"mg\"" 943 . 947)))
          ("PCICC" . ((string "\"icc\"" 1044 . 1049)))
          ("PCKACZMARZ" . ((string "\"kaczmarz\"" 2206 . 2216)))
          ("PCNONE" . ((string "\"none\"" 742 . 748)))
          ("PCBJACOBI" . ((string "\"bjacobi\"" 907 . 916)))
          ("PCKSP" . ((string "\"ksp\"" 1141 . 1146)))
          ("PCFIELDSPLIT" . ((string "\"fieldsplit\"" 1487 . 1499)))
          ("PCSYSPFMG" . ((string "\"syspfmg\"" 1825 . 1834)))
          ("PCBDDC" . ((string "\"bddc\"" 2173 . 2179)))
          ("PCGAMGCLASSICALDIRECT" . ((string "\"direct\"" 9412 . 9420)))
          ("PCPARMS" . ((string "\"parms\"" 1453 . 1460)))
          ("PCEXOTIC" . ((string "\"exotic\"" 1626 . 1634)))
          ("PCREDISTRIBUTE" . ((string "\"redistribute\"" 1861 . 1875)))
          ("PCGAMGCLASSICAL" . ((string "\"classical\"" 9326 . 9337)))
          ("PC_MG_CASCADE" . ((symbol "PC_MG_KASKADE" 10760 . 10773) (punctuation ";" 10773 . 10774)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__PETSCVEC_H" variable (:constant-flag t) nil [247 259])
            ("petscis.h" include (:system-flag t) nil [260 280])
            ("petscviewer.h" include (:system-flag t) nil [281 305])
            ("Vec" type
               (:typedef ("_p_Vec" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [469 504])
            ("VecScatter" type
               (:typedef ("_p_VecScatter" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [754 796])
            ("ScatterMode" type
               (:typedef ("" type
                     (:members 
                        ( ("SCATTER_FORWARD" variable
                             (:constant-flag t
                              :default-value (967 968)
                              :type "int")
                              (reparse-symbol enumsubparts) [951 968])
                          ("SCATTER_REVERSE" variable
                             (:constant-flag t
                              :default-value (986 987)
                              :type "int")
                              (reparse-symbol enumsubparts) [970 987])
                          ("SCATTER_FORWARD_LOCAL" variable
                             (:constant-flag t
                              :default-value (1011 1012)
                              :type "int")
                              (reparse-symbol enumsubparts) [989 1012])
                          ("SCATTER_REVERSE_LOCAL" variable
                             (:constant-flag t
                              :default-value (1036 1037)
                              :type "int")
                              (reparse-symbol enumsubparts) [1014 1037])
                          ("SCATTER_LOCAL" variable
                             (:constant-flag t
                              :default-value (1053 1054)
                              :type "int")
                              (reparse-symbol enumsubparts) [1039 1054]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [937 1068])
            ("VecType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [2654 2682])
            ("VECSEQ" variable (:constant-flag t) nil [2691 2697])
            ("VECMPI" variable (:constant-flag t) nil [2720 2726])
            ("VECSTANDARD" variable (:constant-flag t) nil [2749 2760])
            ("VECSHARED" variable (:constant-flag t) nil [2829 2838])
            ("VECSEQCUSP" variable (:constant-flag t) nil [2861 2871])
            ("VECMPICUSP" variable (:constant-flag t) nil [2894 2904])
            ("VECCUSP" variable (:constant-flag t) nil [2927 2934])
            ("VECSEQVIENNACL" variable (:constant-flag t) nil [3015 3029])
            ("VECMPIVIENNACL" variable (:constant-flag t) nil [3052 3066])
            ("VECVIENNACL" variable (:constant-flag t) nil [3089 3100])
            ("VECSEQCUDA" variable (:constant-flag t) nil [3185 3195])
            ("VECMPICUDA" variable (:constant-flag t) nil [3218 3228])
            ("VECCUDA" variable (:constant-flag t) nil [3251 3258])
            ("VECNEST" variable (:constant-flag t) nil [3339 3346])
            ("VEC_FILE_CLASSID" variable (:constant-flag t) nil [3396 3412])
            ("VEC_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [3434 3459])
            ("VEC_SCATTER_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [3473 3506])
            ("VecInitializePackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3558 3563]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3522 3564])
            ("VecFinalizePackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3612 3617]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3578 3618])
            ("VecCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3658 3667])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3667 3672]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3633 3673])
            ("VecCreateSeq" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3715 3724])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3724 3733])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3733 3738]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3687 3739])
            ("VecCreateMPI" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3781 3790])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3790 3799])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3799 3808])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3808 3813]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3753 3814])
            ("VecCreateSeqWithArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3865 3874])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3874 3883])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3883 3892])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3892 3911])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3912 3917]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3828 3918])
            ("VecCreateMPIWithArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3969 3978])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3978 3987])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3987 3996])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3996 4005])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4005 4024])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4025 4030]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3932 4031])
            ("VecCreateShared" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4076 4085])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4085 4094])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4094 4103])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4103 4108]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4045 4109])
            ("VecSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4156 4160]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4123 4161])
            ("VecViewFromOptions" function
               (:arguments 
                  ( ("A" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4216 4222])
                    ("B" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4222 4236])
                    ("name" variable
                       (:dereference 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4236 4254]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4182 4314])
            ("VecSetUp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4353 4357]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4329 4358])
            ("VecDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4398 4403]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4372 4404])
            ("VecZeroEntries" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4448 4452]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4418 4453])
            ("VecSetOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4502 4506])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4506 4518]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4467 4520])
            ("VecAppendOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4572 4576])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4576 4588]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4534 4590])
            ("VecGetOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4639 4643])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4643 4656]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4604 4658])
            ("VecSetSizes" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4700 4704])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4704 4713])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4713 4722]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4673 4723])
            ("VecDotNorm2" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4765 4769])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4769 4773])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4773 4786])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4786 4797]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4738 4798])
            ("VecDot" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4834 4838])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4838 4842])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4842 4855]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4812 4856])
            ("VecDotRealPart" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4900 4904])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4904 4908])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4908 4919]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4870 4920])
            ("VecTDot" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4957 4961])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4961 4965])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4965 4978]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4934 4979])
            ("VecMDot" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5016 5020])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5020 5029])
                    ("" variable
                       (:constant-flag t
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5029 5040])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5041 5054]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4993 5056])
            ("VecMTDot" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5094 5098])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5098 5107])
                    ("" variable
                       (:constant-flag t
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5107 5118])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5119 5132]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5070 5134])
            ("VecGetSubVector" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5179 5183])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5183 5186])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5186 5191]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5148 5192])
            ("VecRestoreSubVector" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5241 5245])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5245 5248])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5248 5253]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5206 5254])
            ("NormType" type
               (:typedef ("" type
                     (:members 
                        ( ("NORM_1" variable
                             (:constant-flag t
                              :default-value (5423 5424)
                              :type "int")
                              (reparse-symbol enumsubparts) [5416 5424])
                          ("NORM_2" variable
                             (:constant-flag t
                              :default-value (5432 5433)
                              :type "int")
                              (reparse-symbol enumsubparts) [5425 5433])
                          ("NORM_FROBENIUS" variable
                             (:constant-flag t
                              :default-value (5449 5450)
                              :type "int")
                              (reparse-symbol enumsubparts) [5434 5450])
                          ("NORM_INFINITY" variable
                             (:constant-flag t
                              :default-value (5465 5466)
                              :type "int")
                              (reparse-symbol enumsubparts) [5451 5466])
                          ("NORM_1_AND_2" variable
                             (:constant-flag t
                              :default-value (5480 5481)
                              :type "int")
                              (reparse-symbol enumsubparts) [5467 5481]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [5402 5492])
            ("NormTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [5506 5536])
            ("NORM_MAX" variable (:constant-flag t) nil [5545 5553])
            ("VecNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6883 6887])
                    ("" variable (:type ("NormType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6887 6896])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6896 6908]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6860 6909])
            ("VecNormAvailable" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6955 6959])
                    ("" variable (:type ("NormType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6959 6968])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6968 6980])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6980 6992]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6923 6993])
            ("VecNormalize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7035 7039])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7039 7051]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7007 7052])
            ("VecSum" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7088 7092])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7092 7105]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7066 7106])
            ("VecMax" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7142 7146])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7146 7156])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7156 7168]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7120 7169])
            ("VecMin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7205 7209])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7209 7219])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7219 7231]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7183 7232])
            ("VecScale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7270 7274])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7274 7286]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7246 7287])
            ("VecCopy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7324 7328])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7328 7332]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7301 7333])
            ("VecSetRandom" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7375 7379])
                    ("" variable (:type ("PetscRandom" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7379 7391]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7347 7392])
            ("VecSet" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7428 7432])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7432 7444]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7406 7445])
            ("VecSetInf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7484 7488]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7459 7489])
            ("VecSwap" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7526 7530])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7530 7534]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7503 7535])
            ("VecAXPY" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7572 7576])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7576 7588])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7588 7592]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7549 7593])
            ("VecAXPBY" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7631 7635])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7635 7647])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7647 7659])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7659 7663]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7607 7664])
            ("VecMAXPY" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7702 7706])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7706 7715])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7715 7734])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7735 7740]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7678 7742])
            ("VecAYPX" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7779 7783])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7783 7795])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7795 7799]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7756 7800])
            ("VecWAXPY" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7838 7842])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7842 7854])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7854 7858])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7858 7862]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7814 7863])
            ("VecAXPBYPCZ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7904 7908])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7908 7920])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7920 7932])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7932 7944])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7944 7948])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7948 7952]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7877 7953])
            ("VecPointwiseMax" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7998 8002])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8002 8006])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8006 8010]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7967 8011])
            ("VecPointwiseMaxAbs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8059 8063])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8063 8067])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8067 8071]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8025 8072])
            ("VecPointwiseMin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8117 8121])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8121 8125])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8125 8129]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8086 8130])
            ("VecPointwiseMult" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8176 8180])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8180 8184])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8184 8188]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8144 8189])
            ("VecPointwiseDivide" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8237 8241])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8241 8245])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8245 8249]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8203 8250])
            ("VecMaxPointwiseDivide" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8301 8305])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8305 8309])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8309 8320]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8264 8321])
            ("VecShift" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8359 8363])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8363 8375]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8335 8376])
            ("VecReciprocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8419 8423]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8390 8424])
            ("VecPermute" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8464 8468])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8469 8472])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8473 8484]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8438 8485])
            ("VecSqrtAbs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8525 8529]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8499 8530])
            ("VecLog" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8566 8570]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8544 8571])
            ("VecExp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8607 8611]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8585 8612])
            ("VecAbs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8648 8652]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8626 8653])
            ("VecDuplicate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8695 8699])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8699 8704]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8667 8705])
            ("VecDuplicateVecs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8751 8755])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8755 8764])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8764 8770]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8719 8772])
            ("VecDestroyVecs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8816 8825])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8826 8832]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8786 8834])
            ("VecStrideNormAll" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8880 8884])
                    ("" variable (:type ("NormType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8884 8893])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8893 8904]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8848 8906])
            ("VecStrideMaxAll" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8951 8955])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8955 8966])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8967 8979]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8920 8981])
            ("VecStrideMinAll" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9026 9030])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9030 9041])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9042 9054]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8995 9056])
            ("VecStrideScaleAll" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9103 9107])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9107 9126]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9070 9128])
            ("VecUniqueEntries" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9174 9178])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9178 9188])
                    ("" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9188 9202]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9142 9203])
            ("VecStrideNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9247 9251])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9251 9260])
                    ("" variable (:type ("NormType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9260 9269])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9269 9280]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9218 9281])
            ("VecStrideMax" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9323 9327])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9327 9336])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9336 9347])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9347 9359]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9295 9360])
            ("VecStrideMin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9402 9406])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9406 9415])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9415 9426])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9426 9438]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9374 9439])
            ("VecStrideScale" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9483 9487])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9487 9496])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9496 9508]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9453 9509])
            ("VecStrideSet" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9551 9555])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9555 9564])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9564 9576]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9523 9577])
            ("VecStrideGather" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9624 9628])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9628 9637])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9637 9641])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9641 9652]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9593 9653])
            ("VecStrideScatter" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9699 9703])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9703 9712])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9712 9716])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9716 9727]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9667 9728])
            ("VecStrideGatherAll" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9776 9780])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9780 9785])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9786 9797]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9742 9798])
            ("VecStrideScatterAll" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9847 9852])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9853 9857])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9857 9868]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9812 9869])
            ("VecStrideSubSetScatter" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9922 9926])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9926 9935])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9935 9951])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9952 9968])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9969 9973])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9973 9984]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9884 9985])
            ("VecStrideSubSetGather" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10036 10040])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10040 10049])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10049 10065])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10066 10082])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10083 10087])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10087 10098]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9999 10099])
            ("VecSetValues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10142 10146])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10146 10155])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10155 10171])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10172 10191])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10192 10203]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10114 10204])
            ("VecGetValues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10246 10250])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10250 10259])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10259 10275])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10276 10289]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10218 10291])
            ("VecAssemblyBegin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10337 10341]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10305 10342])
            ("VecAssemblyEnd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10386 10390]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10356 10391])
            ("VecStashSetInitialSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10443 10447])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10447 10456])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10456 10465]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10405 10466])
            ("VecStashView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10508 10512])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10512 10524]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10480 10525])
            ("VecStashViewFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10578 10582])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10582 10594])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [10594 10606]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10539 10608])
            ("VecStashGetInfo" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10653 10657])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10657 10667])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10667 10677])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10677 10687])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10687 10697]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10622 10698])
            ("VecSetValue" function
               (:arguments 
                  ( ("v" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11575 11581])
                    ("i" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11581 11592])
                    ("va" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11592 11607])
                    ("mode" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11607 11623]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11548 11663])
            ("VecSetBlockSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11710 11714])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11714 11723]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11679 11724])
            ("VecGetBlockSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11769 11773])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11773 11783]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11738 11784])
            ("VecSetValuesBlocked" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11833 11837])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11837 11846])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11846 11862])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11863 11882])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11883 11894]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11798 11895])
            ("VecList" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) nil [11955 11981])
            ("VecSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12021 12025])
                    ("" variable (:type ("VecType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12026 12034]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11995 12035])
            ("VecGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12075 12079])
                    ("" variable
                       (:pointer 1
                        :type ("VecType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12080 12090]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12049 12091])
            ("VecRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [12132 12144])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12164 12168]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12105 12170])
            ("VecScatterCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12217 12221])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12221 12224])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12224 12228])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12228 12231])
                    ("" variable
                       (:pointer 1
                        :type ("VecScatter" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12231 12244]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12185 12245])
            ("VecScatterCreateEmpty" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12296 12305])
                    ("" variable
                       (:pointer 1
                        :type ("VecScatter" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12305 12318]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12259 12319])
            ("VecScatterCreateLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("VecScatter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12370 12381])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12381 12390])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12390 12406])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12407 12423])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12424 12440])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12441 12450])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12450 12466])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12467 12483])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12484 12500])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12501 12510]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12333 12511])
            ("VecScatterBegin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("VecScatter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12556 12567])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12567 12571])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12571 12575])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12575 12586])
                    ("" variable (:type ("ScatterMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12586 12598]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12525 12599])
            ("VecScatterEnd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("VecScatter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12642 12653])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12653 12657])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12657 12661])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12661 12672])
                    ("" variable (:type ("ScatterMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12672 12684]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12613 12685])
            ("VecScatterDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("VecScatter" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12732 12744]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12699 12745])
            ("VecScatterCopy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("VecScatter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12789 12800])
                    ("" variable
                       (:pointer 1
                        :type ("VecScatter" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12800 12813]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12759 12814])
            ("VecScatterView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("VecScatter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12858 12869])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12869 12881]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12828 12882])
            ("VecScatterViewFromOptions" function
               (:arguments 
                  ( ("A" variable (:type ("VecScatter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12944 12957])
                    ("obj" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12957 12973])
                    ("name" variable
                       (:dereference 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [12973 12991]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12903 13053])
            ("VecScatterRemap" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("VecScatter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13098 13109])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13109 13120])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13120 13130]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13067 13131])
            ("VecScatterGetMerged" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("VecScatter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13180 13191])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13191 13203]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13145 13204])
            ("VecGetArray4d" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13248 13252])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13252 13261])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13261 13270])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13270 13279])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13279 13288])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13288 13297])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13297 13306])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13306 13315])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13315 13324])
                    ("" variable
                       (:pointer 4
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13324 13341]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13219 13343])
            ("VecRestoreArray4d" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13390 13394])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13394 13403])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13403 13412])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13412 13421])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13421 13430])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13430 13439])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13439 13448])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13448 13457])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13457 13466])
                    ("" variable
                       (:pointer 4
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13466 13483]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13357 13485])
            ("VecGetArray3d" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13528 13532])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13532 13541])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13541 13550])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13550 13559])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13559 13568])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13568 13577])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13577 13586])
                    ("" variable
                       (:pointer 3
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13586 13602]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13499 13604])
            ("VecRestoreArray3d" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13651 13655])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13655 13664])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13664 13673])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13673 13682])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13682 13691])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13691 13700])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13700 13709])
                    ("" variable
                       (:pointer 3
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13709 13725]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13618 13727])
            ("VecGetArray2d" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13770 13774])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13774 13783])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13783 13792])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13792 13801])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13801 13810])
                    ("" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13810 13825]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13741 13827])
            ("VecRestoreArray2d" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13874 13878])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13878 13887])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13887 13896])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13896 13905])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13905 13914])
                    ("" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13914 13929]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13841 13931])
            ("VecGetArray1d" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13974 13978])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13978 13987])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13987 13996])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13996 14011]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13945 14013])
            ("VecRestoreArray1d" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14060 14064])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14064 14073])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14073 14082])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14082 14097]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14027 14099])
            ("VecGetArray4dRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14147 14151])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14151 14160])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14160 14169])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14169 14178])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14178 14187])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14187 14196])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14196 14205])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14205 14214])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14214 14223])
                    ("" variable
                       (:pointer 4
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14223 14240]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14114 14242])
            ("VecRestoreArray4dRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14293 14297])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14297 14306])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14306 14315])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14315 14324])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14324 14333])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14333 14342])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14342 14351])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14351 14360])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14360 14369])
                    ("" variable
                       (:pointer 4
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14369 14386]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14256 14388])
            ("VecGetArray3dRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14435 14439])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14439 14448])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14448 14457])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14457 14466])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14466 14475])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14475 14484])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14484 14493])
                    ("" variable
                       (:pointer 3
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14493 14509]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14402 14511])
            ("VecRestoreArray3dRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14562 14566])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14566 14575])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14575 14584])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14584 14593])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14593 14602])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14602 14611])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14611 14620])
                    ("" variable
                       (:pointer 3
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14620 14636]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14525 14638])
            ("VecGetArray2dRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14685 14689])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14689 14698])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14698 14707])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14707 14716])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14716 14725])
                    ("" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14725 14740]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14652 14742])
            ("VecRestoreArray2dRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14793 14797])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14797 14806])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14806 14815])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14815 14824])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14824 14833])
                    ("" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14833 14848]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14756 14850])
            ("VecGetArray1dRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14897 14901])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14901 14910])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14910 14919])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14919 14934]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14864 14936])
            ("VecRestoreArray1dRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14987 14991])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14991 15000])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15000 15009])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15009 15024]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14950 15026])
            ("VecPlaceArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15070 15074])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15074 15093]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15041 15095])
            ("VecResetArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15138 15142]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15109 15143])
            ("VecReplaceArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15188 15192])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15192 15211]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15157 15213])
            ("VecGetArrays" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15255 15266])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15267 15276])
                    ("" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15276 15291]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15227 15293])
            ("VecRestoreArrays" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15339 15350])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15351 15360])
                    ("" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15360 15375]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15307 15377])
            ("VecView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15415 15419])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15419 15431]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15392 15432])
            ("VecEqual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15470 15474])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15474 15478])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15478 15490]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15446 15491])
            ("VecLoad" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15528 15532])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15533 15545]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15505 15546])
            ("VecGetSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15587 15591])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15591 15601]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15561 15602])
            ("VecGetLocalSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15647 15651])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15651 15661]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15616 15662])
            ("VecGetOwnershipRange" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15712 15716])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15716 15726])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15726 15736]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15676 15737])
            ("VecGetOwnershipRanges" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15788 15792])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15792 15810]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15751 15812])
            ("VecSetLocalToGlobalMapping" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15869 15873])
                    ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15873 15896]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15827 15897])
            ("VecSetValuesLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15944 15948])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15948 15957])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15957 15973])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15974 15993])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15994 16005]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15911 16006])
            ("VecSetValueLocal" function
               (:arguments 
                  ( ("v" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16918 16924])
                    ("i" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16924 16935])
                    ("va" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16935 16950])
                    ("mode" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16950 16966]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16886 17011])
            ("VecSetValuesBlockedLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17066 17070])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17070 17079])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17079 17095])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17096 17115])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17116 17127]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17026 17128])
            ("VecGetLocalToGlobalMapping" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17184 17188])
                    ("" variable
                       (:pointer 1
                        :type ("ISLocalToGlobalMapping" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17188 17212]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17142 17213])
            ("VecDotBegin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17255 17259])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17259 17263])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17263 17277]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17228 17278])
            ("VecDotEnd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17317 17321])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17321 17325])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17325 17339]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17292 17340])
            ("VecTDotBegin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17382 17386])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17386 17390])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17390 17404]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17354 17405])
            ("VecTDotEnd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17445 17449])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17449 17453])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17453 17467]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17419 17468])
            ("VecNormBegin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17510 17514])
                    ("" variable (:type ("NormType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17514 17523])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17523 17535]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17482 17536])
            ("VecNormEnd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17576 17580])
                    ("" variable (:type ("NormType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17580 17589])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17589 17601]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17550 17602])
            ("VecMDotBegin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17645 17649])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17649 17658])
                    ("" variable
                       (:constant-flag t
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17658 17669])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17670 17683]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17617 17685])
            ("VecMDotEnd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17725 17729])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17729 17738])
                    ("" variable
                       (:constant-flag t
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17738 17749])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17750 17763]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17699 17765])
            ("VecMTDotBegin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17808 17812])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17812 17821])
                    ("" variable
                       (:constant-flag t
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17821 17832])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17833 17846]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17779 17848])
            ("VecMTDotEnd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17889 17893])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17893 17902])
                    ("" variable
                       (:constant-flag t
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17902 17913])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17914 17927]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17862 17929])
            ("PetscCommSplitReductionBegin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17987 17996]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17943 17997])
            ("VecOption" type
               (:typedef ("" type
                     (:members 
                        ( ("VEC_IGNORE_OFF_PROC_ENTRIES" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [18014 18042])
                          ("VEC_IGNORE_NEGATIVE_INDICES" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [18042 18070])
                          ("VEC_SUBSET_OFF_PROC_ENTRIES" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [18070 18098]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [18000 18109])
            ("VecSetOption" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18151 18155])
                    ("" variable (:type ("VecOption" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18155 18165])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18165 18176]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18123 18177])
            ("VecGetArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18219 18223])
                    ("" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18223 18237]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18192 18238])
            ("VecGetArrayRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18283 18287])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18287 18307]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18252 18308])
            ("VecRestoreArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18353 18357])
                    ("" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18357 18371]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18322 18372])
            ("VecRestoreArrayRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18421 18425])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18425 18445]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18386 18446])
            ("VecGetLocalVector" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18493 18497])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18497 18501]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18460 18502])
            ("VecRestoreLocalVector" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18553 18557])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18557 18561]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18516 18562])
            ("VecGetLocalVectorRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18613 18617])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18617 18621]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18576 18622])
            ("VecRestoreLocalVectorRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18677 18681])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18681 18685]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18636 18686])
            ("VecGetArrayPair" function
               (:arguments 
                  ( ("x" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18850 18856])
                    ("y" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18856 18862])
                    ("xv" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18862 18879])
                    ("yv" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18879 18896]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18819 19130])
            ("VecRestoreArrayPair" function
               (:arguments 
                  ( ("x" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19186 19192])
                    ("y" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19192 19198])
                    ("xv" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19198 19215])
                    ("yv" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19215 19232]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19151 19448])
            ("VecLockGet" variable (:constant-flag t) nil [19865 19875])
            ("VecLockPush" variable (:constant-flag t) nil [19906 19917])
            ("VecLockPop" variable (:constant-flag t) nil [19938 19948])
            ("VecLocked" variable (:constant-flag t) nil [19970 19979])
            ("VecValidValues" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20038 20042])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20042 20051])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20051 20061]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20008 20062])
            ("VecOperation" type
               (:typedef ("" type
                     (:members 
                        ( ("VECOP_DUPLICATE" variable
                             (:constant-flag t
                              :default-value (20184 20185)
                              :type "int")
                              (reparse-symbol enumsubparts) [20166 20185])
                          ("VECOP_VIEW" variable
                             (:constant-flag t
                              :default-value (20200 20202)
                              :type "int")
                              (reparse-symbol enumsubparts) [20187 20202])
                          ("VECOP_LOAD" variable
                             (:constant-flag t
                              :default-value (20217 20219)
                              :type "int")
                              (reparse-symbol enumsubparts) [20204 20219])
                          ("VECOP_VIEWNATIVE" variable
                             (:constant-flag t
                              :default-value (20240 20242)
                              :type "int")
                              (reparse-symbol enumsubparts) [20221 20242])
                          ("VECOP_LOADNATIVE" variable
                             (:constant-flag t
                              :default-value (20263 20265)
                              :type "int")
                              (reparse-symbol enumsubparts) [20244 20265]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [20151 20281])
            ("VecSetOperation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20326 20330])
                    ("" variable (:type ("VecOperation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20330 20343])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [20351 20356]))                          
                        :type "void")
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20295 20358])
            ("VecMPISetGhost" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20512 20516])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20516 20525])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20525 20541]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20482 20543])
            ("VecCreateGhost" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20587 20596])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20596 20605])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20605 20614])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20614 20623])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20623 20639])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20640 20645]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20557 20646])
            ("VecCreateGhostWithArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20699 20708])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20708 20717])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20717 20726])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20726 20735])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20735 20751])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20752 20771])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20772 20777]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20660 20778])
            ("VecCreateGhostBlock" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20827 20836])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20836 20845])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20845 20854])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20854 20863])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20863 20872])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20872 20888])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20889 20894]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20792 20895])
            ("VecCreateGhostBlockWithArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20953 20962])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20962 20971])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20971 20980])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20980 20989])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20989 20998])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20998 21014])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21015 21034])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21035 21040]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20909 21041])
            ("VecGhostGetLocalForm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21091 21095])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21095 21100]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21055 21101])
            ("VecGhostRestoreLocalForm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21155 21159])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21159 21164]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21115 21165])
            ("VecGhostIsLocalForm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21214 21218])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21218 21222])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21222 21233]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21179 21234])
            ("VecGhostUpdateBegin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21283 21287])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21287 21298])
                    ("" variable (:type ("ScatterMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21298 21310]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21248 21311])
            ("VecGhostUpdateEnd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21358 21362])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21362 21373])
                    ("" variable (:type ("ScatterMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21373 21385]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21325 21386])
            ("VecConjugate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21429 21433]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21401 21434])
            ("VecScatterCreateToAll" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21486 21490])
                    ("" variable
                       (:pointer 1
                        :type ("VecScatter" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21490 21502])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21502 21507]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21449 21508])
            ("VecScatterCreateToZero" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21560 21564])
                    ("" variable
                       (:pointer 1
                        :type ("VecScatter" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21564 21576])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21576 21581]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21522 21582])
            ("ISComplementVec" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21628 21631])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21631 21635])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21635 21639]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21597 21640])
            ("VecPow" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21676 21680])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21681 21693]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21654 21694])
            ("VecMedian" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21733 21737])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21738 21742])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21743 21747])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21748 21752]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21708 21753])
            ("VecWhichBetween" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21798 21802])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21803 21807])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21808 21812])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21813 21818]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21767 21819])
            ("VecWhichBetweenOrEqual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21871 21875])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21876 21880])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21881 21885])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21886 21891]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21833 21892])
            ("VecWhichGreaterThan" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21941 21945])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21946 21950])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21951 21957]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21906 21958])
            ("VecWhichLessThan" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22004 22008])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22009 22013])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22014 22019]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [21972 22020])
            ("VecWhichEqual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22063 22067])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22068 22072])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22073 22078]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22034 22079])
            ("VecISAXPY" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22118 22122])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22123 22126])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22127 22139])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22139 22143]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22093 22144])
            ("VecISSet" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22182 22186])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22186 22189])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22190 22202]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22158 22203])
            ("VecBoundGradientProjection" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22259 22263])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22264 22268])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22269 22273])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22274 22278])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22279 22283]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22217 22284])
            ("VecStepBoundInfo" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22330 22334])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22334 22338])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22338 22342])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22342 22346])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22346 22357])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22358 22369])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22369 22380]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22298 22381])
            ("VecStepMax" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22421 22425])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22426 22430])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22431 22443]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22395 22444])
            ("VecStepMaxBounded" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22491 22495])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22495 22499])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22499 22503])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22503 22507])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22507 22518]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22458 22519])
            ("PetscViewerMathematicaGetVector" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22581 22593])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22594 22598]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22534 22599])
            ("PetscViewerMathematicaPutVector" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22660 22672])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22673 22677]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22613 22678])
            ("_n_Vecs" type
               (:members 
                  ( ("n" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23054 23065])
                    ("v" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23066 23072]))                  
                :type "struct")
                nil [23037 23074])
            ("Vecs" type
               (:typedef ("_n_Vecs" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [23075 23104])
            ("VecsDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vecs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23145 23150]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23118 23151])
            ("VecsCreateSeq" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23194 23203])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23203 23212])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23212 23221])
                    ("" variable
                       (:pointer 1
                        :type ("Vecs" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23221 23227]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23165 23228])
            ("VecsCreateSeqWithArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23280 23289])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23289 23298])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23298 23307])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23307 23320])
                    ("" variable
                       (:pointer 1
                        :type ("Vecs" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23320 23326]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23242 23327])
            ("VecsDuplicate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vecs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23370 23375])
                    ("" variable
                       (:pointer 1
                        :type ("Vecs" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23375 23381]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23341 23382])
            ("VecNestGetSubVecs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25452 25456])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25456 25466])
                    ("" variable
                       (:pointer 2
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25466 25472]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25419 25473])
            ("VecNestGetSubVec" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25519 25523])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25523 25532])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25532 25537]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25487 25538])
            ("VecNestSetSubVecs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25585 25589])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25589 25598])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25598 25608])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25608 25613]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25552 25614])
            ("VecNestSetSubVec" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25660 25664])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25664 25673])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25673 25677]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25628 25678])
            ("VecCreateNest" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25721 25730])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25730 25739])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25739 25743])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25743 25748])
                    ("" variable
                       (:pointer 1
                        :type ("Vec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25748 25753]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25692 25754])
            ("VecNestGetSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25798 25802])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25802 25812]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25768 25813])
            ("PetscOptionsGetVec" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25862 25875])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [25875 25887])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [25888 25900])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25901 25905])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25905 25916]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25828 25917])
            ("VecChop" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25954 25958])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25958 25968]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25931 25969])
            ("VecGetLayout" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26012 26016])
                    ("" variable
                       (:pointer 1
                        :type ("PetscLayout" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26016 26029]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25984 26030])
            ("VecSetLayout" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26072 26076])
                    ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26076 26088]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26044 26089])
            ("PetscSectionVecView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26139 26152])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26153 26157])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26158 26170]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26104 26171])
            ("VecGetValuesSection" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26220 26224])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26225 26238])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26239 26248])
                    ("" variable
                       (:pointer 2
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26249 26264]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26185 26265])
            ("VecSetValuesSection" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26314 26318])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26319 26332])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26333 26342])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26343 26357])
                    ("" variable (:type ("InsertMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26359 26370]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26279 26371])
            ("PetscSectionVecNorm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26420 26433])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26434 26447])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26448 26452])
                    ("" variable (:type ("NormType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26453 26462])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26463 26475]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26385 26477])
            ("PetscSFCreateFromZero" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26529 26538])
                    ("" variable (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26538 26542])
                    ("" variable
                       (:pointer 1
                        :type ("PetscSF" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26542 26551]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26492 26552]))          
      :file "petscvec.h"
      :pointmax 26562
      :fsize 26561
      :lastmodtime '(22329 14111 0 0)
      :unmatched-syntax '((symbol 26479 . 26491) (semantic-list 26473 . 26475) (symbol 26372 . 26384) (semantic-list 26355 . 26357) (symbol 26266 . 26278) (symbol 26172 . 26184) (symbol 26091 . 26103) (symbol 26031 . 26043) (symbol 25971 . 25983) (symbol 25918 . 25930) (semantic-list 25898 . 25900) (semantic-list 25885 . 25887) (symbol 25815 . 25827) (symbol 25755 . 25767) (symbol 25679 . 25691) (symbol 25615 . 25627) (symbol 25539 . 25551) (symbol 25474 . 25486) (symbol 25406 . 25418) (symbol 23328 . 23340) (symbol 23229 . 23241) (symbol 23152 . 23164) (symbol 23105 . 23117) (symbol 22600 . 22612) (symbol 22521 . 22533) (symbol 22445 . 22457) (symbol 22382 . 22394) (symbol 22285 . 22297) (symbol 22204 . 22216) (symbol 22145 . 22157) (symbol 22080 . 22092) (symbol 22021 . 22033) (symbol 21959 . 21971) (symbol 21893 . 21905) (symbol 21820 . 21832) (symbol 21754 . 21766) (symbol 21695 . 21707) (symbol 21641 . 21653) (symbol 21584 . 21596) (symbol 21509 . 21521) (symbol 21436 . 21448) (symbol 21388 . 21400) (symbol 21312 . 21324) (symbol 21235 . 21247) (symbol 21166 . 21178) (symbol 21102 . 21114) (symbol 21042 . 21054) (semantic-list 21032 . 21034) (semantic-list 21012 . 21014) (symbol 20896 . 20908) (semantic-list 20886 . 20888) (symbol 20779 . 20791) (semantic-list 20769 . 20771) (semantic-list 20749 . 20751) (symbol 20647 . 20659) (semantic-list 20637 . 20639) (symbol 20544 . 20556) (semantic-list 20539 . 20541) (symbol 20469 . 20481) (symbol 20282 . 20294) (symbol 19995 . 20007) (symbol 19131 . 19150) (symbol 18799 . 18818) (symbol 18623 . 18635) (symbol 18563 . 18575) (symbol 18503 . 18515) (symbol 18447 . 18459) (symbol 18373 . 18385) (symbol 18309 . 18321) (symbol 18239 . 18251) (symbol 18179 . 18191) (symbol 18110 . 18122) (symbol 17930 . 17942) (semantic-list 17925 . 17927) (semantic-list 17911 . 17913) (symbol 17849 . 17861) (semantic-list 17844 . 17846) (semantic-list 17830 . 17832) (symbol 17766 . 17778) (semantic-list 17761 . 17763) (semantic-list 17747 . 17749) (symbol 17686 . 17698) (semantic-list 17681 . 17683) (semantic-list 17667 . 17669) (symbol 17604 . 17616) (symbol 17537 . 17549) (symbol 17469 . 17481) (symbol 17406 . 17418) (symbol 17341 . 17353) (symbol 17279 . 17291) (symbol 17215 . 17227) (symbol 17129 . 17141) (semantic-list 17113 . 17115) (semantic-list 17093 . 17095) (symbol 17013 . 17025) (symbol 16866 . 16885) (semantic-list 15991 . 15993) (semantic-list 15971 . 15973) (symbol 15898 . 15910) (symbol 15814 . 15826) (semantic-list 15808 . 15810) (symbol 15738 . 15750) (symbol 15663 . 15675) (symbol 15603 . 15615) (symbol 15548 . 15560) (symbol 15492 . 15504) (symbol 15433 . 15445) (symbol 15379 . 15391) (semantic-list 15373 . 15375) (semantic-list 15348 . 15350) (symbol 15294 . 15306) (semantic-list 15289 . 15291) (semantic-list 15264 . 15266) (symbol 15214 . 15226) (semantic-list 15209 . 15211) (symbol 15144 . 15156) (symbol 15096 . 15108) (semantic-list 15091 . 15093) (symbol 15028 . 15040) (semantic-list 15022 . 15024) (symbol 14937 . 14949) (semantic-list 14932 . 14934) (symbol 14851 . 14863) (semantic-list 14846 . 14848) (symbol 14743 . 14755) (semantic-list 14738 . 14740) (symbol 14639 . 14651) (semantic-list 14634 . 14636) (symbol 14512 . 14524) (semantic-list 14507 . 14509) (symbol 14389 . 14401) (semantic-list 14384 . 14386) (symbol 14243 . 14255) (semantic-list 14238 . 14240) (symbol 14101 . 14113) (semantic-list 14095 . 14097) (symbol 14014 . 14026) (semantic-list 14009 . 14011) (symbol 13932 . 13944) (semantic-list 13927 . 13929) (symbol 13828 . 13840) (semantic-list 13823 . 13825) (symbol 13728 . 13740) (semantic-list 13723 . 13725) (symbol 13605 . 13617) (semantic-list 13600 . 13602) (symbol 13486 . 13498) (semantic-list 13481 . 13483) (symbol 13344 . 13356) (semantic-list 13339 . 13341) (symbol 13206 . 13218) (symbol 13132 . 13144) (symbol 13054 . 13066) (symbol 12883 . 12902) (symbol 12815 . 12827) (symbol 12746 . 12758) (symbol 12686 . 12698) (symbol 12600 . 12612) (symbol 12512 . 12524) (semantic-list 12498 . 12500) (semantic-list 12481 . 12483) (semantic-list 12464 . 12466) (semantic-list 12438 . 12440) (semantic-list 12421 . 12423) (semantic-list 12404 . 12406) (symbol 12320 . 12332) (symbol 12246 . 12258) (symbol 12172 . 12184) (semantic-list 12142 . 12144) (symbol 12092 . 12104) (symbol 12036 . 12048) (symbol 11982 . 11994) (symbol 11942 . 11954) (semantic-list 11880 . 11882) (semantic-list 11860 . 11862) (symbol 11785 . 11797) (symbol 11725 . 11737) (symbol 11666 . 11678) (symbol 11528 . 11547) (symbol 10609 . 10621) (semantic-list 10604 . 10606) (symbol 10526 . 10538) (symbol 10467 . 10479) (symbol 10392 . 10404) (symbol 10343 . 10355) (symbol 10292 . 10304) (semantic-list 10287 . 10289) (semantic-list 10273 . 10275) (symbol 10205 . 10217) (semantic-list 10189 . 10191) (semantic-list 10169 . 10171) (symbol 10101 . 10113) (semantic-list 10080 . 10082) (semantic-list 10063 . 10065) (symbol 9986 . 9998) (semantic-list 9966 . 9968) (semantic-list 9949 . 9951) (symbol 9871 . 9883) (semantic-list 9850 . 9852) (symbol 9799 . 9811) (semantic-list 9783 . 9785) (symbol 9729 . 9741) (symbol 9654 . 9666) (symbol 9580 . 9592) (symbol 9510 . 9522) (symbol 9440 . 9452) (symbol 9361 . 9373) (symbol 9282 . 9294) (symbol 9205 . 9217) (symbol 9129 . 9141) (semantic-list 9124 . 9126) (symbol 9057 . 9069) (semantic-list 9052 . 9054) (semantic-list 9039 . 9041) (symbol 8982 . 8994) (semantic-list 8977 . 8979) (semantic-list 8964 . 8966) (symbol 8907 . 8919) (semantic-list 8902 . 8904) (symbol 8835 . 8847) (semantic-list 8830 . 8832) (symbol 8773 . 8785) (semantic-list 8768 . 8770) (symbol 8706 . 8718) (symbol 8654 . 8666) (symbol 8613 . 8625) (symbol 8572 . 8584) (symbol 8531 . 8543) (symbol 8486 . 8498) (symbol 8425 . 8437) (symbol 8377 . 8389) (symbol 8322 . 8334) (symbol 8251 . 8263) (symbol 8190 . 8202) (symbol 8131 . 8143) (symbol 8073 . 8085) (symbol 8012 . 8024) (symbol 7954 . 7966) (symbol 7864 . 7876) (symbol 7801 . 7813) (symbol 7743 . 7755) (semantic-list 7738 . 7740) (semantic-list 7732 . 7734) (symbol 7665 . 7677) (symbol 7594 . 7606) (symbol 7536 . 7548) (symbol 7490 . 7502) (symbol 7446 . 7458) (symbol 7393 . 7405) (symbol 7334 . 7346) (symbol 7288 . 7300) (symbol 7233 . 7245) (symbol 7170 . 7182) (symbol 7107 . 7119) (symbol 7053 . 7065) (symbol 6994 . 7006) (symbol 6910 . 6922) (symbol 6847 . 6859) (symbol 5493 . 5505) (symbol 5193 . 5205) (symbol 5135 . 5147) (semantic-list 5130 . 5132) (semantic-list 5116 . 5118) (symbol 5057 . 5069) (semantic-list 5052 . 5054) (semantic-list 5038 . 5040) (symbol 4980 . 4992) (symbol 4921 . 4933) (symbol 4857 . 4869) (symbol 4799 . 4811) (symbol 4725 . 4737) (symbol 4660 . 4672) (semantic-list 4654 . 4656) (symbol 4591 . 4603) (semantic-list 4586 . 4588) (symbol 4521 . 4533) (semantic-list 4516 . 4518) (symbol 4454 . 4466) (symbol 4405 . 4417) (symbol 4359 . 4371) (symbol 4316 . 4328) (symbol 4162 . 4181) (symbol 4110 . 4122) (symbol 4032 . 4044) (semantic-list 4022 . 4024) (symbol 3919 . 3931) (semantic-list 3909 . 3911) (symbol 3815 . 3827) (symbol 3740 . 3752) (symbol 3674 . 3686) (symbol 3620 . 3632) (symbol 3565 . 3577) (symbol 3509 . 3521) (symbol 3460 . 3472) (symbol 3421 . 3433))
      :lexical-table 
        '(("VECMPI" . ((string "\"mpi\"" 2735 . 2740)))
          ("VECSEQCUSP" . ((string "\"seqcusp\"" 2876 . 2885)))
          ("NORM_MAX" . ((symbol "NORM_INFINITY" 5554 . 5567)))
          ("VECVIENNACL" . ((string "\"viennacl\"" 3104 . 3114)))
          ("VECCUSP" . ((string "\"cusp\"" 2942 . 2948)))
          ("VecLockPush" (spp-arg-list ("x") 19917 . 19920) . ((number "0" 19928 . 19929)))
          ("VECSEQ" . ((string "\"seq\"" 2706 . 2711)))
          ("VECNEST" . ((string "\"nest\"" 3354 . 3360)))
          ("VECMPICUSP" . ((string "\"mpicusp\"" 2909 . 2918)))
          ("VECSEQCUDA" . ((string "\"seqcuda\"" 3200 . 3209)))
          ("VecLocked" (spp-arg-list ("x" "arg") 19979 . 19986))
          ("VECSTANDARD" . ((string "\"standard\"" 2764 . 2774)))
          ("VECMPIVIENNACL" . ((string "\"mpiviennacl\"" 3067 . 3080)))
          ("VECCUDA" . ((string "\"cuda\"" 3266 . 3272)))
          ("VecLockGet" (spp-arg-list ("x" "arg") 19875 . 19882) . 
              ((punctuation "*" 19887 . 19888) (semantic-list "(arg)" 19888 . 19893) (punctuation "=" 19894 . 19895) (number "0" 19896 . 19897)))
          ("VECSHARED" . ((string "\"shared\"" 2844 . 2852)))
          ("VECSEQVIENNACL" . ((string "\"seqviennacl\"" 3030 . 3043)))
          ("VECMPICUDA" . ((string "\"mpicuda\"" 3233 . 3242)))
          ("__PETSCVEC_H")
          ("VecLockPop" (spp-arg-list ("x") 19948 . 19951) . ((number "0" 19960 . 19961)))
          ("VEC_FILE_CLASSID" . ((number "1211214" 3413 . 3420)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_PETSCDMTYPES_H" variable (:constant-flag t) nil [39 54])
            ("DM" type
               (:typedef ("_p_DM" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [410 435])
            ("DMBoundaryType" type
               (:typedef ("" type
                     (:members 
                        ( ("DM_BOUNDARY_NONE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [1322 1339])
                          ("DM_BOUNDARY_GHOSTED" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [1340 1360])
                          ("DM_BOUNDARY_MIRROR" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [1361 1380])
                          ("DM_BOUNDARY_PERIODIC" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [1381 1402])
                          ("DM_BOUNDARY_TWIST" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [1403 1421]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [1308 1437])
            ("PetscPartitioner" type
               (:typedef ("_p_PetscPartitioner" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [1651 1704]))          
      :file "petscdmtypes.h"
      :pointmax 1713
      :fsize 1712
      :lastmodtime '(22329 14111 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_PETSCDMTYPES_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__PETSCIS_H" variable (:constant-flag t) nil [161 172])
            ("petscsys.h" include (:system-flag t) nil [173 194])
            ("petscsftypes.h" include (:system-flag t) nil [195 220])
            ("petscistypes.h" include (:system-flag t) nil [221 246])
            ("IS_FILE_CLASSID" variable (:constant-flag t) nil [256 271])
            ("IS_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [293 317])
            ("ISInitializePackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [367 372]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [332 373])
            ("ISType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [516 543])
            ("ISGENERAL" variable (:constant-flag t) nil [552 561])
            ("ISSTRIDE" variable (:constant-flag t) nil [585 593])
            ("ISBLOCK" variable (:constant-flag t) nil [617 624])
            ("ISList" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) nil [699 724])
            ("ISSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [763 766])
                    ("" variable (:type ("ISType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [767 774]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [738 775])
            ("ISGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [814 817])
                    ("" variable
                       (:pointer 1
                        :type ("ISType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [818 827]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [789 828])
            ("ISRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [868 880])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [900 903]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [842 905])
            ("ISCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [943 952])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [952 956]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [919 957])
            ("ISCreateGeneral" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1068 1077])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1077 1086])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1086 1102])
                    ("" variable (:type ("PetscCopyMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1103 1117])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1117 1122]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1037 1123])
            ("ISGeneralSetIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1172 1175])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1175 1184])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1184 1200])
                    ("" variable (:type ("PetscCopyMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1201 1215]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1137 1216])
            ("ISCreateBlock" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1259 1268])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1268 1277])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1277 1286])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1286 1302])
                    ("" variable (:type ("PetscCopyMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1303 1317])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1317 1322]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1230 1323])
            ("ISBlockSetIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1370 1373])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1373 1382])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1382 1391])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1391 1407])
                    ("" variable (:type ("PetscCopyMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1408 1422]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1337 1423])
            ("ISCreateStride" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1467 1476])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1476 1485])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1485 1494])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1494 1503])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1503 1508]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1437 1509])
            ("ISStrideSetStride" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1556 1559])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1559 1568])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1568 1577])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1577 1586]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1523 1587])
            ("ISDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1627 1631]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1602 1632])
            ("ISSetPermutation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1678 1681]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1646 1682])
            ("ISPermutation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1725 1728])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1728 1740]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1696 1741])
            ("ISSetIdentity" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1784 1787]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1755 1788])
            ("ISIdentity" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1828 1831])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1831 1843]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1802 1844])
            ("ISContiguousLocal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1891 1894])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1894 1903])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1903 1912])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1912 1922])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1922 1933]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1858 1934])
            ("ISGetIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1977 1980])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1980 1998]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1949 2000])
            ("ISRestoreIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2046 2049])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2049 2067]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2014 2069])
            ("ISGetTotalIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2116 2119])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2119 2137]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2083 2139])
            ("ISRestoreTotalIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2190 2193])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2193 2211]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2153 2213])
            ("ISGetNonlocalIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2263 2266])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2266 2284]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2227 2286])
            ("ISRestoreNonlocalIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2340 2343])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2343 2361]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2300 2363])
            ("ISGetNonlocalIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2408 2411])
                    ("is" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2412 2419]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2377 2420])
            ("ISRestoreNonlocalIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2469 2472])
                    ("is" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2473 2480]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2434 2481])
            ("ISGetSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2520 2523])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2523 2534]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2495 2535])
            ("ISGetLocalSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2579 2582])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2582 2593]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2549 2594])
            ("ISInvertPermutation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2643 2646])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2646 2655])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2655 2659]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2608 2660])
            ("ISView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2696 2699])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2699 2711]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2674 2712])
            ("ISViewFromOptions" function
               (:arguments 
                  ( ("A" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2766 2771])
                    ("obj" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2771 2787])
                    ("name" variable
                       (:dereference 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2787 2805]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2733 2867])
            ("ISLoad" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2903 2906])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2906 2918]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2881 2919])
            ("ISEqual" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2956 2959])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2959 2962])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2962 2975]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2933 2976])
            ("ISSort" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3012 3015]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2990 3016])
            ("ISSortRemoveDups" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3062 3065]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3030 3066])
            ("ISSorted" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3104 3107])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3107 3120]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3080 3121])
            ("ISDifference" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3163 3166])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3166 3169])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3169 3173]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3135 3174])
            ("ISSum" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3209 3212])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3212 3215])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3215 3219]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3188 3220])
            ("ISExpand" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3258 3261])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3261 3264])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3264 3268]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3234 3269])
            ("ISGetMinMax" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3310 3313])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3313 3323])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3323 3333]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3283 3334])
            ("ISBlockGetIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3382 3385])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3385 3403]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3349 3405])
            ("ISBlockRestoreIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3456 3459])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3459 3477]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3419 3479])
            ("ISBlockGetLocalSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3528 3531])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3531 3542]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3493 3543])
            ("ISBlockGetSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3587 3590])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3590 3601]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3557 3602])
            ("ISGetBlockSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3646 3649])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3649 3659]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3616 3660])
            ("ISSetBlockSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3704 3707])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3707 3716]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3674 3717])
            ("ISStrideGetInfo" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3763 3766])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3766 3777])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3777 3787]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3732 3788])
            ("ISToGeneral" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3830 3833]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3803 3834])
            ("ISDuplicate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3876 3879])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3879 3883]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3849 3884])
            ("ISCopy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3920 3923])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3923 3926]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3898 3927])
            ("ISAllGather" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3968 3971])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3971 3975]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3941 3976])
            ("ISComplement" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4018 4021])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4021 4030])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4030 4039])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4039 4043]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3990 4044])
            ("ISConcatenate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4087 4096])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4096 4105])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4105 4115])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4116 4120]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4058 4121])
            ("ISListToPair" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4163 4172])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4172 4181])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4182 4186])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4187 4191])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4191 4195]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4135 4196])
            ("ISPairToList" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4238 4241])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4241 4244])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4244 4254])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4255 4261]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4210 4263])
            ("ISEmbed" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4300 4303])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4303 4306])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4306 4316])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4316 4320]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4277 4321])
            ("ISSortPermutation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4368 4371])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4371 4381])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4381 4385]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4335 4386])
            ("ISOnComm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4424 4427])
                    ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4427 4436])
                    ("" variable (:type ("PetscCopyMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4436 4450])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4450 4454]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4400 4455])
            ("IS_LTOGM_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [4550 4580])
            ("ISGlobalToLocalMappingType" type
               (:typedef ("" type
                     (:members 
                        ( ("IS_GTOLM_MASK" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4862 4876])
                          ("IS_GTOLM_DROP" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4876 4890]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [4848 4918])
            ("ISLocalToGlobalMappingCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4977 4986])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4986 4995])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4995 5004])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5004 5020])
                    ("" variable (:type ("PetscCopyMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5021 5035])
                    ("" variable
                       (:pointer 1
                        :type ("ISLocalToGlobalMapping" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5035 5059]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4933 5060])
            ("ISLocalToGlobalMappingCreateIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5120 5123])
                    ("" variable
                       (:pointer 1
                        :type ("ISLocalToGlobalMapping" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5123 5148]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5074 5149])
            ("ISLocalToGlobalMappingCreateSF" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5209 5217])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5217 5226])
                    ("" variable
                       (:pointer 1
                        :type ("ISLocalToGlobalMapping" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5226 5250]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5163 5251])
            ("ISLocalToGlobalMappingView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5307 5330])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5330 5342]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5265 5343])
            ("ISLocalToGlobalMappingDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("ISLocalToGlobalMapping" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5402 5426]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5357 5427])
            ("ISLocalToGlobalMappingApply" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5484 5507])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5507 5516])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5516 5532])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5533 5543]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5441 5545])
            ("ISLocalToGlobalMappingApplyBlock" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5607 5630])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5630 5639])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5639 5655])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5656 5666]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5559 5668])
            ("ISLocalToGlobalMappingApplyIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5727 5750])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5750 5753])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5753 5757]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5682 5758])
            ("ISGlobalToLocalMappingApply" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5815 5838])
                    ("" variable (:type ("ISGlobalToLocalMappingType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5838 5865])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5865 5874])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5874 5890])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5891 5901])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5901 5911]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5772 5913])
            ("ISGlobalToLocalMappingApplyBlock" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5975 5998])
                    ("" variable (:type ("ISGlobalToLocalMappingType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5998 6025])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6025 6034])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6034 6050])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6051 6061])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6061 6071]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5927 6073])
            ("ISGlobalToLocalMappingApplyIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6132 6155])
                    ("" variable (:type ("ISGlobalToLocalMappingType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6155 6182])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6182 6185])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6185 6189]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6087 6190])
            ("ISLocalToGlobalMappingGetSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6249 6272])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6272 6282]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6204 6283])
            ("ISLocalToGlobalMappingGetInfo" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6342 6365])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6365 6375])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6375 6386])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6387 6398])
                    ("" variable
                       (:pointer 2
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6399 6411]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6297 6413])
            ("ISLocalToGlobalMappingRestoreInfo" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6476 6499])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6499 6509])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6509 6520])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6521 6532])
                    ("" variable
                       (:pointer 2
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6533 6545]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6427 6547])
            ("ISLocalToGlobalMappingGetBlockInfo" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6611 6634])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6634 6644])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6644 6655])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6656 6667])
                    ("" variable
                       (:pointer 2
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6668 6680]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6561 6682])
            ("ISLocalToGlobalMappingRestoreBlockInfo" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6750 6773])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6773 6783])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6783 6794])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6795 6806])
                    ("" variable
                       (:pointer 2
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6807 6819]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6696 6821])
            ("ISLocalToGlobalMappingGetIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6883 6906])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6906 6923]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6835 6924])
            ("ISLocalToGlobalMappingRestoreIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6990 7013])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7013 7030]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6938 7031])
            ("ISLocalToGlobalMappingGetBlockIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7098 7121])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7121 7138]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7045 7139])
            ("ISLocalToGlobalMappingRestoreBlockIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7210 7233])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7233 7250]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7153 7251])
            ("ISLocalToGlobalMappingConcatenate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7314 7323])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7323 7332])
                    ("" variable
                       (:constant-flag t
                        :type ("ISLocalToGlobalMapping" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7332 7362])
                    ("" variable
                       (:pointer 1
                        :type ("ISLocalToGlobalMapping" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7363 7387]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7265 7388])
            ("ISG2LMapApply" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7431 7454])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7454 7463])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7463 7479])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7480 7490]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7402 7492])
            ("ISLocalToGlobalMappingGetBlockSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7556 7579])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7579 7589]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7506 7590])
            ("ISColoringType" type
               (:typedef ("" type
                     (:members 
                        ( ("IS_COLORING_GLOBAL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [8647 8666])
                          ("IS_COLORING_GHOSTED" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [8666 8686]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [8633 8702])
            ("ISColoringTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [8716 8752])
            ("ISColoringValue" variable (:type ((((0) "PETSC_IS_COLOR_VALUE_TYPE")) type (:superclasses ("unsigned int") :type "typedef") nil nil)) nil [8753 8812])
            ("ISAllGatherColors" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8859 8868])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8868 8877])
                    ("" variable
                       (:pointer 1
                        :type ("ISColoringValue" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8877 8894])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8894 8904])
                    ("" variable
                       (:pointer 1
                        :type ("ISColoringValue" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8904 8922]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8826 8924])
            ("ISColoringCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8971 8980])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8980 8989])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8989 8998])
                    ("" variable
                       (:constant-flag t
                        :type ("ISColoringValue" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8998 9021])
                    ("" variable (:type ("PetscCopyMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9022 9036])
                    ("" variable
                       (:pointer 1
                        :type ("ISColoring" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9036 9048]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8939 9049])
            ("ISColoringDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("ISColoring" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9096 9108]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9063 9109])
            ("ISColoringView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9153 9164])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9164 9176]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9123 9177])
            ("ISColoringViewFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9232 9243])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9243 9255])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [9255 9267]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9191 9269])
            ("ISColoringGetIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9314 9325])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9325 9335])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9335 9340]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9283 9342])
            ("ISColoringRestoreIS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9391 9402])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9402 9407]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9356 9409])
            ("ISColoringReference" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9458 9469]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9423 9470])
            ("ISColoringSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ISColoring" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9517 9528])
                    ("" variable (:type ("ISColoringType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9528 9543]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9484 9544])
            ("ISBuildTwoSided" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9671 9674])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9674 9677])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9677 9681]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9640 9682])
            ("ISPartitioningToNumbering" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9737 9740])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9740 9744]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9696 9745])
            ("ISPartitioningCount" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9794 9797])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9797 9806])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9806 9816]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9759 9818])
            ("ISCompressIndicesGeneral" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9873 9882])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9882 9891])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9891 9900])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9900 9909])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9909 9919])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9920 9924]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9833 9926])
            ("ISCompressIndicesSorted" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9979 9988])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9988 9997])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9997 10006])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10006 10016])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10017 10021]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9940 10023])
            ("ISExpandIndicesGeneral" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10075 10084])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10084 10093])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10093 10102])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10102 10111])
                    ("" variable
                       (:constant-flag t
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10111 10121])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10122 10126]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10037 10128])
            ("_n_PetscLayout" type
               (:members 
                  ( ("comm" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10156 10184])
                    ("n" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10187 10214])
                    ("N" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10187 10214])
                    ("rstart" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10257 10292])
                    ("rend" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10257 10292])
                    ("range" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10328 10358])
                    ("bs" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10401 10427])
                    ("refcnt" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10815 10845])
                    ("mapping" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10948 10979]))                  
                :type "struct")
                nil [10131 11032])
            ("__FUNCT__" variable (:constant-flag t) nil [11059 11068])
            ("PetscLayoutFindOwner" function
               (:arguments 
                  ( ("map" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11460 11476])
                    ("idx" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11476 11489])
                    ("owner" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11489 11505]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11424 12196])
            ("__FUNCT__" variable (:constant-flag t) nil [12223 12232])
            ("PetscLayoutFindOwnerIndex" function
               (:arguments 
                  ( ("map" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12714 12730])
                    ("idx" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12730 12743])
                    ("owner" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12743 12759])
                    ("lidx" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12760 12775]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12673 13395])
            ("PetscLayoutCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13443 13452])
                    ("" variable
                       (:pointer 1
                        :type ("PetscLayout" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13452 13465]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13410 13466])
            ("PetscLayoutSetUp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13512 13524]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13480 13525])
            ("PetscLayoutDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscLayout" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13573 13586]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13539 13587])
            ("PetscLayoutDuplicate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13637 13649])
                    ("" variable
                       (:pointer 1
                        :type ("PetscLayout" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13649 13662]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13601 13663])
            ("PetscLayoutReference" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13713 13725])
                    ("" variable
                       (:pointer 1
                        :type ("PetscLayout" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13725 13738]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13677 13739])
            ("PetscLayoutSetLocalSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13792 13804])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13804 13813]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13753 13814])
            ("PetscLayoutGetLocalSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13867 13879])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13879 13890]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13828 13891])
            ("PetscLayoutSetSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13939 13951])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13951 13960]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13905 13961])
            ("PetscLayoutGetSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14009 14021])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14021 14032]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [13975 14033])
            ("PetscLayoutSetBlockSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14086 14098])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14098 14107]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14047 14108])
            ("PetscLayoutGetBlockSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14161 14173])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14173 14183]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14122 14184])
            ("PetscLayoutGetRange" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14233 14245])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14245 14256])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14256 14267]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14198 14268])
            ("PetscLayoutGetRanges" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14318 14330])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14330 14348]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14282 14350])
            ("PetscLayoutSetISLocalToGlobalMapping" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14416 14428])
                    ("" variable (:type ("ISLocalToGlobalMapping" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14428 14451]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14364 14452])
            ("PetscSFSetGraphLayout" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14503 14511])
                    ("" variable (:type ("PetscLayout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14511 14523])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14523 14532])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14532 14548])
                    ("" variable (:type ("PetscCopyMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14548 14562])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14562 14578]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14466 14579])
            ("PETSC_SECTION_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [14594 14629])
            ("PetscSectionCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14678 14687])
                    ("" variable
                       (:pointer 1
                        :type ("PetscSection" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14687 14701]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14644 14702])
            ("PetscSectionClone" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14749 14762])
                    ("" variable
                       (:pointer 1
                        :type ("PetscSection" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14763 14777]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14716 14778])
            ("PetscSectionCopy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14824 14837])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14838 14851]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14792 14852])
            ("PetscSectionGetNumFields" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14906 14919])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14920 14931]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14866 14932])
            ("PetscSectionSetNumFields" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14986 14999])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15000 15009]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14946 15010])
            ("PetscSectionGetFieldName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15064 15077])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15078 15087])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15088 15102]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15024 15104])
            ("PetscSectionSetFieldName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15158 15171])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15172 15181])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15182 15195]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15118 15197])
            ("PetscSectionGetFieldComponents" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15257 15270])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15271 15280])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15281 15292]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15211 15293])
            ("PetscSectionSetFieldComponents" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15353 15366])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15367 15376])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15377 15386]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15307 15387])
            ("PetscSectionGetChart" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15437 15450])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15451 15462])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15463 15474]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15401 15475])
            ("PetscSectionSetChart" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15525 15538])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15539 15548])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15549 15558]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15489 15559])
            ("PetscSectionGetPermutation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15615 15628])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15629 15634]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15573 15635])
            ("PetscSectionSetPermutation" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15691 15704])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15705 15708]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15649 15709])
            ("PetscSectionGetDof" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15757 15770])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15771 15780])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15781 15791]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15723 15792])
            ("PetscSectionSetDof" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15840 15853])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15854 15863])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15864 15873]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15806 15874])
            ("PetscSectionAddDof" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15922 15935])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15936 15945])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15946 15955]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15888 15956])
            ("PetscSectionGetFieldDof" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16009 16022])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16023 16032])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16033 16042])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16043 16053]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15970 16054])
            ("PetscSectionSetFieldDof" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16107 16120])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16121 16130])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16131 16140])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16141 16150]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16068 16151])
            ("PetscSectionAddFieldDof" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16204 16217])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16218 16227])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16228 16237])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16238 16247]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16165 16248])
            ("PetscSectionHasConstraints" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16304 16317])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16318 16330]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16262 16331])
            ("PetscSectionGetConstraintDof" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16389 16402])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16403 16412])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16413 16423]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16345 16424])
            ("PetscSectionSetConstraintDof" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16482 16495])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16496 16505])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16506 16515]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16438 16516])
            ("PetscSectionAddConstraintDof" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16574 16587])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16588 16597])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16598 16607]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16530 16608])
            ("PetscSectionGetFieldConstraintDof" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16671 16684])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16685 16694])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16695 16704])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16705 16715]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16622 16716])
            ("PetscSectionSetFieldConstraintDof" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16779 16792])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16793 16802])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16803 16812])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16813 16822]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16730 16823])
            ("PetscSectionAddFieldConstraintDof" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16886 16899])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16900 16909])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16910 16919])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16920 16929]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16837 16930])
            ("PetscSectionGetConstraintIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16992 17005])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17006 17015])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17016 17033]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16944 17034])
            ("PetscSectionSetConstraintIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17096 17109])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17110 17119])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17120 17136]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17048 17137])
            ("PetscSectionGetFieldConstraintIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17204 17217])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17218 17227])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17228 17237])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17238 17255]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17151 17256])
            ("PetscSectionSetFieldConstraintIndices" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17323 17336])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17337 17346])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17347 17356])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17357 17373]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17270 17374])
            ("PetscSectionSetUpBC" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17423 17436]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17388 17437])
            ("PetscSectionSetUp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17484 17497]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17451 17498])
            ("PetscSectionGetMaxDof" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17549 17562])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17563 17573]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17512 17574])
            ("PetscSectionGetStorageSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17630 17643])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17644 17654]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17588 17655])
            ("PetscSectionGetConstrainedStorageSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17722 17735])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17736 17746]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17669 17747])
            ("PetscSectionGetOffset" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17798 17811])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17812 17821])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17822 17832]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17761 17833])
            ("PetscSectionSetOffset" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17884 17897])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17898 17907])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17908 17917]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17847 17918])
            ("PetscSectionGetFieldOffset" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17974 17987])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17988 17997])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17998 18007])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18008 18018]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17932 18019])
            ("PetscSectionSetFieldOffset" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18075 18088])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18089 18098])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18099 18108])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18109 18118]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18033 18119])
            ("PetscSectionGetOffsetRange" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18175 18188])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18189 18200])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18201 18212]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18133 18213])
            ("PetscSectionView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18259 18272])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18273 18285]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18227 18286])
            ("PetscSectionViewFromOptions" function
               (:arguments 
                  ( ("A" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18350 18365])
                    ("obj" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18365 18381])
                    ("name" variable
                       (:dereference 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [18381 18399]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18307 18461])
            ("PetscSectionReset" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18508 18521]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18475 18522])
            ("PetscSectionDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscSection" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18571 18585]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18536 18586])
            ("PetscSectionCreateGlobalSection" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18647 18660])
                    ("" variable (:type ("PetscSF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18661 18669])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18670 18680])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18681 18691])
                    ("" variable
                       (:pointer 1
                        :type ("PetscSection" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18692 18707]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18600 18708])
            ("PetscSectionCreateGlobalSectionCensored" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18777 18790])
                    ("" variable (:type ("PetscSF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18791 18799])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18800 18810])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18811 18820])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18821 18838])
                    ("" variable
                       (:pointer 1
                        :type ("PetscSection" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18840 18855]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18722 18856])
            ("PetscSectionCreateSubsection" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18914 18927])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18928 18937])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18938 18949])
                    ("" variable
                       (:pointer 1
                        :type ("PetscSection" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18951 18966]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18870 18967])
            ("PetscSectionCreateSubmeshSection" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19029 19042])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19043 19046])
                    ("" variable
                       (:pointer 1
                        :type ("PetscSection" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19047 19062]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18981 19063])
            ("PetscSectionGetPointLayout" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19119 19128])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19129 19142])
                    ("" variable
                       (:pointer 1
                        :type ("PetscLayout" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19143 19157]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19077 19158])
            ("PetscSectionGetValueLayout" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19214 19223])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19224 19237])
                    ("" variable
                       (:pointer 1
                        :type ("PetscLayout" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19238 19252]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19172 19253])
            ("PetscSectionPermute" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19302 19315])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19316 19319])
                    ("" variable
                       (:pointer 1
                        :type ("PetscSection" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19320 19335]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19267 19336])
            ("PetscSectionGetField" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19386 19399])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19400 19409])
                    ("" variable
                       (:pointer 1
                        :type ("PetscSection" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19410 19425]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19350 19426])
            ("PetscSectionSetClosureIndex" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19484 19497])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19498 19510])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19511 19524])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19525 19528]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19441 19529])
            ("PetscSectionGetClosureIndex" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19586 19599])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19600 19612])
                    ("" variable
                       (:pointer 1
                        :type ("PetscSection" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19613 19628])
                    ("" variable
                       (:pointer 1
                        :type ("IS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19629 19634]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19543 19635])
            ("PetscSFConvertPartition" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19711 19719])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19720 19733])
                    ("" variable (:type ("IS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19734 19737])
                    ("" variable
                       (:pointer 1
                        :type ("ISLocalToGlobalMapping" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19738 19763])
                    ("" variable
                       (:pointer 1
                        :type ("PetscSF" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19764 19774]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19672 19775])
            ("PetscSFCreateRemoteOffsets" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19831 19839])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19840 19853])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19854 19867])
                    ("" variable
                       (:pointer 2
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19868 19880]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19789 19881])
            ("PetscSFDistributeSection" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19935 19943])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19944 19957])
                    ("" variable
                       (:pointer 2
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19958 19970])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19971 19984]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19895 19985])
            ("PetscSFCreateSectionSF" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscSF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20037 20045])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20046 20059])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20060 20071])
                    ("" variable (:type ("PetscSection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20073 20086])
                    ("" variable
                       (:pointer 1
                        :type ("PetscSF" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20087 20097]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [19999 20098])
            ("__FUNCT__" variable (:constant-flag t) nil [20196 20205]))          
      :file "petscis.h"
      :pointmax 20239
      :fsize 20238
      :lastmodtime '(22329 14111 0 0)
      :unmatched-syntax '((semantic-list 20069 . 20071) (symbol 19986 . 19998) (symbol 19882 . 19894) (symbol 19776 . 19788) (symbol 19659 . 19671) (symbol 19530 . 19542) (symbol 19428 . 19440) (symbol 19337 . 19349) (symbol 19254 . 19266) (symbol 19159 . 19171) (symbol 19064 . 19076) (symbol 18968 . 18980) (semantic-list 18947 . 18949) (symbol 18857 . 18869) (semantic-list 18836 . 18838) (symbol 18709 . 18721) (symbol 18587 . 18599) (symbol 18523 . 18535) (symbol 18462 . 18474) (symbol 18287 . 18306) (symbol 18214 . 18226) (symbol 18120 . 18132) (symbol 18020 . 18032) (symbol 17919 . 17931) (symbol 17834 . 17846) (symbol 17748 . 17760) (symbol 17656 . 17668) (symbol 17575 . 17587) (symbol 17499 . 17511) (symbol 17438 . 17450) (symbol 17375 . 17387) (symbol 17257 . 17269) (symbol 17138 . 17150) (symbol 17035 . 17047) (symbol 16931 . 16943) (symbol 16824 . 16836) (symbol 16717 . 16729) (symbol 16609 . 16621) (symbol 16517 . 16529) (symbol 16425 . 16437) (symbol 16332 . 16344) (symbol 16249 . 16261) (symbol 16152 . 16164) (symbol 16055 . 16067) (symbol 15957 . 15969) (symbol 15875 . 15887) (symbol 15793 . 15805) (symbol 15710 . 15722) (symbol 15636 . 15648) (symbol 15560 . 15572) (symbol 15476 . 15488) (symbol 15388 . 15400) (symbol 15294 . 15306) (symbol 15198 . 15210) (semantic-list 15193 . 15195) (symbol 15105 . 15117) (semantic-list 15100 . 15102) (symbol 15011 . 15023) (symbol 14933 . 14945) (symbol 14853 . 14865) (symbol 14779 . 14791) (symbol 14703 . 14715) (symbol 14631 . 14643) (symbol 14581 . 14593) (symbol 14453 . 14465) (symbol 14351 . 14363) (semantic-list 14346 . 14348) (symbol 14269 . 14281) (symbol 14185 . 14197) (symbol 14109 . 14121) (symbol 14034 . 14046) (symbol 13962 . 13974) (symbol 13892 . 13904) (symbol 13815 . 13827) (symbol 13740 . 13752) (symbol 13664 . 13676) (symbol 13588 . 13600) (symbol 13526 . 13538) (symbol 13467 . 13479) (symbol 13397 . 13409) (symbol 12653 . 12672) (symbol 11404 . 11423) (semantic-list 10124 . 10126) (semantic-list 10119 . 10121) (symbol 10024 . 10036) (semantic-list 10019 . 10021) (semantic-list 10014 . 10016) (symbol 9927 . 9939) (semantic-list 9922 . 9924) (semantic-list 9917 . 9919) (symbol 9820 . 9832) (semantic-list 9814 . 9816) (symbol 9746 . 9758) (symbol 9683 . 9695) (symbol 9627 . 9639) (symbol 9471 . 9483) (symbol 9410 . 9422) (semantic-list 9405 . 9407) (symbol 9343 . 9355) (semantic-list 9338 . 9340) (symbol 9270 . 9282) (semantic-list 9265 . 9267) (symbol 9178 . 9190) (symbol 9110 . 9122) (symbol 9050 . 9062) (semantic-list 9019 . 9021) (symbol 8926 . 8938) (semantic-list 8920 . 8922) (symbol 8813 . 8825) (symbol 8703 . 8715) (symbol 7493 . 7505) (semantic-list 7488 . 7490) (semantic-list 7477 . 7479) (symbol 7389 . 7401) (semantic-list 7360 . 7362) (symbol 7252 . 7264) (symbol 7140 . 7152) (symbol 7032 . 7044) (symbol 6925 . 6937) (symbol 6822 . 6834) (semantic-list 6817 . 6819) (semantic-list 6804 . 6806) (semantic-list 6792 . 6794) (symbol 6683 . 6695) (semantic-list 6678 . 6680) (semantic-list 6665 . 6667) (semantic-list 6653 . 6655) (symbol 6548 . 6560) (semantic-list 6543 . 6545) (semantic-list 6530 . 6532) (semantic-list 6518 . 6520) (symbol 6414 . 6426) (semantic-list 6409 . 6411) (semantic-list 6396 . 6398) (semantic-list 6384 . 6386) (symbol 6284 . 6296) (symbol 6191 . 6203) (symbol 6074 . 6086) (semantic-list 6069 . 6071) (semantic-list 6048 . 6050) (symbol 5914 . 5926) (semantic-list 5909 . 5911) (semantic-list 5888 . 5890) (symbol 5759 . 5771) (symbol 5669 . 5681) (semantic-list 5664 . 5666) (semantic-list 5653 . 5655) (symbol 5546 . 5558) (semantic-list 5541 . 5543) (semantic-list 5530 . 5532) (symbol 5428 . 5440) (symbol 5344 . 5356) (symbol 5252 . 5264) (symbol 5150 . 5162) (symbol 5061 . 5073) (semantic-list 5018 . 5020) (symbol 4920 . 4932) (symbol 4537 . 4549) (symbol 4387 . 4399) (symbol 4322 . 4334) (symbol 4264 . 4276) (semantic-list 4259 . 4261) (symbol 4197 . 4209) (semantic-list 4184 . 4186) (symbol 4122 . 4134) (semantic-list 4113 . 4115) (symbol 4045 . 4057) (symbol 3977 . 3989) (symbol 3928 . 3940) (symbol 3885 . 3897) (symbol 3836 . 3848) (symbol 3790 . 3802) (symbol 3719 . 3731) (symbol 3661 . 3673) (symbol 3603 . 3615) (symbol 3544 . 3556) (symbol 3480 . 3492) (semantic-list 3475 . 3477) (symbol 3406 . 3418) (semantic-list 3401 . 3403) (symbol 3336 . 3348) (symbol 3270 . 3282) (symbol 3221 . 3233) (symbol 3175 . 3187) (symbol 3122 . 3134) (symbol 3067 . 3079) (symbol 3017 . 3029) (symbol 2977 . 2989) (symbol 2920 . 2932) (symbol 2868 . 2880) (symbol 2713 . 2732) (symbol 2661 . 2673) (symbol 2595 . 2607) (symbol 2536 . 2548) (symbol 2482 . 2494) (symbol 2421 . 2433) (symbol 2364 . 2376) (semantic-list 2359 . 2361) (symbol 2287 . 2299) (semantic-list 2282 . 2284) (symbol 2214 . 2226) (semantic-list 2209 . 2211) (symbol 2140 . 2152) (semantic-list 2135 . 2137) (symbol 2070 . 2082) (semantic-list 2065 . 2067) (symbol 2001 . 2013) (semantic-list 1996 . 1998) (symbol 1936 . 1948) (symbol 1845 . 1857) (symbol 1789 . 1801) (symbol 1742 . 1754) (symbol 1683 . 1695) (symbol 1633 . 1645) (symbol 1589 . 1601) (symbol 1510 . 1522) (symbol 1424 . 1436) (semantic-list 1405 . 1407) (symbol 1324 . 1336) (semantic-list 1300 . 1302) (symbol 1217 . 1229) (semantic-list 1198 . 1200) (symbol 1124 . 1136) (semantic-list 1100 . 1102) (symbol 1024 . 1036) (symbol 906 . 918) (semantic-list 878 . 880) (symbol 829 . 841) (symbol 776 . 788) (symbol 725 . 737) (symbol 686 . 698) (symbol 319 . 331) (symbol 280 . 292))
      :lexical-table 
        '(("ISBLOCK" . ((string "\"block\"" 632 . 639)))
          ("__PETSCIS_H")
          ("__FUNCT__" . ((string "\"User provided function\"" 20206 . 20230)))
          ("IS_FILE_CLASSID" . ((number "1211218" 272 . 279)))
          ("ISGENERAL" . ((string "\"general\"" 567 . 576)))
          ("ISSTRIDE" . ((string "\"stride\"" 600 . 608)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__PETSCVIEWER_H" variable (:constant-flag t) nil [124 139])
            ("petscsys.h" include (:system-flag t) nil [141 162])
            ("petscviewertypes.h" include (:system-flag t) nil [163 192])
            ("PETSC_VIEWER_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [207 241])
            ("PetscViewerType" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [426 462])
            ("PETSCVIEWERSOCKET" variable (:constant-flag t) nil [471 488])
            ("PETSCVIEWERASCII" variable (:constant-flag t) nil [512 528])
            ("PETSCVIEWERBINARY" variable (:constant-flag t) nil [552 569])
            ("PETSCVIEWERSTRING" variable (:constant-flag t) nil [593 610])
            ("PETSCVIEWERDRAW" variable (:constant-flag t) nil [634 649])
            ("PETSCVIEWERVU" variable (:constant-flag t) nil [673 686])
            ("PETSCVIEWERMATHEMATICA" variable (:constant-flag t) nil [710 732])
            ("PETSCVIEWERNETCDF" variable (:constant-flag t) nil [756 773])
            ("PETSCVIEWERHDF5" variable (:constant-flag t) nil [797 812])
            ("PETSCVIEWERVTK" variable (:constant-flag t) nil [836 850])
            ("PETSCVIEWERMATLAB" variable (:constant-flag t) nil [874 891])
            ("PETSCVIEWERSAWS" variable (:constant-flag t) nil [915 930])
            ("PetscViewerList" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) nil [961 995])
            ("PetscViewerInitializePackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1053 1058]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1009 1059])
            ("PetscViewerRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1109 1121])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1141 1153]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1074 1155])
            ("PetscViewerCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1203 1212])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1212 1225]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1170 1226])
            ("PetscViewerSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1281 1293]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1240 1294])
            ("PetscViewerASCIIOpenWithFILE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1352 1361])
                    ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1361 1367])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1367 1380]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1308 1381])
            ("PetscViewerASCIIOpen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1432 1441])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1441 1453])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1454 1467]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1396 1468])
            ("PetscViewerASCIISetFILE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1521 1533])
                    ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1533 1539]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1482 1540])
            ("PetscViewerBinaryOpen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1591 1600])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1600 1612])
                    ("" variable (:type ("PetscFileMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1613 1627])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1627 1640]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1554 1641])
            ("PetscViewerBinaryGetFlowControl" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1702 1714])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1714 1724]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1655 1725])
            ("PetscViewerBinarySetFlowControl" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1786 1798])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1798 1807]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1739 1808])
            ("PetscViewerBinarySetUseMPIIO" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1866 1878])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1878 1888]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1822 1889])
            ("PetscViewerBinaryGetUseMPIIO" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1947 1959])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1959 1971]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1903 1972])
            ("PetscViewerSocketOpen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2320 2329])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2329 2341])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [2342 2346])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2346 2359]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2283 2360])
            ("PetscViewerStringOpen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2411 2420])
                    ("" variable (:type "char") (reparse-symbol arg-sub-list) [2420 2426])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2427 2434])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2434 2447]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2374 2448])
            ("PetscViewerDrawOpen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2497 2506])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2506 2518])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2519 2531])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [2532 2536])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [2536 2540])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [2540 2544])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [2544 2548])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2548 2561]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2462 2562])
            ("petscdrawtypes.h" include (:system-flag t) nil [2563 2590])
            ("PetscViewerDrawSetDrawType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2646 2658])
                    ("" variable (:type ("PetscDrawType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2658 2672]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2604 2673])
            ("PetscViewerMathematicaOpen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2729 2738])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [2739 2743])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2744 2756])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2758 2770])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2772 2786]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2687 2787])
            ("PetscViewerSiloOpen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2836 2845])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2846 2858])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2860 2874]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2801 2875])
            ("PetscViewerMatlabOpen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2926 2935])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2935 2947])
                    ("" variable (:type ("PetscFileMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2948 2962])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2962 2975]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2889 2976])
            ("PetscViewerGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3025 3037])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewerType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3037 3054]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2991 3055])
            ("PetscViewerSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3103 3115])
                    ("" variable (:type ("PetscViewerType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3115 3131]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3069 3132])
            ("PetscViewerDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3180 3193]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3146 3194])
            ("PetscViewerGetSubViewer" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3247 3259])
                    ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3259 3268])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3268 3281]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3208 3282])
            ("PetscViewerRestoreSubViewer" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3339 3351])
                    ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3351 3360])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3360 3373]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3296 3374])
            ("PetscViewerSetUp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3421 3433]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3389 3434])
            ("PetscViewerView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3479 3491])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3491 3503]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3448 3504])
            ("PetscViewerViewFromOptions" function
               (:arguments 
                  ( ("A" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3567 3581])
                    ("obj" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3581 3597])
                    ("name" variable
                       (:dereference 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3597 3615]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3525 3677])
            ("PetscViewerSetOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3735 3747])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3747 3759]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3692 3761])
            ("PetscViewerAppendOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3821 3833])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3833 3845]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3775 3847])
            ("PetscViewerGetOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3904 3916])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3916 3929]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3861 3931])
            ("PetscViewerFormat" type
               (:typedef ("" type
                     (:members 
                        ( ("PETSC_VIEWER_DEFAULT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4259 4280])
                          ("PETSC_VIEWER_ASCII_MATLAB" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4283 4309])
                          ("PETSC_VIEWER_ASCII_MATHEMATICA" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4312 4343])
                          ("PETSC_VIEWER_ASCII_IMPL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4346 4370])
                          ("PETSC_VIEWER_ASCII_INFO" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4373 4397])
                          ("PETSC_VIEWER_ASCII_INFO_DETAIL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4400 4431])
                          ("PETSC_VIEWER_ASCII_COMMON" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4434 4460])
                          ("PETSC_VIEWER_ASCII_SYMMODU" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4463 4490])
                          ("PETSC_VIEWER_ASCII_INDEX" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4493 4518])
                          ("PETSC_VIEWER_ASCII_DENSE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4521 4546])
                          ("PETSC_VIEWER_ASCII_MATRIXMARKET" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4549 4581])
                          ("PETSC_VIEWER_ASCII_VTK" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4584 4607])
                          ("PETSC_VIEWER_ASCII_VTK_CELL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4610 4638])
                          ("PETSC_VIEWER_ASCII_VTK_COORDS" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4641 4671])
                          ("PETSC_VIEWER_ASCII_PCICE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4674 4699])
                          ("PETSC_VIEWER_ASCII_PYTHON" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4702 4728])
                          ("PETSC_VIEWER_ASCII_FACTOR_INFO" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4731 4762])
                          ("PETSC_VIEWER_ASCII_LATEX" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4765 4790])
                          ("PETSC_VIEWER_ASCII_XML" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4793 4816])
                          ("PETSC_VIEWER_DRAW_BASIC" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4819 4843])
                          ("PETSC_VIEWER_DRAW_LG" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4846 4867])
                          ("PETSC_VIEWER_DRAW_CONTOUR" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4870 4896])
                          ("PETSC_VIEWER_DRAW_PORTS" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4899 4923])
                          ("PETSC_VIEWER_VTK_VTS" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4926 4947])
                          ("PETSC_VIEWER_VTK_VTR" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4950 4971])
                          ("PETSC_VIEWER_VTK_VTU" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4974 4995])
                          ("PETSC_VIEWER_BINARY_MATLAB" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4998 5025])
                          ("PETSC_VIEWER_NATIVE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [5028 5048])
                          ("PETSC_VIEWER_HDF5_VIZ" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [5051 5073])
                          ("PETSC_VIEWER_NOFORMAT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [5076 5101]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [4242 5120])
            ("PetscViewerFormats" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [5134 5173])
            ("PetscViewerSetFormat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5295 5307])
                    ("" variable (:type ("PetscViewerFormat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5307 5325]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5259 5326])
            ("PetscViewerPushFormat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5377 5389])
                    ("" variable (:type ("PetscViewerFormat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5389 5407]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5340 5408])
            ("PetscViewerPopFormat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5458 5470]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5422 5471])
            ("PetscViewerGetFormat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5521 5533])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewerFormat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5533 5552]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5485 5553])
            ("PetscViewerFlush" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5599 5611]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5567 5612])
            ("PetscOptionsGetViewer" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5664 5673])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5673 5685])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5686 5698])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5699 5712])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewerFormat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5712 5731])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5731 5742]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5627 5743])
            ("PetscOptionsViewer" variable (:constant-flag t) nil [5752 5770])
            ("PetscOptionsViewer_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5899 5917])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5917 5929])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5930 5942])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5943 5955])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5956 5969])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewerFormat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5969 5989])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5989 6001]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [5857 6002])
            ("PetscViewerAndFormat" type
               (:typedef ("" type
                     (:members 
                        ( ("viewer" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6020 6039])
                          ("format" variable (:type ("PetscViewerFormat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6039 6064]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [6004 6087])
            ("PetscViewerAndFormatCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6144 6156])
                    ("" variable (:type ("PetscViewerFormat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6156 6174])
                    ("" variable
                       (:pointer 2
                        :type ("PetscViewerAndFormat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6174 6197]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6101 6198])
            ("PetscViewerAndFormatDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 2
                        :type ("PetscViewerAndFormat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6256 6279]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6212 6280])
            ("PetscViewerASCIIGetPointer" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6400 6412])
                    ("" variable
                       (:pointer 2
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6412 6419]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6358 6420])
            ("PetscViewerFileGetMode" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6472 6484])
                    ("" variable
                       (:pointer 1
                        :type ("PetscFileMode" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6484 6499]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6434 6500])
            ("PetscViewerFileSetMode" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6552 6564])
                    ("" variable (:type ("PetscFileMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6564 6578]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6514 6579])
            ("PetscViewerRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6624 6636])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [6636 6642])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6642 6651])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6651 6661])
                    ("" variable (:type ("PetscDataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6661 6675]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6593 6676])
            ("PetscViewerASCIIPrintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6728 6740])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [6740 6752])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [6753 6757]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6690 6758])
            ("PetscViewerASCIISynchronizedPrintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6822 6834])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [6834 6846])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [6847 6851]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6772 6852])
            ("PetscViewerASCIIPushSynchronized" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6914 6926]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6866 6927])
            ("PetscViewerASCIIPopSynchronized" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6988 7000]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [6941 7001])
            ("PetscViewerASCIIPushTab" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7054 7066]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7015 7067])
            ("PetscViewerASCIIPopTab" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7119 7131]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7081 7132])
            ("PetscViewerASCIIUseTabs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7185 7197])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7197 7208]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7146 7209])
            ("PetscViewerASCIISetTab" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7261 7273])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7273 7282]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7223 7283])
            ("PetscViewerASCIIGetTab" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7335 7347])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7347 7357]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7297 7358])
            ("PetscViewerASCIIAddTab" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7410 7422])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7422 7431]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7372 7432])
            ("PetscViewerASCIISubtractTab" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7489 7501])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7501 7510]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7446 7511])
            ("PetscViewerASCIIRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7561 7573])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [7573 7580])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7580 7589])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7589 7599])
                    ("" variable (:type ("PetscDataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7599 7613]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7525 7614])
            ("PetscViewerBinaryGetDescriptor" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7674 7686])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [7686 7691]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7628 7692])
            ("PetscViewerBinaryGetInfoPointer" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7753 7765])
                    ("" variable
                       (:pointer 2
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7765 7773]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7706 7774])
            ("PetscViewerBinaryRead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7825 7837])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [7837 7843])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7843 7852])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7852 7862])
                    ("" variable (:type ("PetscDataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7862 7876]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7788 7877])
            ("PetscViewerBinaryWrite" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7929 7941])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [7941 7947])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7947 7956])
                    ("" variable (:type ("PetscDataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7956 7970])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7970 7981]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7891 7982])
            ("PetscViewerStringSPrintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8036 8048])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [8048 8060])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [8061 8065]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [7996 8066])
            ("PetscViewerStringSetString" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8122 8134])
                    ("" variable (:type "char") (reparse-symbol arg-sub-list) [8134 8140])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8141 8150]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8080 8151])
            ("PetscViewerDrawClear" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8201 8213]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8165 8214])
            ("PetscViewerDrawSetHold" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8266 8278])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8278 8288]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8228 8289])
            ("PetscViewerDrawGetHold" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8341 8353])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8353 8364]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8303 8365])
            ("PetscViewerDrawSetPause" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8418 8430])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8430 8440]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8379 8441])
            ("PetscViewerDrawGetPause" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8494 8506])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8506 8517]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8455 8518])
            ("PetscViewerDrawSetInfo" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8570 8582])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [8582 8594])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [8595 8607])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [8608 8612])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [8612 8616])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [8616 8620])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [8620 8624]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8532 8625])
            ("PetscViewerDrawResize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8676 8688])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [8688 8692])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [8692 8696]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8639 8697])
            ("PetscViewerDrawSetBounds" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8751 8763])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8763 8772])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8772 8789]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8711 8790])
            ("PetscViewerDrawGetBounds" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8844 8856])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8856 8866])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8866 8884]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8804 8885])
            ("PetscViewerSocketSetConnection" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8945 8957])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [8957 8969])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [8970 8974]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8899 8975])
            ("PetscViewerBinarySkipInfo" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9030 9042]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8989 9043])
            ("PetscViewerBinarySetSkipInfo" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9101 9113])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9113 9123]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9057 9124])
            ("PetscViewerBinaryGetSkipInfo" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9182 9194])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9194 9205]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9138 9206])
            ("PetscViewerBinarySetSkipOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9267 9279])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9279 9290]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9220 9291])
            ("PetscViewerBinaryGetSkipOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9352 9364])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9364 9376]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9305 9377])
            ("PetscViewerBinarySetSkipHeader" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9437 9449])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9449 9459]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9391 9460])
            ("PetscViewerBinaryGetSkipHeader" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9520 9532])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9532 9543]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9474 9544])
            ("PetscViewerBinaryReadStringArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9606 9618])
                    ("" variable
                       (:pointer 3
                        :type "char")
                        (reparse-symbol arg-sub-list) [9618 9626]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9558 9627])
            ("PetscViewerBinaryWriteStringArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9690 9702])
                    ("" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [9702 9709]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9641 9710])
            ("PetscViewerFileSetName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9763 9775])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [9775 9787]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9725 9789])
            ("PetscViewerFileGetName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9841 9853])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [9853 9866]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9803 9867])
            ("PetscViewerVUGetPointer" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9921 9933])
                    ("" variable
                       (:pointer 2
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9934 9941]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9882 9942])
            ("PetscViewerVUSetVecSeen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9995 10007])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10008 10019]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [9956 10020])
            ("PetscViewerVUGetVecSeen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10073 10085])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10086 10099]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10034 10100])
            ("PetscViewerVUPrintDeferred" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10156 10168])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [10169 10182])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [10184 10188]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10114 10189])
            ("PetscViewerVUFlushDeferred" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10245 10257]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10203 10258])
            ("PetscViewerMathematicaInitializePackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [10328 10333]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10273 10334])
            ("PetscViewerMathematicaFinalizePackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [10401 10406]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10348 10407])
            ("PetscViewerMathematicaGetName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10466 10478])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [10479 10493]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10421 10494])
            ("PetscViewerMathematicaSetName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10553 10565])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [10566 10579]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10508 10581])
            ("PetscViewerMathematicaClearName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10642 10654]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10595 10655])
            ("PetscViewerMathematicaSkipPackets" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10718 10730])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [10731 10735]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10669 10736])
            ("PetscViewerSiloGetName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10789 10801])
                    ("" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [10802 10810]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10751 10811])
            ("PetscViewerSiloSetName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10863 10875])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [10876 10889]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10825 10891])
            ("PetscViewerSiloClearName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10945 10957]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10905 10958])
            ("PetscViewerSiloGetMeshName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11014 11026])
                    ("" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [11027 11035]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [10972 11036])
            ("PetscViewerSiloSetMeshName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11092 11104])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [11105 11118]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11050 11120])
            ("PetscViewerSiloClearMeshName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11178 11190]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11134 11191])
            ("PetscViewerNetcdfOpen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11243 11252])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [11252 11264])
                    ("" variable (:type ("PetscFileMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11265 11279])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11279 11292]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11206 11293])
            ("PetscViewerNetcdfGetID" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11345 11357])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [11358 11364]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11307 11365])
            ("PetscViewerVTKFieldType" type
               (:typedef ("" type
                     (:members 
                        ( ("PETSC_VTK_POINT_FIELD" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11381 11403])
                          ("PETSC_VTK_POINT_VECTOR_FIELD" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11404 11433])
                          ("PETSC_VTK_CELL_FIELD" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11434 11455])
                          ("PETSC_VTK_CELL_VECTOR_FIELD" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [11456 11484]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [11367 11509])
            ("PetscViewerVTKAddField" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11561 11573])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11573 11585])
                    ("PetscViewerVTKWriteFunction" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11631 11643])
                            ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11643 11655]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable (:type ("PetscViewerVTKFieldType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11656 11680])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11680 11692]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11523 11693])
            ("PetscViewerVTKOpen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11741 11750])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [11750 11762])
                    ("" variable (:type ("PetscFileMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11763 11777])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11777 11790]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11707 11791])
            ("PETSC_VIEWER_STDOUT_" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11928 11937]))                  
                :type ("PetscViewer" type (:type "class") nil nil))
                nil [11892 11938])
            ("PetscViewerASCIIGetStdout" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11993 12002])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12002 12015]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [11952 12016])
            ("PETSC_VIEWER_STDERR_" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12066 12075]))                  
                :type ("PetscViewer" type (:type "class") nil nil))
                nil [12030 12076])
            ("PetscViewerASCIIGetStderr" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12131 12140])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12140 12153]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12090 12154])
            ("PETSC_VIEWER_DRAW_" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12202 12211]))                  
                :type ("PetscViewer" type (:type "class") nil nil))
                nil [12168 12212])
            ("PETSC_VIEWER_SOCKET_" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12262 12271]))                  
                :type ("PetscViewer" type (:type "class") nil nil))
                nil [12226 12272])
            ("PETSC_VIEWER_BINARY_" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12322 12331]))                  
                :type ("PetscViewer" type (:type "class") nil nil))
                nil [12286 12332])
            ("PETSC_VIEWER_MATLAB_" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12382 12391]))                  
                :type ("PetscViewer" type (:type "class") nil nil))
                nil [12346 12392])
            ("PETSC_VIEWER_HDF5_" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12440 12449]))                  
                :type ("PetscViewer" type (:type "class") nil nil))
                nil [12406 12450])
            ("PETSC_VIEWER_MATHEMATICA_WORLD_PRIVATE" variable (:type ("PetscViewer" type (:type "class") nil nil)) nil [12464 12517])
            ("PETSC_VIEWER_STDERR_SELF" variable (:constant-flag t) nil [12527 12551])
            ("PETSC_VIEWER_STDERR_WORLD" variable (:constant-flag t) nil [12599 12624])
            ("PETSC_VIEWER_STDOUT_WORLD" variable (:constant-flag t) nil [12779 12804])
            ("PETSC_VIEWER_STDOUT_SELF" variable (:constant-flag t) nil [12957 12981])
            ("PETSC_VIEWER_DRAW_WORLD" variable (:constant-flag t) nil [13136 13159])
            ("PETSC_VIEWER_DRAW_SELF" variable (:constant-flag t) nil [13312 13334])
            ("PETSC_VIEWER_SOCKET_WORLD" variable (:constant-flag t) nil [13493 13518])
            ("PETSC_VIEWER_SOCKET_SELF" variable (:constant-flag t) nil [13675 13699])
            ("PETSC_VIEWER_BINARY_WORLD" variable (:constant-flag t) nil [13858 13883])
            ("PETSC_VIEWER_BINARY_SELF" variable (:constant-flag t) nil [14040 14064])
            ("PETSC_VIEWER_MATLAB_WORLD" variable (:constant-flag t) nil [14223 14248])
            ("PETSC_VIEWER_MATLAB_SELF" variable (:constant-flag t) nil [14405 14429])
            ("PETSC_VIEWER_MATHEMATICA_WORLD" variable (:constant-flag t) nil [14478 14508])
            ("PetscViewerFlowControlStart" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14655 14667])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14667 14677])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14677 14687]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14612 14688])
            ("PetscViewerFlowControlStepMaster" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14750 14762])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14762 14771])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14771 14781])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14781 14790]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14702 14791])
            ("PetscViewerFlowControlEndMaster" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14852 14864])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14864 14874]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14805 14875])
            ("PetscViewerFlowControlStepWorker" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14937 14949])
                    ("" variable (:type ("PetscMPIInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14949 14961])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14961 14971]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14889 14972])
            ("PetscViewerFlowControlEndWorker" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15033 15045])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15045 15055]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [14986 15056])
            ("PetscViewerMatlabPutArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15160 15172])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [15172 15176])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [15176 15180])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15180 15199])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15199 15211]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15119 15212])
            ("PetscViewerMatlabGetArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15267 15279])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [15279 15283])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [15283 15287])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15287 15300])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15300 15312]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15226 15313])
            ("PetscViewerMatlabPutVariable" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15371 15383])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15383 15395])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [15395 15401]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15327 15402])
            ("PetscViewers" type
               (:typedef ("_n_PetscViewers" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [15810 15855])
            ("PetscViewersCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15903 15912])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewers" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15912 15926]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15869 15927])
            ("PetscViewersDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscViewers" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15976 15990]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15941 15991])
            ("PetscViewersGetViewer" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewers" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16042 16055])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16055 16064])
                    ("" variable
                       (:pointer 1
                        :type ("PetscViewer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16064 16077]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16005 16078])
            ("__FUNCT__" variable (:constant-flag t) nil [16174 16183]))          
      :file "petscviewer.h"
      :pointmax 16217
      :fsize 16216
      :lastmodtime '(22329 14111 0 0)
      :unmatched-syntax '((symbol 15992 . 16004) (symbol 15928 . 15940) (symbol 15856 . 15868) (symbol 15314 . 15326) (symbol 15213 . 15225) (symbol 15106 . 15118) (symbol 14973 . 14985) (symbol 14876 . 14888) (symbol 14792 . 14804) (symbol 14689 . 14701) (symbol 14599 . 14611) (symbol 12451 . 12463) (symbol 12393 . 12405) (symbol 12333 . 12345) (symbol 12273 . 12285) (symbol 12213 . 12225) (symbol 12155 . 12167) (symbol 12077 . 12089) (symbol 12017 . 12029) (symbol 11939 . 11951) (symbol 11879 . 11891) (semantic-list 11760 . 11762) (symbol 11694 . 11706) (symbol 11510 . 11522) (symbol 11294 . 11306) (semantic-list 11262 . 11264) (symbol 11193 . 11205) (symbol 11121 . 11133) (semantic-list 11116 . 11118) (symbol 11037 . 11049) (symbol 10959 . 10971) (symbol 10892 . 10904) (semantic-list 10887 . 10889) (symbol 10812 . 10824) (symbol 10738 . 10750) (symbol 10656 . 10668) (symbol 10582 . 10594) (semantic-list 10577 . 10579) (symbol 10495 . 10507) (symbol 10408 . 10420) (symbol 10335 . 10347) (symbol 10260 . 10272) (symbol 10190 . 10202) (semantic-list 10180 . 10182) (symbol 10101 . 10113) (symbol 10021 . 10033) (symbol 9943 . 9955) (symbol 9869 . 9881) (symbol 9790 . 9802) (semantic-list 9785 . 9787) (symbol 9712 . 9724) (symbol 9628 . 9640) (symbol 9545 . 9557) (symbol 9461 . 9473) (symbol 9378 . 9390) (symbol 9292 . 9304) (symbol 9207 . 9219) (symbol 9125 . 9137) (symbol 9044 . 9056) (symbol 8976 . 8988) (semantic-list 8967 . 8969) (symbol 8886 . 8898) (symbol 8791 . 8803) (symbol 8698 . 8710) (symbol 8626 . 8638) (semantic-list 8605 . 8607) (semantic-list 8592 . 8594) (symbol 8519 . 8531) (symbol 8442 . 8454) (symbol 8366 . 8378) (symbol 8290 . 8302) (symbol 8215 . 8227) (symbol 8152 . 8164) (semantic-list 8138 . 8140) (symbol 8067 . 8079) (semantic-list 8058 . 8060) (symbol 7983 . 7995) (symbol 7878 . 7890) (symbol 7775 . 7787) (symbol 7693 . 7705) (symbol 7615 . 7627) (symbol 7512 . 7524) (symbol 7433 . 7445) (symbol 7359 . 7371) (symbol 7284 . 7296) (symbol 7210 . 7222) (symbol 7133 . 7145) (symbol 7068 . 7080) (symbol 7002 . 7014) (symbol 6928 . 6940) (symbol 6853 . 6865) (semantic-list 6844 . 6846) (symbol 6759 . 6771) (semantic-list 6750 . 6752) (symbol 6677 . 6689) (symbol 6580 . 6592) (symbol 6501 . 6513) (symbol 6421 . 6433) (symbol 6345 . 6357) (symbol 6199 . 6211) (symbol 6088 . 6100) (semantic-list 5953 . 5955) (semantic-list 5940 . 5942) (semantic-list 5927 . 5929) (symbol 5844 . 5856) (semantic-list 5696 . 5698) (semantic-list 5683 . 5685) (symbol 5614 . 5626) (symbol 5554 . 5566) (symbol 5472 . 5484) (symbol 5409 . 5421) (symbol 5327 . 5339) (semantic-list 5204 . 5258) (symbol 5188 . 5204) (string 5205 . 5257) (symbol 5175 . 5187) (string 5205 . 5257) (symbol 5121 . 5133) (semantic-list 3927 . 3929) (symbol 3848 . 3860) (semantic-list 3843 . 3845) (symbol 3762 . 3774) (semantic-list 3757 . 3759) (symbol 3679 . 3691) (symbol 3505 . 3524) (symbol 3435 . 3447) (symbol 3376 . 3388) (symbol 3283 . 3295) (symbol 3195 . 3207) (symbol 3133 . 3145) (symbol 3056 . 3068) (symbol 2978 . 2990) (semantic-list 2945 . 2947) (symbol 2876 . 2888) (semantic-list 2856 . 2858) (symbol 2788 . 2800) (semantic-list 2768 . 2770) (semantic-list 2754 . 2756) (symbol 2674 . 2686) (symbol 2591 . 2603) (semantic-list 2529 . 2531) (semantic-list 2516 . 2518) (symbol 2449 . 2461) (semantic-list 2424 . 2426) (symbol 2361 . 2373) (semantic-list 2339 . 2341) (symbol 2270 . 2282) (symbol 1890 . 1902) (symbol 1809 . 1821) (symbol 1726 . 1738) (symbol 1642 . 1654) (semantic-list 1610 . 1612) (symbol 1541 . 1553) (symbol 1469 . 1481) (semantic-list 1451 . 1453) (symbol 1383 . 1395) (symbol 1295 . 1307) (symbol 1227 . 1239) (symbol 1157 . 1169) (semantic-list 1119 . 1121) (symbol 1061 . 1073) (symbol 996 . 1008) (symbol 948 . 960) (symbol 194 . 206))
      :lexical-table 
        '(("PETSCVIEWERHDF5" . ((string "\"hdf5\"" 821 . 827)))
          ("PETSCVIEWERSAWS" . ((string "\"saws\"" 940 . 946)))
          ("PETSC_VIEWER_STDOUT_SELF" . ((symbol "PETSC_VIEWER_STDOUT_" 12983 . 13003) (semantic-list "(PETSC_COMM_SELF)" 13003 . 13020)))
          ("PETSCVIEWERVTK" . ((string "\"vtk\"" 860 . 865)))
          ("PetscOptionsViewer" (spp-arg-list ("a" "b" "c" "d" "e" "f") 5770 . 5783) . 
              ((symbol "PetscOptionsViewer_Private" 5784 . 5810) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f)" 5810 . 5842) (punctuation ";" 5842 . 5843)))
          ("PETSC_VIEWER_STDERR_SELF" . ((symbol "PETSC_VIEWER_STDERR_" 12553 . 12573) (semantic-list "(PETSC_COMM_SELF)" 12573 . 12590)))
          ("PETSC_VIEWER_STDERR_WORLD" . ((symbol "PETSC_VIEWER_STDERR_" 12625 . 12645) (semantic-list "(PETSC_COMM_WORLD)" 12645 . 12663)))
          ("PETSC_VIEWER_BINARY_SELF" . ((symbol "PETSC_VIEWER_BINARY_" 14066 . 14086) (semantic-list "(PETSC_COMM_SELF)" 14086 . 14103)))
          ("PETSC_VIEWER_DRAW_SELF" . ((symbol "PETSC_VIEWER_DRAW_" 13338 . 13356) (semantic-list "(PETSC_COMM_SELF)" 13356 . 13373)))
          ("PETSC_VIEWER_SOCKET_WORLD" . ((symbol "PETSC_VIEWER_SOCKET_" 13519 . 13539) (semantic-list "(PETSC_COMM_WORLD)" 13539 . 13557)))
          ("PETSCVIEWERNETCDF" . ((string "\"netcdf\"" 780 . 788)))
          ("PETSC_VIEWER_BINARY_WORLD" . ((symbol "PETSC_VIEWER_BINARY_" 13884 . 13904) (semantic-list "(PETSC_COMM_WORLD)" 13904 . 13922)))
          ("__FUNCT__" . ((string "\"User provided function\"" 16184 . 16208)))
          ("PETSC_VIEWER_MATLAB_WORLD" . ((symbol "PETSC_VIEWER_MATLAB_" 14249 . 14269) (semantic-list "(PETSC_COMM_WORLD)" 14269 . 14287)))
          ("PETSC_VIEWER_MATLAB_SELF" . ((symbol "PETSC_VIEWER_MATLAB_" 14431 . 14451) (semantic-list "(PETSC_COMM_SELF)" 14451 . 14468)))
          ("__PETSCVIEWER_H")
          ("PETSCVIEWERSOCKET" . ((string "\"socket\"" 495 . 503)))
          ("PETSCVIEWERSTRING" . ((string "\"string\"" 617 . 625)))
          ("PETSC_VIEWER_DRAW_WORLD" . ((symbol "PETSC_VIEWER_DRAW_" 13162 . 13180) (semantic-list "(PETSC_COMM_WORLD)" 13180 . 13198)))
          ("PETSCVIEWERBINARY" . ((string "\"binary\"" 576 . 584)))
          ("PETSC_VIEWER_SOCKET_SELF" . ((symbol "PETSC_VIEWER_SOCKET_" 13701 . 13721) (semantic-list "(PETSC_COMM_SELF)" 13721 . 13738)))
          ("PETSCVIEWERDRAW" . ((string "\"draw\"" 658 . 664)))
          ("PETSCVIEWERVU" . ((string "\"vu\"" 697 . 701)))
          ("PETSCVIEWERMATHEMATICA" . ((string "\"mathematica\"" 734 . 747)))
          ("PETSCVIEWERASCII" . ((string "\"ascii\"" 536 . 543)))
          ("PETSCVIEWERMATLAB" . ((string "\"matlab\"" 898 . 906)))
          ("PETSC_VIEWER_STDOUT_WORLD" . ((symbol "PETSC_VIEWER_STDOUT_" 12805 . 12825) (semantic-list "(PETSC_COMM_WORLD)" 12825 . 12843)))
          ("PETSC_VIEWER_MATHEMATICA_WORLD" . ((semantic-list "(PetscViewerInitializeMathematicaWorld_Private(),PETSC_VIEWER_MATHEMATICA_WORLD_PRIVATE)" 14509 . 14597)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__PETSCSYS_H" variable (:constant-flag t) nil [203 215])
            ("petscconf.h" include (:system-flag t) nil [599 621])
            ("petscfix.h" include (:system-flag t) nil [622 643])
            ("string.h" include (:system-flag t) nil [682 701])
            ("PETSC_FUNCTION_NAME" variable (:constant-flag t) nil [1536 1555])
            ("assert_never_put_petsc_headers_inside_an_extern_c" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [2031 2035]))                  
                :type "void")
                nil [1976 2036])
            ("assert_never_put_petsc_headers_inside_an_extern_c" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "double") (reparse-symbol arg-sub-list) [2092 2099]))                  
                :type "void")
                nil [2037 2100])
            ("PETSC_RESTRICT" variable (:constant-flag t) nil [2144 2158])
            ("PETSC_STATIC_INLINE" variable (:constant-flag t) nil [2269 2288])
            ("PETSC_DLLEXPORT" variable (:constant-flag t) nil [3160 3175])
            ("PETSC_DLLIMPORT" variable (:constant-flag t) nil [3186 3201])
            ("PETSC_VISIBILITY_INTERNAL" variable (:constant-flag t) nil [3212 3237])
            ("PETSC_VISIBILITY_PUBLIC" variable (:constant-flag t) nil [3464 3487])
            ("PETSC_EXTERN" variable (:constant-flag t) nil [3744 3756])
            ("PETSC_EXTERN_TYPEDEF" variable (:constant-flag t) nil [3800 3820])
            ("PETSC_INTERN" variable (:constant-flag t) nil [3840 3852])
            ("petscversion.h" include (:system-flag t) nil [4039 4064])
            ("PETSC_AUTHOR_INFO" variable (:constant-flag t) nil [4073 4090])
            ("MPICH_SKIP_MPICXX" variable (:constant-flag t) nil [4719 4736])
            ("OMPI_SKIP_MPICXX" variable (:constant-flag t) nil [4787 4803])
            ("OMPI_WANT_MPI_INTERFACE_WARNING" variable (:constant-flag t) nil [4869 4900])
            ("mpi.h" include (:system-flag t) nil [4910 4926])
            ("stdio.h" include (:system-flag t) nil [7579 7597])
            ("MPIAPI" variable (:constant-flag t) nil [7720 7726])
            ("PetscAttrMPIPointerWithType" variable (:constant-flag t) nil [8598 8625])
            ("PetscAttrMPITypeTag" variable (:constant-flag t) nil [8650 8669])
            ("PetscAttrMPITypeTagLayoutCompatible" variable (:constant-flag t) nil [8686 8721])
            ("PetscErrorCode" type
               (:typedef ("int")
                :type "typedef")
                nil [8883 8910])
            ("PetscClassId" type
               (:typedef ("int")
                :type "typedef")
                nil [9432 9457])
            ("PetscMPIInt" type
               (:typedef ("int")
                :type "typedef")
                nil [9983 10007])
            ("PetscEnum" type
               (:typedef ("" type
                     (:members 
                        ( ("ENUM_DUMMY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [10208 10220]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [10193 10231])
            ("MPIU_ENUM" variable (:type ("MPI_Datatype" type (:type "class") nil nil)) nil [10245 10299])
            ("PetscInt" type
               (:typedef ("int")
                :type "typedef")
                nil [11587 11608])
            ("MPIU_INT" variable (:constant-flag t) nil [11617 11625])
            ("PetscInt_FMT" variable (:constant-flag t) nil [11642 11654])
            ("PetscBLASInt" type
               (:typedef ("int")
                :type "typedef")
                nil [13263 13288])
            ("PetscPrecision" type
               (:typedef ("" type
                     (:members 
                        ( ("PETSC_PRECISION_SINGLE" variable
                             (:constant-flag t
                              :default-value (13498 13499)
                              :type "int")
                              (reparse-symbol enumsubparts) [13475 13499])
                          ("PETSC_PRECISION_DOUBLE" variable
                             (:constant-flag t
                              :default-value (13523 13524)
                              :type "int")
                              (reparse-symbol enumsubparts) [13500 13524]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [13460 13542])
            ("PetscPrecisions" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [13556 13586])
            ("MPIU_SIZE_T" variable (:constant-flag t) nil [13721 13732])
            ("MPIU_SIZE_T" variable (:constant-flag t) nil [13806 13817])
            ("MPIU_SIZE_T" variable (:constant-flag t) nil [13901 13912])
            ("PETSC_STDOUT" variable
               (:pointer 1
                :type ("FILE" type (:type "class") nil nil))
                nil [14201 14220])
            ("PETSC_STDERR" variable
               (:pointer 1
                :type ("FILE" type (:type "class") nil nil))
                nil [14391 14410])
            ("PetscUnlikely" variable (:constant-flag t) nil [15438 15451])
            ("PetscLikely" variable (:constant-flag t) nil [15477 15488])
            ("PetscBool" type
               (:typedef ("" type
                     (:members 
                        ( ("PETSC_FALSE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [16073 16085])
                          ("PETSC_TRUE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [16085 16097]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [16058 16108])
            ("PetscBools" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [16122 16153])
            ("MPIU_BOOL" variable (:type ("MPI_Datatype" type (:type "class") nil nil)) nil [16167 16221])
            ("petscmath.h" include (:system-flag t) nil [16294 16316])
            ("PetscCopyMode" type
               (:typedef ("" type
                     (:members 
                        ( ("PETSC_COPY_VALUES" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [17113 17131])
                          ("PETSC_OWN_POINTER" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [17132 17150])
                          ("PETSC_USE_POINTER" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [17151 17169]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [17098 17184])
            ("PetscCopyModes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [17198 17233])
            ("PETSC_NULL" variable (:constant-flag t) nil [17993 18003])
            ("PETSC_IGNORE" variable (:constant-flag t) nil [18434 18446])
            ("PETSC_DECIDE" variable (:constant-flag t) nil [18697 18709])
            ("PETSC_DETERMINE" variable (:constant-flag t) nil [19159 19174])
            ("PETSC_DEFAULT" variable (:constant-flag t) nil [19493 19506])
            ("PETSC_COMM_WORLD" variable (:type ("MPI_Comm" type (:type "class") nil nil)) nil [20226 20252])
            ("PETSC_COMM_SELF" variable (:constant-flag t) nil [20463 20478])
            ("PetscBeganMPI" variable (:type ("PetscBool" type (:type "class") nil nil)) nil [20507 20531])
            ("PetscInitializeCalled" variable (:type ("PetscBool" type (:type "class") nil nil)) nil [20545 20577])
            ("PetscFinalizeCalled" variable (:type ("PetscBool" type (:type "class") nil nil)) nil [20591 20621])
            ("PetscCUSPSynchronize" variable (:type ("PetscBool" type (:type "class") nil nil)) nil [20635 20666])
            ("PetscViennaCLSynchronize" variable (:type ("PetscBool" type (:type "class") nil nil)) nil [20680 20715])
            ("PetscCUDASynchronize" variable (:type ("PetscBool" type (:type "class") nil nil)) nil [20729 20760])
            ("PetscSetHelpVersionFunctions" function
               (:prototype-flag t
                :arguments 
                  ( ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20838 20847]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20867 20876]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20775 20878])
            ("PetscCommDuplicate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20926 20935])
                    ("" variable
                       (:pointer 1
                        :type ("MPI_Comm" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20935 20945])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [20945 20950]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20892 20951])
            ("PetscCommDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("MPI_Comm" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20997 21007]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20965 21008])
            ("PetscMalloc" variable (:constant-flag t) nil [21618 21629])
            ("PetscAddrAlign" variable (:constant-flag t) nil [22042 22056])
            ("PetscMalloc1" variable (:constant-flag t) nil [22622 22634])
            ("PetscCalloc1" variable (:constant-flag t) nil [23181 23193])
            ("PetscMalloc2" variable (:constant-flag t) nil [23929 23941])
            ("PetscCalloc2" variable (:constant-flag t) nil [24986 24998])
            ("PetscMalloc3" variable (:constant-flag t) nil [25936 25948])
            ("PetscCalloc3" variable (:constant-flag t) nil [27296 27308])
            ("PetscMalloc4" variable (:constant-flag t) nil [28499 28511])
            ("PetscCalloc4" variable (:constant-flag t) nil [30092 30104])
            ("PetscMalloc5" variable (:constant-flag t) nil [31470 31482])
            ("PetscCalloc5" variable (:constant-flag t) nil [33301 33313])
            ("PetscMalloc6" variable (:constant-flag t) nil [34891 34903])
            ("PetscCalloc6" variable (:constant-flag t) nil [37007 37019])
            ("PetscMalloc7" variable (:constant-flag t) nil [38727 38739])
            ("PetscCalloc7" variable (:constant-flag t) nil [41120 41132])
            ("PetscNew" variable (:constant-flag t) nil [41976 41984])
            ("PetscNewLog" variable (:constant-flag t) nil [42615 42626])
            ("PetscFree" variable (:constant-flag t) nil [43181 43190])
            ("PetscFreeVoid" variable (:constant-flag t) nil [43654 43667])
            ("PetscFree2" variable (:constant-flag t) nil [44250 44260])
            ("PetscFree3" variable (:constant-flag t) nil [44974 44984])
            ("PetscFree4" variable (:constant-flag t) nil [45799 45809])
            ("PetscFree5" variable (:constant-flag t) nil [46769 46779])
            ("PetscFree6" variable (:constant-flag t) nil [47939 47949])
            ("PetscFree7" variable (:constant-flag t) nil [49336 49346])
            ("PetscTrMalloc" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50206 50213])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [50213 50217])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [50217 50229])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [50230 50242])
                    ("" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) [50243 50250]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50174 50251])
            ("PetscTrFree" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [50295 50301])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [50301 50305])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [50305 50317])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [50318 50330]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50265 50332])
            ("PetscMallocSet" function
               (:prototype-flag t
                :arguments 
                  ( ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50395 50402])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [50402 50406])
                            ("" variable
                               (:constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [50406 50418])
                            ("" variable
                               (:constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [50419 50431])
                            ("" variable
                               (:pointer 2
                                :type "void")
                                (reparse-symbol arg-sub-list) [50432 50439]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [50459 50465])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [50465 50469])
                            ("" variable
                               (:constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [50469 50481])
                            ("" variable
                               (:constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [50482 50494]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50346 50497])
            ("PetscMallocClear" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [50543 50548]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50511 50549])
            ("PetscLogDouble" type
               (:typedef ("double")
                :type "typedef")
                nil [50719 50749])
            ("MPIU_PETSCLOGDOUBLE" variable (:constant-flag t) nil [50758 50777])
            ("PetscMallocDump" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50928 50935]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50897 50936])
            ("PetscMallocDumpLog" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50984 50991]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [50950 50992])
            ("PetscMallocGetCurrentUsage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscLogDouble" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [51048 51065]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [51006 51066])
            ("PetscMallocGetMaximumUsage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscLogDouble" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [51122 51139]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [51080 51140])
            ("PetscMallocDebug" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51186 51196]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [51154 51197])
            ("PetscMallocGetDebug" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [51246 51257]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [51211 51258])
            ("PetscMallocValidate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [51307 51311])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [51311 51323])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [51324 51336]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [51272 51338])
            ("PetscMallocSetDumpLog" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [51389 51394]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [51352 51395])
            ("PetscMallocSetDumpLogThreshold" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51455 51470]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [51409 51471])
            ("PetscMallocGetDumpLog" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [51522 51533]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [51485 51534])
            ("PetscDataType" type
               (:typedef ("" type
                     (:members 
                        ( ("PETSC_INT" variable
                             (:constant-flag t
                              :default-value (51869 51870)
                              :type "int")
                              (reparse-symbol enumsubparts) [51857 51870])
                          ("PETSC_DOUBLE" variable
                             (:constant-flag t
                              :default-value (51886 51887)
                              :type "int")
                              (reparse-symbol enumsubparts) [51871 51887])
                          ("PETSC_COMPLEX" variable
                             (:constant-flag t
                              :default-value (51904 51905)
                              :type "int")
                              (reparse-symbol enumsubparts) [51888 51905])
                          ("PETSC_LONG" variable
                             (:constant-flag t
                              :default-value (51920 51921)
                              :type "int")
                              (reparse-symbol enumsubparts) [51907 51921])
                          ("PETSC_SHORT" variable
                             (:constant-flag t
                              :default-value (51937 51938)
                              :type "int")
                              (reparse-symbol enumsubparts) [51923 51938])
                          ("PETSC_FLOAT" variable
                             (:constant-flag t
                              :default-value (51953 51954)
                              :type "int")
                              (reparse-symbol enumsubparts) [51939 51954])
                          ("PETSC_CHAR" variable
                             (:constant-flag t
                              :default-value (51983 51984)
                              :type "int")
                              (reparse-symbol enumsubparts) [51970 51984])
                          ("PETSC_BIT_LOGICAL" variable
                             (:constant-flag t
                              :default-value (52005 52006)
                              :type "int")
                              (reparse-symbol enumsubparts) [51985 52006])
                          ("PETSC_ENUM" variable
                             (:constant-flag t
                              :default-value (52020 52021)
                              :type "int")
                              (reparse-symbol enumsubparts) [52007 52021])
                          ("PETSC_BOOL" variable
                             (:constant-flag t
                              :default-value (52033 52034)
                              :type "int")
                              (reparse-symbol enumsubparts) [52022 52034])
                          ("PETSC___FLOAT128" variable
                             (:constant-flag t
                              :default-value (52055 52057)
                              :type "int")
                              (reparse-symbol enumsubparts) [52036 52057])
                          ("PETSC_OBJECT" variable
                             (:constant-flag t
                              :default-value (52073 52075)
                              :type "int")
                              (reparse-symbol enumsubparts) [52058 52075])
                          ("PETSC_FUNCTION" variable
                             (:constant-flag t
                              :default-value (52094 52096)
                              :type "int")
                              (reparse-symbol enumsubparts) [52077 52096])
                          ("PETSC_STRING" variable
                             (:constant-flag t
                              :default-value (52113 52115)
                              :type "int")
                              (reparse-symbol enumsubparts) [52098 52115]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [51843 52131])
            ("PetscDataTypes" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :type "char")
                nil [52145 52180])
            ("PETSC_SCALAR" variable (:constant-flag t) nil [52422 52434])
            ("PETSC_REAL" variable (:constant-flag t) nil [52625 52635])
            ("PETSC_FORTRANADDR" variable (:constant-flag t) nil [52666 52683])
            ("PetscDataTypeToMPIDataType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscDataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52752 52766])
                    ("" variable
                       (:pointer 1
                        :type ("MPI_Datatype" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52766 52780]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [52710 52781])
            ("PetscMPIDataTypeToPetscDataType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Datatype" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52842 52855])
                    ("" variable
                       (:pointer 1
                        :type ("PetscDataType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52855 52870]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [52795 52871])
            ("PetscDataTypeGetSize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscDataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52921 52935])
                    ("" variable
                       (:pointer 1
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52935 52943]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [52885 52944])
            ("PetscDataTypeFromString" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [52997 53009])
                    ("" variable
                       (:pointer 1
                        :type ("PetscDataType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53009 53024])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53024 53035]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [52958 53036])
            ("PetscBitMemcpy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [53274 53280])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53280 53289])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [53289 53301])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53301 53310])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53310 53319])
                    ("" variable (:type ("PetscDataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53319 53333]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53244 53334])
            ("PetscMemmove" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [53376 53382])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [53382 53389])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53389 53396]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53348 53397])
            ("PetscMemcmp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [53438 53450])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [53450 53462])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53462 53469])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53469 53482]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53411 53483])
            ("PetscStrlen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [53524 53536])
                    ("" variable
                       (:pointer 1
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53537 53545]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53497 53546])
            ("PetscStrToArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [53591 53603])
                    ("" variable (:type "char") (reparse-symbol arg-sub-list) [53604 53609])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [53609 53614])
                    ("" variable
                       (:pointer 3
                        :type "char")
                        (reparse-symbol arg-sub-list) [53614 53623]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53560 53624])
            ("PetscStrToArrayDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [53676 53680])
                    ("" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [53680 53688]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53638 53689])
            ("PetscStrcmp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [53730 53742])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [53743 53755])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53756 53769]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53703 53770])
            ("PetscStrgrt" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [53811 53823])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [53824 53836])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53837 53850]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53784 53851])
            ("PetscStrcasecmp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [53896 53908])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [53909 53921])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53922 53934]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53865 53935])
            ("PetscStrncmp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [53977 53989])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [53990 54002])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54003 54010])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54010 54022]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [53949 54023])
            ("PetscStrcpy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "char") (reparse-symbol arg-sub-list) [54064 54070])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54071 54083]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54037 54085])
            ("PetscStrcat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "char") (reparse-symbol arg-sub-list) [54126 54132])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54133 54145]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54099 54147])
            ("PetscStrncat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "char") (reparse-symbol arg-sub-list) [54189 54195])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54196 54208])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54209 54216]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54161 54217])
            ("PetscStrncpy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "char") (reparse-symbol arg-sub-list) [54259 54265])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54266 54278])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54279 54286]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54231 54287])
            ("PetscStrchr" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54328 54340])
                    ("" variable (:type "char") (reparse-symbol arg-sub-list) [54341 54346])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [54346 54354]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54301 54356])
            ("PetscStrtolower" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "char") (reparse-symbol arg-sub-list) [54401 54407]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54370 54409])
            ("PetscStrtoupper" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "char") (reparse-symbol arg-sub-list) [54454 54460]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54423 54462])
            ("PetscStrrchr" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54504 54516])
                    ("" variable (:type "char") (reparse-symbol arg-sub-list) [54517 54522])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [54522 54530]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54476 54532])
            ("PetscStrstr" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54573 54585])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54586 54598])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [54599 54607]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54546 54609])
            ("PetscStrrstr" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54651 54663])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54664 54676])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [54677 54685]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54623 54687])
            ("PetscStrendswith" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54733 54745])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54746 54758])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54759 54770]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54701 54771])
            ("PetscStrbeginswith" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54819 54831])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54832 54844])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54845 54856]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54785 54857])
            ("PetscStrendswithwhich" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54908 54920])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54921 54940])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54940 54950]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54871 54951])
            ("PetscStrallocpy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [54996 55008])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [55009 55017]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [54965 55019])
            ("PetscStrArrayallocpy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55069 55088])
                    ("" variable
                       (:pointer 3
                        :type "char")
                        (reparse-symbol arg-sub-list) [55088 55096]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55033 55097])
            ("PetscStrArrayDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 3
                        :type "char")
                        (reparse-symbol arg-sub-list) [55147 55155]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55111 55156])
            ("PetscStrNArrayallocpy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55207 55216])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55216 55235])
                    ("" variable
                       (:pointer 3
                        :type "char")
                        (reparse-symbol arg-sub-list) [55235 55243]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55170 55244])
            ("PetscStrNArrayDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55295 55304])
                    ("" variable
                       (:pointer 3
                        :type "char")
                        (reparse-symbol arg-sub-list) [55304 55312]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55258 55313])
            ("PetscStrreplace" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55358 55367])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55367 55379])
                    ("" variable (:type "char") (reparse-symbol arg-sub-list) [55380 55386])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55387 55394]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55327 55395])
            ("PetscStrcmpNoError" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55434 55446])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55447 55459])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55460 55473]))                  
                :type "void")
                nil [55410 55474])
            ("PetscToken" type
               (:typedef ("_p_PetscToken" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [55638 55679])
            ("PetscTokenCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55726 55738])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55739 55750])
                    ("" variable
                       (:pointer 1
                        :type ("PetscToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55750 55762]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55694 55763])
            ("PetscTokenFind" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55807 55818])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [55818 55826]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55777 55828])
            ("PetscTokenDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55875 55887]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55842 55888])
            ("PetscEListFind" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55933 55942])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55942 55961])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [55961 55973])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55973 55983])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55983 55994]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [55903 55995])
            ("PetscEnumFind" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [56038 56057])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [56057 56069])
                    ("" variable
                       (:pointer 1
                        :type ("PetscEnum" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56069 56080])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56080 56091]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [56009 56092])
            ("PetscMaxSum_Op" variable (:type ("MPI_Op" type (:type "class") nil nil)) nil [56165 56187])
            ("MPIU_SUM" variable (:constant-flag t) nil [56349 56357])
            ("MPIU_MAX" variable (:constant-flag t) nil [56486 56494])
            ("MPIU_MIN" variable (:constant-flag t) nil [56511 56519])
            ("PetscMaxSum" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56575 56584])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56584 56600])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56601 56611])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56611 56621]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [56548 56622])
            ("MPIULong_Send" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [56666 56672])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56672 56681])
                    ("" variable (:type ("MPI_Datatype" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56681 56694])
                    ("" variable (:type ("PetscMPIInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56694 56706])
                    ("" variable (:type ("PetscMPIInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56706 56718])
                    ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56718 56727]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [56637 56728])
            ("MPIULong_Recv" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [56771 56777])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56777 56786])
                    ("" variable (:type ("MPI_Datatype" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56786 56799])
                    ("" variable (:type ("PetscMPIInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56799 56811])
                    ("" variable (:type ("PetscMPIInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56811 56823])
                    ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56823 56832]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [56742 56833])
            ("PetscObject" type
               (:typedef ("_p_PetscObject" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [57157 57200])
            ("PetscObjectId" type
               (:typedef ("Petsc64bitInt" type (:type "class") nil nil)
                :type "typedef")
                nil [57401 57437])
            ("PetscObjectState" type
               (:typedef ("Petsc64bitInt" type (:type "class") nil nil)
                :type "typedef")
                nil [57872 57911])
            ("PetscFunctionList" type
               (:typedef ("_n_PetscFunctionList" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [58137 58192])
            ("PetscFileMode" type
               (:typedef ("" type
                     (:members 
                        ( ("FILE_MODE_READ" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [58710 58725])
                          ("FILE_MODE_WRITE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [58726 58742])
                          ("FILE_MODE_APPEND" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [58743 58760])
                          ("FILE_MODE_UPDATE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [58761 58778])
                          ("FILE_MODE_APPEND_UPDATE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [58779 58803]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [58696 58818])
            ("PetscFileModes" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("extern")
                :constant-flag t
                :type "char")
                nil [58819 58861])
            ("petscerror.h" include (:system-flag t) nil [58903 58926])
            ("PETSC_SMALLEST_CLASSID" variable (:constant-flag t) nil [58936 58958])
            ("PETSC_LARGEST_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [58981 59016])
            ("PETSC_OBJECT_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [59030 59064])
            ("PetscClassIdRegister" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [59114 59126])
                    ("" variable
                       (:pointer 1
                        :type ("PetscClassId" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59127 59142]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59078 59143])
            ("PetscMemoryGetCurrentUsage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscLogDouble" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59264 59281]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59222 59282])
            ("PetscMemoryGetMaximumUsage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscLogDouble" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59338 59355]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59296 59356])
            ("PetscMemorySetGetMaximumUsage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [59415 59420]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59370 59421])
            ("PetscMemoryTrace" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [59467 59479]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59435 59481])
            ("PetscInfoAllow" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59526 59537])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [59537 59550]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59496 59552])
            ("PetscSleep" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59592 59602]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59566 59603])
            ("PetscInitialize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [59682 59687])
                    ("" variable
                       (:pointer 3
                        :type "char")
                        (reparse-symbol arg-sub-list) [59687 59695])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [59695 59707])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [59708 59720]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59651 59722])
            ("PetscInitializeNoPointers" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [59777 59781])
                    ("" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [59781 59788])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [59788 59800])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [59801 59813]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59736 59815])
            ("PetscInitializeNoArguments" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [59871 59876]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59829 59877])
            ("PetscInitialized" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59923 59935]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59891 59936])
            ("PetscFinalized" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59980 59992]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [59950 59993])
            ("PetscFinalize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [60036 60041]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60007 60042])
            ("PetscInitializeFortran" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [60094 60099]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60056 60100])
            ("PetscGetArgs" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [60142 60147])
                    ("" variable
                       (:pointer 3
                        :type "char")
                        (reparse-symbol arg-sub-list) [60147 60156]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60114 60157])
            ("PetscGetArguments" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 3
                        :type "char")
                        (reparse-symbol arg-sub-list) [60204 60213]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60171 60214])
            ("PetscFreeArguments" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [60262 60270]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60228 60271])
            ("PetscEnd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [60310 60315]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60286 60316])
            ("PetscSysInitializePackage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [60371 60376]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60330 60377])
            ("PetscPythonInitialize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [60429 60441])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [60442 60454]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60392 60456])
            ("PetscPythonFinalize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [60505 60510]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60470 60511])
            ("PetscPythonPrintError" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [60562 60567]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60525 60568])
            ("PetscPythonMonitorSet" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60619 60631])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [60631 60643]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60582 60645])
            ("PetscVoidFunction" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [60951 60956]))                  
                :type "void")
                nil [60925 60957])
            ("PetscErrorCodeFunction" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [61028 61033]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [60987 61034])
            ("PetscObjectDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61137 61150]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61103 61151])
            ("PetscObjectGetComm" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61199 61211])
                    ("" variable
                       (:pointer 1
                        :type ("MPI_Comm" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61211 61222]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61165 61223])
            ("PetscObjectGetClassId" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61274 61286])
                    ("" variable
                       (:pointer 1
                        :type ("PetscClassId" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61286 61301]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61237 61302])
            ("PetscObjectGetClassName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61355 61367])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [61367 61381]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61316 61383])
            ("PetscObjectSetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61431 61443])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [61443 61456]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61397 61458])
            ("PetscObjectSetPrecision" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61511 61523])
                    ("" variable (:type ("PetscPrecision" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61523 61538]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61472 61539])
            ("PetscObjectGetType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61587 61599])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [61599 61613]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61553 61615])
            ("PetscObjectSetName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61663 61675])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [61675 61687]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61629 61689])
            ("PetscObjectGetName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61737 61749])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [61749 61762]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61703 61764])
            ("PetscObjectSetTabLevel" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61816 61828])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61828 61837]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61778 61838])
            ("PetscObjectGetTabLevel" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61890 61902])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61902 61912]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61852 61913])
            ("PetscObjectIncrementTabLevel" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61971 61983])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61983 61995])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61995 62004]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [61927 62005])
            ("PetscObjectReference" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62055 62067]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62019 62068])
            ("PetscObjectGetReference" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62121 62133])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [62133 62143]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62082 62144])
            ("PetscObjectDereference" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62196 62208]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62158 62209])
            ("PetscObjectGetNewTag" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62259 62271])
                    ("" variable
                       (:pointer 1
                        :type ("PetscMPIInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [62271 62285]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62223 62286])
            ("PetscObjectCompose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62334 62346])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [62346 62358])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62359 62371]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62300 62372])
            ("PetscObjectRemoveReference" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62428 62440])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [62440 62452]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62386 62454])
            ("PetscObjectQuery" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62500 62512])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [62512 62524])
                    ("" variable
                       (:pointer 1
                        :type ("PetscObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [62525 62539]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62468 62540])
            ("PetscObjectComposeFunction_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62604 62616])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [62616 62628])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [62638 62643]))                          
                        :type "void")
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62554 62645])
            ("PetscObjectComposeFunction" variable (:constant-flag t) nil [62654 62680])
            ("PetscObjectSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62805 62817]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62764 62818])
            ("PetscObjectSetUp" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62864 62876]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62832 62877])
            ("PetscObjectSetPrintedOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62935 62947]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62891 62948])
            ("PetscObjectInheritPrintedOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63010 63022])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63022 63034]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [62962 63035])
            ("PetscCommGetNewTag" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63083 63092])
                    ("" variable
                       (:pointer 1
                        :type ("PetscMPIInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [63092 63106]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63049 63107])
            ("petscviewertypes.h" include (:system-flag t) nil [63109 63138])
            ("petscoptions.h" include (:system-flag t) nil [63139 63164])
            ("PetscObjectsListGetGlobalNumbering" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63229 63238])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63238 63247])
                    ("" variable
                       (:pointer 1
                        :type ("PetscObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [63247 63260])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [63260 63270])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [63270 63280]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63179 63281])
            ("PetscMemoryShowUsage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63332 63344])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [63344 63356]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63296 63358])
            ("PetscMemoryView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63403 63415])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [63415 63427]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63372 63429])
            ("PetscObjectPrintClassNamePrefixType" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63494 63506])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63506 63518]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63443 63519])
            ("PetscObjectView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63564 63576])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63576 63588]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63533 63589])
            ("PetscObjectQueryFunction" variable (:constant-flag t) nil [63598 63622])
            ("PetscObjectQueryFunction_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63773 63785])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [63785 63797])
                    (nil variable (:pointer (("" variable (:type "void") (reparse-symbol arg-sub-list) [63808 63813])) :type "void") (reparse-symbol arg-sub-list) [63798 63814]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63725 63815])
            ("PetscObjectSetOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63872 63884])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [63884 63896]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63829 63898])
            ("PetscObjectAppendOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63958 63970])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [63970 63982]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63912 63984])
            ("PetscObjectPrependOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64045 64057])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [64057 64069]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [63998 64071])
            ("PetscObjectGetOptionsPrefix" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64128 64140])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [64140 64153]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [64085 64155])
            ("PetscObjectChangeTypeName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64210 64222])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [64222 64234]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [64169 64236])
            ("PetscObjectRegisterDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64292 64304]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [64250 64305])
            ("PetscObjectRegisterDestroyAll" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [64364 64369]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [64319 64370])
            ("PetscObjectViewFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64426 64438])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64438 64450])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [64450 64462]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [64384 64464])
            ("PetscObjectName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64509 64521]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [64478 64522])
            ("PetscObjectTypeCompare" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64574 64586])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [64586 64598])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [64599 64611]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [64536 64612])
            ("PetscObjectTypeCompareAny" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64667 64679])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [64679 64690])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [64690 64702])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [64703 64707]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [64626 64708])
            ("PetscRegisterFinalize" function
               (:prototype-flag t
                :arguments 
                  ( ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [64778 64783]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [64722 64785])
            ("PetscRegisterFinalizeAll" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [64839 64844]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [64799 64845])
            ("PetscSAWsBlock" variable (:constant-flag t) nil [65514 65528])
            ("PetscObjectSAWsViewOff" variable (:constant-flag t) nil [65564 65586])
            ("PetscObjectSAWsSetBlock" variable (:constant-flag t) nil [65614 65637])
            ("PetscObjectSAWsBlock" variable (:constant-flag t) nil [65664 65684])
            ("PetscObjectSAWsGrantAccess" variable (:constant-flag t) nil [65714 65740])
            ("PetscObjectSAWsTakeAccess" variable (:constant-flag t) nil [65764 65789])
            ("PetscStackViewSAWs" variable (:constant-flag t) nil [65814 65832])
            ("PetscStackSAWsViewOff" variable (:constant-flag t) nil [65864 65885])
            ("PetscStackSAWsTakeAccess" variable (:constant-flag t) nil [65914 65938])
            ("PetscStackSAWsGrantAccess" variable (:constant-flag t) nil [65949 65974])
            ("PetscDLHandle" type
               (:typedef ("void")
                :pointer 1
                :type "typedef")
                nil [65986 66014])
            ("PetscDLMode" type
               (:typedef ("" type
                     (:members 
                        ( ("PETSC_DL_DECIDE" variable
                             (:constant-flag t
                              :default-value (66045 66046)
                              :type "int")
                              (reparse-symbol enumsubparts) [66029 66046])
                          ("PETSC_DL_NOW" variable
                             (:constant-flag t
                              :default-value (66060 66061)
                              :type "int")
                              (reparse-symbol enumsubparts) [66047 66061])
                          ("PETSC_DL_LOCAL" variable
                             (:constant-flag t
                              :default-value (66077 66078)
                              :type "int")
                              (reparse-symbol enumsubparts) [66062 66078]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [66015 66092])
            ("PetscDLOpen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [66133 66145])
                    ("" variable (:type ("PetscDLMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66146 66158])
                    ("" variable
                       (:pointer 1
                        :type ("PetscDLHandle" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [66158 66174]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [66106 66175])
            ("PetscDLClose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscDLHandle" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [66217 66233]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [66189 66234])
            ("PetscDLSym" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscDLHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66274 66288])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [66288 66300])
                    ("" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) [66301 66309]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [66248 66310])
            ("PetscObjectsDump" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [66462 66468])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66468 66478]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [66430 66479])
            ("PetscObjectList" type
               (:typedef ("_n_PetscObjectList" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [66800 66851])
            ("PetscObjectListDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscObjectList" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [66904 66921]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [66866 66922])
            ("PetscObjectListFind" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObjectList" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66971 66987])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [66987 66999])
                    ("" variable
                       (:pointer 1
                        :type ("PetscObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [67000 67013]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [66936 67014])
            ("PetscObjectListReverseFind" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObjectList" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67070 67086])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67086 67098])
                    ("" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [67098 67105])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [67105 67116]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [67028 67117])
            ("PetscObjectListAdd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscObjectList" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [67165 67183])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [67183 67195])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67196 67208]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [67131 67209])
            ("PetscObjectListRemoveReference" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscObjectList" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [67269 67287])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [67287 67299]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [67223 67301])
            ("PetscObjectListDuplicate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObjectList" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67355 67371])
                    ("" variable
                       (:pointer 1
                        :type ("PetscObjectList" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [67371 67389]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [67315 67390])
            ("PetscFunctionListAdd" variable (:constant-flag t) nil [67534 67554])
            ("PetscFunctionListAdd_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscFunctionList" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [67698 67717])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [67717 67729])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [67739 67744]))                          
                        :type "void")
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [67654 67746])
            ("PetscFunctionListDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscFunctionList" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [67800 67819]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [67760 67820])
            ("PetscFunctionListFind" variable (:constant-flag t) nil [67829 67850])
            ("PetscFunctionListFind_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67997 68015])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68015 68027])
                    (nil variable (:pointer (("" variable (:type "void") (reparse-symbol arg-sub-list) [68038 68043])) :type "void") (reparse-symbol arg-sub-list) [68028 68044]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [67952 68045])
            ("PetscFunctionListPrintTypes" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68102 68111])
                    ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [68111 68117])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68117 68129])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68130 68142])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68143 68155])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68156 68168])
                    ("" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68169 68187])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68187 68199]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [68059 68201])
            ("PetscFunctionListDuplicate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68257 68275])
                    ("" variable
                       (:pointer 1
                        :type ("PetscFunctionList" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [68275 68295]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [68215 68296])
            ("PetscFunctionListView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68347 68365])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68365 68377]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [68310 68378])
            ("PetscFunctionListGet" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68428 68446])
                    ("" variable
                       (:pointer 3
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68446 68461])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [68461 68466]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [68392 68467])
            ("PetscDLLibrary" type
               (:typedef ("_n_PetscDLLibrary" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [68610 68659])
            ("PetscDLLibrariesLoaded" variable (:type ("PetscDLLibrary" type (:type "class") nil nil)) nil [68673 68712])
            ("PetscDLLibraryAppend" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68762 68771])
                    ("" variable
                       (:pointer 1
                        :type ("PetscDLLibrary" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [68771 68788])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68788 68800]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [68726 68802])
            ("PetscDLLibraryPrepend" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68853 68862])
                    ("" variable
                       (:pointer 1
                        :type ("PetscDLLibrary" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [68862 68879])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68879 68891]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [68816 68893])
            ("PetscDLLibrarySym" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68940 68949])
                    ("" variable
                       (:pointer 1
                        :type ("PetscDLLibrary" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [68949 68966])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68966 68978])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [68979 68991])
                    ("" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) [68992 69000]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [68907 69001])
            ("PetscDLLibraryPrintPath" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscDLLibrary" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69054 69069]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [69015 69070])
            ("PetscDLLibraryRetrieve" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69122 69131])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [69131 69143])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [69144 69151])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69151 69158])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [69158 69171]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [69084 69172])
            ("PetscDLLibraryOpen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69220 69229])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [69229 69241])
                    ("" variable
                       (:pointer 1
                        :type ("PetscDLLibrary" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [69242 69259]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [69186 69260])
            ("PetscDLLibraryClose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscDLLibrary" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69309 69324]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [69274 69325])
            ("PetscSplitOwnership" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69410 69419])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [69419 69429])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [69429 69439]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [69375 69440])
            ("PetscSplitOwnershipBlock" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69494 69503])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69503 69512])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [69512 69522])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [69522 69532]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [69454 69533])
            ("PetscSequentialPhaseBegin" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69588 69597])
                    ("" variable (:type ("PetscMPIInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69597 69609]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [69547 69610])
            ("PetscSequentialPhaseEnd" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69663 69672])
                    ("" variable (:type ("PetscMPIInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69672 69684]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [69624 69685])
            ("PetscBarrier" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69727 69739]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [69699 69740])
            ("PetscMPIDump" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [69782 69788]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [69754 69789])
            ("PetscNot" variable (:constant-flag t) nil [70085 70093])
            ("PetscHelpPrintf" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70659 70668])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [70668 70680])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [70681 70685]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [70625 70686])
            ("petsclog.h" include (:system-flag t) nil [70724 70745])
            ("PetscFixFilename" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [70848 70860])
                    ("" variable (:type "char") (reparse-symbol arg-sub-list) [70861 70867]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [70816 70869])
            ("PetscFOpen" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70909 70918])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [70918 70930])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [70931 70943])
                    ("" variable
                       (:pointer 2
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [70944 70951]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [70883 70952])
            ("PetscFClose" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70993 71002])
                    ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [71002 71008]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [70966 71009])
            ("PetscFPrintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71051 71060])
                    ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [71060 71066])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [71066 71078])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [71079 71083]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71023 71084])
            ("PetscPrintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71125 71134])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [71134 71146])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [71147 71151]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71098 71152])
            ("PetscSNPrintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [71195 71201])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71201 71208])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [71208 71221])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [71222 71226]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71166 71227])
            ("PetscSNPrintfCount" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [71275 71281])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71281 71288])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [71288 71301])
                    ("" variable
                       (:pointer 1
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [71302 71310])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [71310 71314]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71241 71315])
            ("stdarg.h" include (:system-flag t) nil [71375 71394])
            ("PetscVSNPrintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [71438 71444])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71444 71451])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [71451 71463])
                    ("" variable
                       (:pointer 1
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [71464 71472])
                    ("" variable (:type ("va_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71472 71480]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71408 71481])
            ("PetscVFPrintf" function
               (:prototype-flag t
                :function-pointer t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [71527 71533])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [71533 71545])
                    ("" variable (:type ("va_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71546 71554]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71495 71555])
            ("PetscVFPrintfDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [71605 71611])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [71611 71623])
                    ("" variable (:type ("va_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71624 71632]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71569 71633])
            ("PetscErrorPrintfDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [71927 71940])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [71941 71945]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71888 71946])
            ("PetscErrorPrintfNone" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [71996 72009])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [72010 72014]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [71960 72015])
            ("PetscHelpPrintfDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72067 72076])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [72076 72089])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [72090 72094]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72029 72095])
            ("PetscSynchronizedPrintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72410 72419])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [72419 72431])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [72432 72436]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72371 72437])
            ("PetscSynchronizedFPrintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72491 72500])
                    ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72500 72506])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [72506 72518])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [72519 72523]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72451 72524])
            ("PetscSynchronizedFlush" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72576 72585])
                    ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72585 72591]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72538 72592])
            ("PetscSynchronizedFGets" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72644 72653])
                    ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72653 72659])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72659 72666])
                    ("" variable (:type "char") (reparse-symbol arg-sub-list) [72666 72672]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72606 72674])
            ("PetscStartMatlab" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72720 72729])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [72729 72741])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [72742 72754])
                    ("" variable
                       (:pointer 2
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72755 72762]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72688 72763])
            ("PetscStartJava" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72807 72816])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [72816 72828])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [72829 72841])
                    ("" variable
                       (:pointer 2
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72842 72849]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72777 72850])
            ("PetscGetPetscDir" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [72896 72909]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72864 72911])
            ("PetscPopUpSelect" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72958 72967])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [72967 72979])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [72979 72991])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [72991 72995])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [72995 73008])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [73008 73013]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [72926 73014])
            ("PETSC_CONTAINER_CLASSID" variable (:type ("PetscClassId" type (:type "class") nil nil)) nil [73192 73229])
            ("PetscContainer" type
               (:typedef ("_p_PetscContainer" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [73230 73280])
            ("PetscContainerGetPointer" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73334 73349])
                    ("" variable
                       (:pointer 2
                        :type "void")
                        (reparse-symbol arg-sub-list) [73349 73357]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73294 73358])
            ("PetscContainerSetPointer" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73412 73427])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [73427 73434]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73372 73435])
            ("PetscContainerDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscContainer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [73486 73502]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73449 73503])
            ("PetscContainerCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73553 73562])
                    ("" variable
                       (:pointer 1
                        :type ("PetscContainer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [73562 73579]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73517 73580])
            ("PetscContainerSetUserDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73638 73653])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [73673 73679]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73594 73681])
            ("PetscGlobalRank" variable (:type ("PetscMPIInt" type (:type "class") nil nil)) nil [73726 73754])
            ("PetscGlobalSize" variable (:type ("PetscMPIInt" type (:type "class") nil nil)) nil [73768 73796])
            ("PetscIntView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73838 73847])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [73847 73863])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73864 73876]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73810 73877])
            ("PetscRealView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73920 73929])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [73929 73946])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73947 73959]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73891 73960])
            ("PetscScalarView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74005 74014])
                    ("" variable
                       (:constant-flag t
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [74014 74033])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74034 74046]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [73974 74047])
            ("stddef.h" include (:system-flag t) nil [74049 74068])
            ("string.h" include (:system-flag t) nil [74069 74088])
            ("__FUNCT__" variable (:constant-flag t) nil [74303 74312])
            ("PetscMemcpy" function
               (:arguments 
                  ( ("a" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [75421 75429])
                    ("b" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [75429 75443])
                    ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75443 75452]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [75394 77059])
            ("PetscMemzero" function
               (:arguments 
                  ( ("a" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [77665 77673])
                    ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77673 77682]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [77636 117687]))          
      :file "petscsys.h"
      :pointmax 117687
      :fsize 117686
      :lastmodtime '(23160 35761 0 0)
      :unmatched-syntax '((symbol "PETSC_CXX_STATIC_INLINE" 77616 . 77635) (symbol "PETSC_CXX_STATIC_INLINE" 75374 . 75393) (semantic-list 74031 . 74033) (semantic-list 73944 . 73946) (semantic-list 73861 . 73863) (semantic-list 72907 . 72909) (semantic-list 72839 . 72841) (semantic-list 72826 . 72828) (semantic-list 72752 . 72754) (semantic-list 72739 . 72741) (semantic-list 72670 . 72672) (semantic-list 72516 . 72518) (semantic-list 72429 . 72431) (semantic-list 72087 . 72089) (semantic-list 72007 . 72009) (semantic-list 71938 . 71940) (semantic-list 71621 . 71623) (semantic-list 71543 . 71545) (semantic-list 71461 . 71463) (semantic-list 71299 . 71301) (semantic-list 71219 . 71221) (semantic-list 71144 . 71146) (semantic-list 71076 . 71078) (semantic-list 70941 . 70943) (semantic-list 70928 . 70930) (semantic-list 70865 . 70867) (semantic-list 70858 . 70860) (semantic-list 70678 . 70680) (semantic-list 69239 . 69241) (semantic-list 69141 . 69143) (semantic-list 68989 . 68991) (semantic-list 68976 . 68978) (semantic-list 68889 . 68891) (semantic-list 68798 . 68800) (semantic-list 68197 . 68199) (semantic-list 68166 . 68168) (semantic-list 68153 . 68155) (semantic-list 68140 . 68142) (semantic-list 68127 . 68129) (semantic-list 68025 . 68027) (semantic-list 67727 . 67729) (semantic-list 67297 . 67299) (semantic-list 67193 . 67195) (semantic-list 66997 . 66999) (semantic-list 66298 . 66300) (semantic-list 66143 . 66145) (semantic-list 64700 . 64702) (semantic-list 64596 . 64598) (semantic-list 64460 . 64462) (semantic-list 64232 . 64234) (semantic-list 64151 . 64153) (semantic-list 64067 . 64069) (semantic-list 63980 . 63982) (semantic-list 63894 . 63896) (semantic-list 63795 . 63797) (semantic-list 63425 . 63427) (semantic-list 63354 . 63356) (semantic-list 62626 . 62628) (semantic-list 62522 . 62524) (semantic-list 62450 . 62452) (semantic-list 62356 . 62358) (semantic-list 61760 . 61762) (semantic-list 61685 . 61687) (semantic-list 61611 . 61613) (semantic-list 61454 . 61456) (semantic-list 61379 . 61381) (TYPEDEF 60979 . 60986) (TYPEDEF 60917 . 60924) (punctuation 60894 . 60895) (semantic-list 60888 . 60894) (semantic-list 60863 . 60888) (VOID 60858 . 60862) (TYPEDEF 60850 . 60857) (semantic-list 60641 . 60643) (semantic-list 60452 . 60454) (semantic-list 60439 . 60441) (semantic-list 59811 . 59813) (semantic-list 59798 . 59800) (semantic-list 59718 . 59720) (semantic-list 59705 . 59707) (semantic-list 59548 . 59550) (semantic-list 59477 . 59479) (semantic-list 59124 . 59126) (semantic-list 56598 . 56600) (semantic-list 55824 . 55826) (semantic-list 55736 . 55738) (semantic-list 55457 . 55459) (semantic-list 55444 . 55446) (semantic-list 55384 . 55386) (semantic-list 55377 . 55379) (semantic-list 55015 . 55017) (semantic-list 55006 . 55008) (semantic-list 54918 . 54920) (semantic-list 54842 . 54844) (semantic-list 54829 . 54831) (semantic-list 54756 . 54758) (semantic-list 54743 . 54745) (semantic-list 54683 . 54685) (semantic-list 54674 . 54676) (semantic-list 54661 . 54663) (semantic-list 54605 . 54607) (semantic-list 54596 . 54598) (semantic-list 54583 . 54585) (semantic-list 54528 . 54530) (semantic-list 54514 . 54516) (semantic-list 54458 . 54460) (semantic-list 54405 . 54407) (semantic-list 54352 . 54354) (semantic-list 54338 . 54340) (semantic-list 54276 . 54278) (semantic-list 54263 . 54265) (semantic-list 54206 . 54208) (semantic-list 54193 . 54195) (semantic-list 54143 . 54145) (semantic-list 54130 . 54132) (semantic-list 54081 . 54083) (semantic-list 54068 . 54070) (semantic-list 54000 . 54002) (semantic-list 53987 . 53989) (semantic-list 53919 . 53921) (semantic-list 53906 . 53908) (semantic-list 53834 . 53836) (semantic-list 53821 . 53823) (semantic-list 53753 . 53755) (semantic-list 53740 . 53742) (semantic-list 53601 . 53603) (semantic-list 53534 . 53536) (semantic-list 51334 . 51336) (semantic-list 51321 . 51323) (semantic-list 50492 . 50494) (semantic-list 50479 . 50481) (semantic-list 50429 . 50431) (semantic-list 50416 . 50418) (semantic-list 50328 . 50330) (semantic-list 50315 . 50317) (semantic-list 50240 . 50242) (semantic-list 50227 . 50229) (string 11403 . 11440) (symbol 11397 . 11402) (punctuation 11396 . 11397))
      :lexical-table 
        '(("PETSC_DLLIMPORT")
          ("PETSC_AUTHOR_INFO" . ((string "\"       The PETSc Team\\n    petsc-maint@mcs.anl.gov\\n http://www.mcs.anl.gov/petsc/\\n\"" 4092 . 4178)))
          ("PETSC_DEFAULT" . ((punctuation "-" 19508 . 19509) (number "2" 19509 . 19510)))
          ("PetscMalloc3" (spp-arg-list ("m1" "r1" "m2" "r2" "m3" "r3") 25948 . 25967) . ((semantic-list "(PetscMalloc1((m1),(r1)) || PetscMalloc1((m2),(r2)) || PetscMalloc1((m3),(r3)))" 25968 . 26047)))
          ("PetscObjectSAWsTakeAccess" (spp-arg-list ("obj") 65789 . 65794) . ((number "0" 65804 . 65805)))
          ("PetscCalloc1" (spp-arg-list ("m1" "r1") 23193 . 23200) . ((semantic-list "(PetscMalloc1((m1),r1) || PetscMemzero(*(r1),(m1)*sizeof(**(r1))))" 23201 . 23267)))
          ("PetscMalloc4" (spp-arg-list ("m1" "r1" "m2" "r2" "m3" "r3" "m4" "r4") 28511 . 28536) . ((semantic-list "(PetscMalloc1((m1),(r1)) || PetscMalloc1((m2),(r2)) || PetscMalloc1((m3),(r3)) || PetscMalloc1((m4),(r4)))" 28537 . 28643)))
          ("PetscStackSAWsGrantAccess" (spp-arg-list nil 65974 . 65976))
          ("PETSC_FUNCTION_NAME" . ((symbol "PETSC_FUNCTION_NAME_CXX" 1556 . 1579)))
          ("PetscCalloc2" (spp-arg-list ("m1" "r1" "m2" "r2") 24998 . 25011) . ((semantic-list "(PetscMalloc2((m1),(r1),(m2),(r2)) || PetscMemzero(*(r1),(m1)*sizeof(**(r1))) || PetscMemzero(*(r2),(m2)*sizeof(**(r2))))" 25012 . 25133)))
          ("PetscMalloc5" (spp-arg-list ("m1" "r1" "m2" "r2" "m3" "r3" "m4" "r4" "m5" "r5") 31482 . 31513) . ((semantic-list "(PetscMalloc1((m1),(r1)) || PetscMalloc1((m2),(r2)) || PetscMalloc1((m3),(r3)) || PetscMalloc1((m4),(r4)) || PetscMalloc1((m5),(r5)))" 31514 . 31647)))
          ("PetscNew" (spp-arg-list ("b") 41984 . 41987) . ((symbol "PetscCalloc1" 41993 . 42005) (semantic-list "(1,(b))" 42005 . 42012)))
          ("PetscObjectSAWsViewOff" (spp-arg-list ("obj") 65586 . 65591) . ((number "0" 65604 . 65605)))
          ("PETSC_STATIC_INLINE" . ((symbol "PETSC_CXX_STATIC_INLINE" 2289 . 2312)))
          ("PETSC_EXTERN" . 
              ((EXTERN "extern" 3757 . 3763) (string "\"C\"" 3764 . 3767) (symbol "PETSC_VISIBILITY_PUBLIC" 3768 . 3791)))
          ("PETSC_EXTERN_TYPEDEF" . ((EXTERN "extern" 3821 . 3827) (string "\"C\"" 3828 . 3831)))
          ("PetscAttrMPIPointerWithType" (spp-arg-list ("bufno" "typeno") 8625 . 8639))
          ("PETSC_NULL" . ((symbol "NULL" 18014 . 18018)))
          ("PetscCalloc3" (spp-arg-list ("m1" "r1" "m2" "r2" "m3" "r3") 27308 . 27327) . ((semantic-list "(PetscMalloc3((m1),(r1),(m2),(r2),(m3),(r3))                          \\
   || PetscMemzero(*(r1),(m1)*sizeof(**(r1))) || PetscMemzero(*(r2),(m2)*sizeof(**(r2))) || PetscMemzero(*(r3),(m3)*sizeof(**(r3))))" 27364 . 27568)))
          ("PetscMalloc6" (spp-arg-list ("m1" "r1" "m2" "r2" "m3" "r3" "m4" "r4" "m5" "r5" "m6" "r6") 34903 . 34940) . ((semantic-list "(PetscMalloc1((m1),(r1)) || PetscMalloc1((m2),(r2)) || PetscMalloc1((m3),(r3)) || PetscMalloc1((m4),(r4)) || PetscMalloc1((m5),(r5)) || PetscMalloc1((m6),(r6)))" 34941 . 35101)))
          ("PetscFree2" (spp-arg-list ("m1" "m2") 44260 . 44267) . ((semantic-list "(PetscFree(m2) || PetscFree(m1))" 44270 . 44302)))
          ("PetscObjectQueryFunction" (spp-arg-list ("obj" "name" "fptr") 63622 . 63637) . ((symbol "PetscObjectQueryFunction_Private" 63638 . 63670) (semantic-list "((obj),(name),(PetscVoidFunction*)(fptr))" 63670 . 63711)))
          ("PetscObjectSAWsSetBlock" (spp-arg-list ("obj" "flg") 65637 . 65646) . ((number "0" 65654 . 65655)))
          ("PetscNot" (spp-arg-list ("a") 70093 . 70096) . ((semantic-list "((a) ? PETSC_FALSE : PETSC_TRUE)" 70097 . 70129)))
          ("PetscCalloc4" (spp-arg-list ("m1" "r1" "m2" "r2" "m3" "r3" "m4" "r4") 30104 . 30129) . ((semantic-list "(PetscMalloc4(m1,r1,m2,r2,m3,r3,m4,r4)                                \\
   || PetscMemzero(*(r1),(m1)*sizeof(**(r1))) || PetscMemzero(*(r2),(m2)*sizeof(**(r2))) || PetscMemzero(*(r3),(m3)*sizeof(**(r3))) \\
   || PetscMemzero(*(r4),(m4)*sizeof(**(r4))))" 30160 . 30412)))
          ("PetscMalloc7" (spp-arg-list ("m1" "r1" "m2" "r2" "m3" "r3" "m4" "r4" "m5" "r5" "m6" "r6" "m7" "r7") 38739 . 38782) . ((semantic-list "(PetscMalloc1((m1),(r1)) || PetscMalloc1((m2),(r2)) || PetscMalloc1((m3),(r3)) || PetscMalloc1((m4),(r4)) || PetscMalloc1((m5),(r5)) || PetscMalloc1((m6),(r6)) || PetscMalloc1((m7),(r7)))" 38783 . 38970)))
          ("PetscNewLog" (spp-arg-list ("o" "b") 42626 . 42631) . ((semantic-list "(PetscNew((b)) || PetscLogObjectMemory((PetscObject)o,sizeof(**(b))))" 42632 . 42701)))
          ("PetscFree3" (spp-arg-list ("m1" "m2" "m3") 44984 . 44994) . ((semantic-list "(PetscFree(m3) || PetscFree(m2) || PetscFree(m1))" 44997 . 45046)))
          ("PetscObjectComposeFunction" (spp-arg-list ("a" "b" "d") 62680 . 62687) . ((symbol "PetscObjectComposeFunction_Private" 62688 . 62722) (semantic-list "(a,b,(PetscVoidFunction)(d))" 62722 . 62750)))
          ("PetscObjectSAWsGrantAccess" (spp-arg-list ("obj") 65740 . 65745) . ((number "0" 65754 . 65755)))
          ("PETSC_VISIBILITY_PUBLIC" . ((symbol "PETSC_DLLIMPORT" 3488 . 3503)))
          ("MPIU_INT" . ((symbol "MPI_INT" 11626 . 11633)))
          ("PetscCalloc5" (spp-arg-list ("m1" "r1" "m2" "r2" "m3" "r3" "m4" "r4" "m5" "r5") 33313 . 33344) . ((semantic-list "(PetscMalloc5(m1,r1,m2,r2,m3,r3,m4,r4,m5,r5)                          \\
   || PetscMemzero(*(r1),(m1)*sizeof(**(r1))) || PetscMemzero(*(r2),(m2)*sizeof(**(r2))) || PetscMemzero(*(r3),(m3)*sizeof(**(r3))) \\
   || PetscMemzero(*(r4),(m4)*sizeof(**(r4))) || PetscMemzero(*(r5),(m5)*sizeof(**(r5))))" 33369 . 33664)))
          ("PetscFree4" (spp-arg-list ("m1" "m2" "m3" "m4") 45809 . 45822) . ((semantic-list "(PetscFree(m4) || PetscFree(m3) || PetscFree(m2) || PetscFree(m1))" 45825 . 45891)))
          ("MPIU_SUM" . ((symbol "MPI_SUM" 56358 . 56365)))
          ("MPIAPI")
          ("PetscCalloc6" (spp-arg-list ("m1" "r1" "m2" "r2" "m3" "r3" "m4" "r4" "m5" "r5" "m6" "r6") 37019 . 37056) . ((semantic-list "(PetscMalloc6(m1,r1,m2,r2,m3,r3,m4,r4,m5,r5,m6,r6)                    \\
   || PetscMemzero(*(r1),(m1)*sizeof(**(r1))) || PetscMemzero(*(r2),(m2)*sizeof(**(r2))) || PetscMemzero(*(r3),(m3)*sizeof(**(r3))) \\
   || PetscMemzero(*(r4),(m4)*sizeof(**(r4))) || PetscMemzero(*(r5),(m5)*sizeof(**(r5))) || PetscMemzero(*(r6),(m6)*sizeof(**(r6))))" 37075 . 37413)))
          ("PetscFree" (spp-arg-list ("a") 43190 . 43193) . ((semantic-list "((*PetscTrFree)((void*)(a),__LINE__,PETSC_FUNCTION_NAME,__FILE__) || ((a) = 0,0))" 43196 . 43277)))
          ("PetscFree5" (spp-arg-list ("m1" "m2" "m3" "m4" "m5") 46779 . 46795) . ((semantic-list "(PetscFree(m5) || PetscFree(m4) || PetscFree(m3) || PetscFree(m2) || PetscFree(m1))" 46798 . 46881)))
          ("MPIU_MAX" . ((symbol "MPI_MAX" 56495 . 56502)))
          ("PETSC_SMALLEST_CLASSID" . ((number "1211211" 58960 . 58967)))
          ("PetscStackSAWsViewOff" (spp-arg-list nil 65885 . 65887) . ((number "0" 65904 . 65905)))
          ("__FUNCT__" . ((string "\"PetscMemcpy\"" 74313 . 74326)))
          ("OMPI_SKIP_MPICXX" . ((number "1" 4804 . 4805)))
          ("OMPI_WANT_MPI_INTERFACE_WARNING" . ((number "0" 4901 . 4902)))
          ("PetscCalloc7" (spp-arg-list ("m1" "r1" "m2" "r2" "m3" "r3" "m4" "r4" "m5" "r5" "m6" "r6" "m7" "r7") 41132 . 41175) . ((semantic-list "(PetscMalloc7(m1,r1,m2,r2,m3,r3,m4,r4,m5,r5,m6,r6,m7,r7)              \\
   || PetscMemzero(*(r1),(m1)*sizeof(**(r1))) || PetscMemzero(*(r2),(m2)*sizeof(**(r2))) || PetscMemzero(*(r3),(m3)*sizeof(**(r3))) \\
   || PetscMemzero(*(r4),(m4)*sizeof(**(r4))) || PetscMemzero(*(r5),(m5)*sizeof(**(r5))) || PetscMemzero(*(r6),(m6)*sizeof(**(r6))) \\
   || PetscMemzero(*(r7),(m7)*sizeof(**(r7))))" 41188 . 41574)))
          ("PetscFree6" (spp-arg-list ("m1" "m2" "m3" "m4" "m5" "m6") 47949 . 47968) . ((semantic-list "(PetscFree(m6) || PetscFree(m5) || PetscFree(m4) || PetscFree(m3) || PetscFree(m2) || PetscFree(m1))" 47971 . 48071)))
          ("MPIU_MIN" . ((symbol "MPI_MIN" 56520 . 56527)))
          ("PetscInt_FMT" . ((string "\"d\"" 11655 . 11658)))
          ("PetscAddrAlign" (spp-arg-list ("a") 22056 . 22059) . ((semantic-list "(void*)" 22060 . 22067) (semantic-list "((((PETSC_UINTPTR_T)(a))+(PETSC_MEMALIGN-1)) & ~(PETSC_MEMALIGN-1))" 22067 . 22134)))
          ("PetscFree7" (spp-arg-list ("m1" "m2" "m3" "m4" "m5" "m6" "m7") 49346 . 49368) . ((semantic-list "(PetscFree(m7) || PetscFree(m6) || PetscFree(m5) || PetscFree(m4) || PetscFree(m3) || PetscFree(m2) || PetscFree(m1))" 49371 . 49488)))
          ("__PETSCSYS_H")
          ("PETSC_INTERN" . 
              ((EXTERN "extern" 3853 . 3859) (string "\"C\"" 3860 . 3863) (symbol "PETSC_VISIBILITY_INTERNAL" 3864 . 3889)))
          ("MPICH_SKIP_MPICXX" . ((number "1" 4737 . 4738)))
          ("PetscAttrMPITypeTagLayoutCompatible" (spp-arg-list ("type") 8721 . 8727))
          ("PetscUnlikely" (spp-arg-list ("cond") 15451 . 15457) . ((semantic-list "(cond)" 15460 . 15466)))
          ("PETSC_DECIDE" . ((punctuation "-" 18711 . 18712) (number "1" 18712 . 18713)))
          ("PetscMalloc" (spp-arg-list ("a" "b") 21629 . 21634) . ((semantic-list "((*PetscTrMalloc)((a),__LINE__,PETSC_FUNCTION_NAME,__FILE__,(void**)(b)))" 21636 . 21709)))
          ("PetscFunctionListAdd" (spp-arg-list ("list" "name" "fptr") 67554 . 67570) . ((symbol "PetscFunctionListAdd_Private" 67571 . 67599) (semantic-list "((list),(name),(PetscVoidFunction)(fptr))" 67599 . 67640)))
          ("PETSC_DLLEXPORT")
          ("PETSC_VISIBILITY_INTERNAL")
          ("MPIU_SIZE_T" . ((symbol "MPI_UNSIGNED_LONG_LONG" 13913 . 13935)))
          ("PetscFreeVoid" (spp-arg-list ("a") 43667 . 43670) . ((semantic-list "((*PetscTrFree)((a),__LINE__,PETSC_FUNCTION_NAME,__FILE__),(a) = 0)" 43671 . 43738)))
          ("PetscObjectSAWsBlock" (spp-arg-list ("obj") 65684 . 65689) . ((number "0" 65704 . 65705)))
          ("PETSC_RESTRICT" . ((symbol "PETSC_CXX_RESTRICT" 2159 . 2177)))
          ("PETSC_IGNORE" . ((symbol "NULL" 18455 . 18459)))
          ("PETSC_COMM_SELF" . ((symbol "MPI_COMM_SELF" 20479 . 20492)))
          ("PetscMalloc1" (spp-arg-list ("m1" "r1") 22634 . 22641) . ((symbol "PetscMalloc" 22642 . 22653) (semantic-list "((m1)*sizeof(**(r1)),r1)" 22653 . 22677)))
          ("MPIU_PETSCLOGDOUBLE" . ((symbol "MPI_DOUBLE" 50778 . 50788)))
          ("PETSC_SCALAR" . ((symbol "PETSC_DOUBLE" 52436 . 52448)))
          ("PETSC_FORTRANADDR" . ((symbol "PETSC_LONG" 52685 . 52695)))
          ("PetscFunctionListFind" (spp-arg-list ("list" "name" "fptr") 67850 . 67866) . ((symbol "PetscFunctionListFind_Private" 67867 . 67896) (semantic-list "((list),(name),(PetscVoidFunction*)(fptr))" 67896 . 67938)))
          ("PetscAttrMPITypeTag" (spp-arg-list ("type") 8669 . 8675))
          ("PetscLikely" (spp-arg-list ("cond") 15488 . 15494) . ((semantic-list "(cond)" 15499 . 15505)))
          ("PETSC_DETERMINE" . ((symbol "PETSC_DECIDE" 19175 . 19187)))
          ("PetscMalloc2" (spp-arg-list ("m1" "r1" "m2" "r2") 23941 . 23954) . ((semantic-list "(PetscMalloc1((m1),(r1)) || PetscMalloc1((m2),(r2)))" 23955 . 24007)))
          ("PETSC_REAL" . ((symbol "PETSC_DOUBLE" 52637 . 52649)))
          ("PetscSAWsBlock" (spp-arg-list nil 65528 . 65530) . ((number "0" 65554 . 65555)))
          ("PetscStackViewSAWs" (spp-arg-list nil 65832 . 65834) . ((number "0" 65854 . 65855)))
          ("PetscStackSAWsTakeAccess" (spp-arg-list nil 65938 . 65940))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_PETSCSFTYPES_H" variable (:constant-flag t) nil [39 54])
            ("PetscSF" type
               (:typedef ("_p_PetscSF" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [611 646])
            ("PetscSFNode" type
               (:typedef ("" type
                     (:members 
                        ( ("rank" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [814 828])
                          ("index" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [866 881]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [795 938]))          
      :file "petscsftypes.h"
      :pointmax 947
      :fsize 946
      :lastmodtime '(22329 14111 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_PETSCSFTYPES_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_PETSCISTYPES_H" variable (:constant-flag t) nil [39 54])
            ("IS" type
               (:typedef ("_p_IS" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [262 287])
            ("ISLocalToGlobalMapping" type
               (:typedef ("_p_ISLocalToGlobalMapping" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [865 930])
            ("ISColoring" type
               (:typedef ("_n_ISColoring" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [1393 1434])
            ("PetscLayout" type
               (:typedef ("_n_PetscLayout" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [1637 1680])
            ("PetscSection" type
               (:typedef ("_p_PetscSection" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [2486 2531]))          
      :file "petscistypes.h"
      :pointmax 2540
      :fsize 2539
      :lastmodtime '(22329 14111 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_PETSCISTYPES_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_PETSCVIEWERTYPES_H" variable (:constant-flag t) nil [128 147])
            ("PetscViewer" type
               (:typedef ("_p_PetscViewer" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [391 434]))          
      :file "petscviewertypes.h"
      :pointmax 443
      :fsize 442
      :lastmodtime '(21518 31119 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_PETSCVIEWERTYPES_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("INCLUDED_PETSCCONF_H" variable (:constant-flag t) nil [44 64])
            ("IS_COLORING_MAX" variable (:constant-flag t) nil [98 113])
            ("MPIU_COLORING_VALUE" variable (:constant-flag t) nil [216 235])
            ("PETSC_UINTPTR_T" variable (:constant-flag t) nil [295 310])
            ("PETSC_HAVE_PTHREAD" variable (:constant-flag t) nil [364 382])
            ("PETSC_HAVE_SSL" variable (:constant-flag t) nil [424 438])
            ("PETSC_DEPRECATED" variable (:constant-flag t) nil [482 498])
            ("PETSC_HAVE_FFTW" variable (:constant-flag t) nil [570 585])
            ("PETSC_REPLACE_DIR_SEPARATOR" variable (:constant-flag t) nil [640 667])
            ("PETSC_HAVE_HDF5" variable (:constant-flag t) nil [713 728])
            ("PETSC_HAVE_SO_REUSEADDR" variable (:constant-flag t) nil [779 802])
            ("PETSC_HAVE_MPI" variable (:constant-flag t) nil [844 858])
            ("PETSC_PREFETCH_HINT_T2" variable (:constant-flag t) nil [908 930])
            ("PETSC_PREFETCH_HINT_T0" variable (:constant-flag t) nil [990 1012])
            ("PETSC_PREFETCH_HINT_T1" variable (:constant-flag t) nil [1072 1094])
            ("PETSC_HAVE_FORTRAN" variable (:constant-flag t) nil [1150 1168])
            ("PETSC_DIR" variable (:constant-flag t) nil [1205 1214])
            ("PETSC_HAVE_SUITESPARSE" variable (:constant-flag t) nil [1302 1324])
            ("PETSC_HAVE_HYPRE" variable (:constant-flag t) nil [1368 1384])
            ("PETSC_LIB_DIR" variable (:constant-flag t) nil [1425 1438])
            ("PETSC_USE_SOCKET_VIEWER" variable (:constant-flag t) nil [1539 1562])
            ("PETSC_USE_ISATTY" variable (:constant-flag t) nil [1606 1622])
            ("PETSC_SLSUFFIX" variable (:constant-flag t) nil [1664 1678])
            ("PETSC_HAVE_SUPERLU" variable (:constant-flag t) nil [1727 1745])
            ("PETSC_FUNCTION_NAME_CXX" variable (:constant-flag t) nil [1796 1819])
            ("PETSC_HAVE_MUMPS" variable (:constant-flag t) nil [1870 1886])
            ("PETSC_HAVE_ATOLL" variable (:constant-flag t) nil [1930 1946])
            ("PETSC_HAVE_ATTRIBUTEALIGNED" variable (:constant-flag t) nil [2001 2028])
            ("PETSC_HAVE_DOUBLE_ALIGN_MALLOC" variable (:constant-flag t) nil [2086 2116])
            ("PETSC_UNUSED" variable (:constant-flag t) nil [2156 2168])
            ("PETSC_ATTRIBUTEALIGNED" variable (:constant-flag t) nil [2238 2260])
            ("PETSC_FUNCTION_NAME_C" variable (:constant-flag t) nil [2343 2364])
            ("PETSC_USE_SINGLE_LIBRARY" variable (:constant-flag t) nil [2423 2447])
            ("PETSC_HAVE_BUILTIN_EXPECT" variable (:constant-flag t) nil [2500 2525])
            ("PETSC_HAVE_PTSCOTCH" variable (:constant-flag t) nil [2572 2591])
            ("PETSC_DIR_SEPARATOR" variable (:constant-flag t) nil [2638 2657])
            ("PETSC_PATH_SEPARATOR" variable (:constant-flag t) nil [2707 2727])
            ("PETSC_HAVE_XMMINTRIN_H" variable (:constant-flag t) nil [2779 2801])
            ("PETSC_PREFETCH_HINT_NTA" variable (:constant-flag t) nil [2852 2875])
            ("PETSC_Prefetch" variable (:constant-flag t) nil [2928 2942])
            ("PETSC_HAVE_BLASLAPACK" variable (:constant-flag t) nil [3031 3052])
            ("PETSC_HAVE_HWLOC" variable (:constant-flag t) nil [3096 3112])
            ("PETSC_HAVE_GZIP" variable (:constant-flag t) nil [3155 3170])
            ("PETSC_HAVE_STRING_H" variable (:constant-flag t) nil [3217 3236])
            ("PETSC_HAVE_SYS_TYPES_H" variable (:constant-flag t) nil [3286 3308])
            ("PETSC_HAVE_ENDIAN_H" variable (:constant-flag t) nil [3355 3374])
            ("PETSC_HAVE_SYS_PROCFS_H" variable (:constant-flag t) nil [3425 3448])
            ("PETSC_HAVE_DLFCN_H" variable (:constant-flag t) nil [3494 3512])
            ("PETSC_HAVE_SCHED_H" variable (:constant-flag t) nil [3558 3576])
            ("PETSC_HAVE_STDINT_H" variable (:constant-flag t) nil [3623 3642])
            ("PETSC_HAVE_LINUX_KERNEL_H" variable (:constant-flag t) nil [3695 3720])
            ("PETSC_HAVE_TIME_H" variable (:constant-flag t) nil [3765 3782])
            ("PETSC_HAVE_MATH_H" variable (:constant-flag t) nil [3827 3844])
            ("PETSC_HAVE_INTTYPES_H" variable (:constant-flag t) nil [3893 3914])
            ("PETSC_TIME_WITH_SYS_TIME" variable (:constant-flag t) nil [3966 3990])
            ("PETSC_HAVE_SYS_PARAM_H" variable (:constant-flag t) nil [4040 4062])
            ("PETSC_HAVE_PTHREAD_H" variable (:constant-flag t) nil [4110 4130])
            ("PETSC_HAVE_UNISTD_H" variable (:constant-flag t) nil [4177 4196])
            ("PETSC_HAVE_STDLIB_H" variable (:constant-flag t) nil [4243 4262])
            ("PETSC_HAVE_SYS_WAIT_H" variable (:constant-flag t) nil [4311 4332])
            ("PETSC_HAVE_SETJMP_H" variable (:constant-flag t) nil [4379 4398])
            ("PETSC_HAVE_LIMITS_H" variable (:constant-flag t) nil [4445 4464])
            ("PETSC_HAVE_SYS_UTSNAME_H" variable (:constant-flag t) nil [4516 4540])
            ("PETSC_HAVE_NETINET_IN_H" variable (:constant-flag t) nil [4591 4614])
            ("PETSC_HAVE_SYS_SOCKET_H" variable (:constant-flag t) nil [4665 4688])
            ("PETSC_HAVE_FLOAT_H" variable (:constant-flag t) nil [4734 4752])
            ("PETSC_HAVE_SEARCH_H" variable (:constant-flag t) nil [4799 4818])
            ("PETSC_HAVE_SYS_RESOURCE_H" variable (:constant-flag t) nil [4871 4896])
            ("PETSC_HAVE_SYS_TIMES_H" variable (:constant-flag t) nil [4946 4968])
            ("PETSC_HAVE_NETDB_H" variable (:constant-flag t) nil [5014 5032])
            ("PETSC_HAVE_MALLOC_H" variable (:constant-flag t) nil [5079 5098])
            ("PETSC_HAVE_PWD_H" variable (:constant-flag t) nil [5142 5158])
            ("PETSC_HAVE_FCNTL_H" variable (:constant-flag t) nil [5204 5222])
            ("PETSC_HAVE_STRINGS_H" variable (:constant-flag t) nil [5270 5290])
            ("PETSC_HAVE_SYS_SYSINFO_H" variable (:constant-flag t) nil [5342 5366])
            ("PETSC_HAVE_SYS_TIME_H" variable (:constant-flag t) nil [5415 5436])
            ("PETSC_USING_F90" variable (:constant-flag t) nil [5479 5494])
            ("PETSC_USING_F2003" variable (:constant-flag t) nil [5539 5556])
            ("PETSC_HAVE_RTLD_NOW" variable (:constant-flag t) nil [5603 5622])
            ("PETSC_HAVE_RTLD_LOCAL" variable (:constant-flag t) nil [5671 5692])
            ("PETSC_HAVE_RTLD_LAZY" variable (:constant-flag t) nil [5740 5760])
            ("PETSC_C_STATIC_INLINE" variable (:constant-flag t) nil [5809 5830])
            ("PETSC_HAVE_FORTRAN_UNDERSCORE" variable (:constant-flag t) nil [5899 5928])
            ("PETSC_HAVE_CXX_NAMESPACE" variable (:constant-flag t) nil [5980 6004])
            ("PETSC_HAVE_RTLD_GLOBAL" variable (:constant-flag t) nil [6054 6076])
            ("PETSC_C_RESTRICT" variable (:constant-flag t) nil [6120 6136])
            ("PETSC_CXX_RESTRICT" variable (:constant-flag t) nil [6191 6209])
            ("PETSC_CXX_STATIC_INLINE" variable (:constant-flag t) nil [6269 6292])
            ("PETSC_HAVE_LIBBLAS" variable (:constant-flag t) nil [6350 6368])
            ("PETSC_HAVE_LIBZ" variable (:constant-flag t) nil [6411 6426])
            ("PETSC_HAVE_LIBDL" variable (:constant-flag t) nil [6470 6486])
            ("PETSC_HAVE_LIBGFORTRAN" variable (:constant-flag t) nil [6536 6558])
            ("PETSC_HAVE_LIBMUMPS_COMMON" variable (:constant-flag t) nil [6612 6638])
            ("PETSC_HAVE_LIBLAPACK" variable (:constant-flag t) nil [6686 6706])
            ("PETSC_HAVE_LIBCRYPTO" variable (:constant-flag t) nil [6754 6774])
            ("PETSC_HAVE_LIBPTSCOTCH" variable (:constant-flag t) nil [6824 6846])
            ("PETSC_HAVE_LIBMPI_USEMPIF08" variable (:constant-flag t) nil [6901 6928])
            ("PETSC_HAVE_LIBM" variable (:constant-flag t) nil [6971 6986])
            ("PETSC_HAVE_LIBMPI_MPIFH" variable (:constant-flag t) nil [7037 7060])
            ("PETSC_HAVE_LIBDMUMPS" variable (:constant-flag t) nil [7108 7128])
            ("PETSC_HAVE_LIBPTESMUMPS" variable (:constant-flag t) nil [7179 7202])
            ("PETSC_HAVE_LIBHYPRE_IJ_MV" variable (:constant-flag t) nil [7255 7280])
            ("PETSC_HAVE_LIBSMUMPS" variable (:constant-flag t) nil [7328 7348])
            ("PETSC_HAVE_LIBHDF5" variable (:constant-flag t) nil [7394 7412])
            ("PETSC_HAVE_LIBHYPRE_STRUCT_LS" variable (:constant-flag t) nil [7469 7498])
            ("PETSC_HAVE_LIBMPI_USEMPI_IGNORE_TKR" variable (:constant-flag t) nil [7561 7596])
            ("PETSC_HAVE_LIBPORD" variable (:constant-flag t) nil [7642 7660])
            ("PETSC_HAVE_LIBHYPRE_SSTRUCT_LS" variable (:constant-flag t) nil [7718 7748])
            ("PETSC_HAVE_LIBSCALAPACK_OPENMPI" variable (:constant-flag t) nil [7807 7838])
            ("PETSC_HAVE_LIBHWLOC" variable (:constant-flag t) nil [7885 7904])
            ("PETSC_HAVE_LIBZMUMPS" variable (:constant-flag t) nil [7952 7972])
            ("PETSC_HAVE_LIBHDF5HL_FORTRAN" variable (:constant-flag t) nil [8028 8056])
            ("PETSC_HAVE_LIBKLU" variable (:constant-flag t) nil [8101 8118])
            ("PETSC_HAVE_FENV_H" variable (:constant-flag t) nil [8163 8180])
            ("PETSC_HAVE_LIBCHOLMOD" variable (:constant-flag t) nil [8229 8250])
            ("PETSC_HAVE_LIBHYPRE_STRUCT_MV" variable (:constant-flag t) nil [8307 8336])
            ("PETSC_HAVE_LOG2" variable (:constant-flag t) nil [8379 8394])
            ("PETSC_HAVE_LIBHDF5_HL" variable (:constant-flag t) nil [8443 8464])
            ("PETSC_HAVE_LIBHYPRE_UTILITIES" variable (:constant-flag t) nil [8521 8550])
            ("PETSC_HAVE_LIBSUPERLU" variable (:constant-flag t) nil [8599 8620])
            ("PETSC_HAVE_LIBPTSCOTCHERR" variable (:constant-flag t) nil [8673 8698])
            ("PETSC_HAVE_LIBHYPRE_PARCSR_LS" variable (:constant-flag t) nil [8755 8784])
            ("PETSC_HAVE_LIBCMUMPS" variable (:constant-flag t) nil [8832 8852])
            ("PETSC_HAVE_LIBUMFPACK" variable (:constant-flag t) nil [8901 8922])
            ("PETSC_HAVE_LIBAMD" variable (:constant-flag t) nil [8967 8984])
            ("PETSC_HAVE_ERF" variable (:constant-flag t) nil [9026 9040])
            ("PETSC_HAVE_LIBSSL" variable (:constant-flag t) nil [9085 9102])
            ("PETSC_HAVE_LIBQUADMATH" variable (:constant-flag t) nil [9152 9174])
            ("PETSC_HAVE_LIBHDF5_FORTRAN" variable (:constant-flag t) nil [9228 9254])
            ("PETSC_HAVE_LIBHYPRE_SSTRUCT_MV" variable (:constant-flag t) nil [9312 9342])
            ("PETSC_HAVE_LIBFFTW3_MPI" variable (:constant-flag t) nil [9393 9416])
            ("PETSC_HAVE_TGAMMA" variable (:constant-flag t) nil [9461 9478])
            ("PETSC_HAVE_LIBFFTW3" variable (:constant-flag t) nil [9525 9544])
            ("PETSC_ARCH" variable (:constant-flag t) nil [9582 9592])
            ("PETSC_USE_SCALAR_REAL" variable (:constant-flag t) nil [9663 9684])
            ("PETSC_HAVE_ISINF" variable (:constant-flag t) nil [9728 9744])
            ("PETSC_HAVE_ISNAN" variable (:constant-flag t) nil [9788 9804])
            ("PETSC_HAVE_ISNORMAL" variable (:constant-flag t) nil [9851 9870])
            ("PETSC_USE_REAL_DOUBLE" variable (:constant-flag t) nil [9919 9940])
            ("PETSC_SIZEOF_MPI_COMM" variable (:constant-flag t) nil [9989 10010])
            ("PETSC_BITS_PER_BYTE" variable (:constant-flag t) nil [10057 10076])
            ("PETSC_SIZEOF_MPI_FINT" variable (:constant-flag t) nil [10125 10146])
            ("PETSC_USE_VISIBILITY_C" variable (:constant-flag t) nil [10196 10218])
            ("PETSC_SIZEOF_VOID_P" variable (:constant-flag t) nil [10265 10284])
            ("PETSC_RETSIGTYPE" variable (:constant-flag t) nil [10328 10344])
            ("PETSC_HAVE_CXX_COMPLEX" variable (:constant-flag t) nil [10397 10419])
            ("PETSC_SIZEOF_LONG" variable (:constant-flag t) nil [10464 10481])
            ("PETSC_USE_FORTRANKIND" variable (:constant-flag t) nil [10530 10551])
            ("PETSC_USE_VISIBILITY_CXX" variable (:constant-flag t) nil [10603 10627])
            ("PETSC_SIZEOF_SIZE_T" variable (:constant-flag t) nil [10674 10693])
            ("PETSC_HAVE_SIGINFO_T" variable (:constant-flag t) nil [10741 10761])
            ("PETSC_SIZEOF_CHAR" variable (:constant-flag t) nil [10806 10823])
            ("PETSC_SIZEOF_DOUBLE" variable (:constant-flag t) nil [10870 10889])
            ("PETSC_SIZEOF_FLOAT" variable (:constant-flag t) nil [10935 10953])
            ("PETSC_HAVE_C99_COMPLEX" variable (:constant-flag t) nil [11003 11025])
            ("PETSC_SIZEOF_INT" variable (:constant-flag t) nil [11069 11085])
            ("PETSC_SIZEOF_LONG_LONG" variable (:constant-flag t) nil [11135 11157])
            ("PETSC_SIZEOF_SHORT" variable (:constant-flag t) nil [11203 11221])
            ("PETSC_CLANGUAGE_CXX" variable (:constant-flag t) nil [11268 11287])
            ("PETSC_HAVE_MPI_F90MODULE" variable (:constant-flag t) nil [11339 11363])
            ("PETSC_HAVE_MPI_IALLREDUCE" variable (:constant-flag t) nil [11416 11441])
            ("PETSC_HAVE_OMPI_MINOR_VERSION" variable (:constant-flag t) nil [11498 11527])
            ("PETSC_HAVE_MPI_REDUCE_SCATTER_BLOCK" variable (:constant-flag t) nil [11590 11625])
            ("PETSC_HAVE_MPI_IN_PLACE" variable (:constant-flag t) nil [11676 11699])
            ("PETSC_HAVE_MPI_COMM_C2F" variable (:constant-flag t) nil [11750 11773])
            ("PETSC_HAVE_MPI_COMBINER_CONTIGUOUS" variable (:constant-flag t) nil [11835 11869])
            ("PETSC_HAVE_MPI_INT64_T" variable (:constant-flag t) nil [11919 11941])
            ("PETSC_HAVE_MPI_TYPE_GET_EXTENT" variable (:constant-flag t) nil [11999 12029])
            ("PETSC_HAVE_MPI_WIN_CREATE" variable (:constant-flag t) nil [12082 12107])
            ("PETSC_HAVE_MPI_TYPE_DUP" variable (:constant-flag t) nil [12158 12181])
            ("PETSC_HAVE_MPI_INIT_THREAD" variable (:constant-flag t) nil [12235 12261])
            ("PETSC_HAVE_MPI_COMBINER_NAMED" variable (:constant-flag t) nil [12318 12347])
            ("PETSC_HAVE_MPI_LONG_DOUBLE" variable (:constant-flag t) nil [12401 12427])
            ("PETSC_HAVE_MPI_COMM_F2C" variable (:constant-flag t) nil [12478 12501])
            ("PETSC_HAVE_MPI_TYPE_GET_ENVELOPE" variable (:constant-flag t) nil [12561 12593])
            ("PETSC_HAVE_OMPI_MAJOR_VERSION" variable (:constant-flag t) nil [12650 12679])
            ("PETSC_HAVE_MPI_REDUCE_SCATTER" variable (:constant-flag t) nil [12736 12765])
            ("PETSC_HAVE_MPI_COMBINER_DUP" variable (:constant-flag t) nil [12820 12847])
            ("PETSC_HAVE_MPIIO" variable (:constant-flag t) nil [12891 12907])
            ("PETSC_HAVE_MPI_COMM_SPAWN" variable (:constant-flag t) nil [12960 12985])
            ("PETSC_HAVE_MPI_FINT" variable (:constant-flag t) nil [13032 13051])
            ("PETSC_HAVE_MPI_IBARRIER" variable (:constant-flag t) nil [13102 13125])
            ("PETSC_HAVE_MPI_ALLTOALLW" variable (:constant-flag t) nil [13177 13201])
            ("PETSC_HAVE_OMPI_RELEASE_VERSION" variable (:constant-flag t) nil [13260 13291])
            ("PETSC_HAVE_MPI_REDUCE_LOCAL" variable (:constant-flag t) nil [13346 13373])
            ("PETSC_HAVE_MPI_REPLACE" variable (:constant-flag t) nil [13423 13445])
            ("PETSC_HAVE_MPI_EXSCAN" variable (:constant-flag t) nil [13494 13515])
            ("PETSC_HAVE_MPI_FINALIZED" variable (:constant-flag t) nil [13567 13591])
            ("PETSC_HAVE_DYNAMIC_LIBRARIES" variable (:constant-flag t) nil [13647 13675])
            ("PETSC_HAVE_SHARED_LIBRARIES" variable (:constant-flag t) nil [13730 13757])
            ("PETSC_USE_SHARED_LIBRARIES" variable (:constant-flag t) nil [13811 13837])
            ("PETSC_USE_ERRORCHECKING" variable (:constant-flag t) nil [13888 13911])
            ("PETSC_HAVE_STRCASECMP" variable (:constant-flag t) nil [13960 13981])
            ("PETSC_HAVE_GET_NPROCS" variable (:constant-flag t) nil [14030 14051])
            ("PETSC_HAVE_POPEN" variable (:constant-flag t) nil [14095 14111])
            ("PETSC_HAVE_SIGSET" variable (:constant-flag t) nil [14156 14173])
            ("PETSC_HAVE_GETWD" variable (:constant-flag t) nil [14217 14233])
            ("PETSC_HAVE_VSNPRINTF" variable (:constant-flag t) nil [14281 14301])
            ("PETSC_HAVE_TIMES" variable (:constant-flag t) nil [14345 14361])
            ("PETSC_HAVE_DLSYM" variable (:constant-flag t) nil [14405 14421])
            ("PETSC_HAVE_SNPRINTF" variable (:constant-flag t) nil [14468 14487])
            ("PETSC_HAVE_GETHOSTBYNAME" variable (:constant-flag t) nil [14539 14563])
            ("PETSC_HAVE_GETCWD" variable (:constant-flag t) nil [14608 14625])
            ("PETSC_HAVE_DLERROR" variable (:constant-flag t) nil [14671 14689])
            ("PETSC_HAVE_FORK" variable (:constant-flag t) nil [14732 14747])
            ("PETSC_HAVE_RAND" variable (:constant-flag t) nil [14790 14805])
            ("PETSC_HAVE_GETTIMEOFDAY" variable (:constant-flag t) nil [14856 14879])
            ("PETSC_HAVE_DLCLOSE" variable (:constant-flag t) nil [14925 14943])
            ("PETSC_HAVE_UNAME" variable (:constant-flag t) nil [14987 15003])
            ("PETSC_HAVE_GETHOSTNAME" variable (:constant-flag t) nil [15053 15075])
            ("PETSC_HAVE_MKSTEMP" variable (:constant-flag t) nil [15121 15139])
            ("PETSC_HAVE_SIGACTION" variable (:constant-flag t) nil [15187 15207])
            ("PETSC_HAVE_DRAND48" variable (:constant-flag t) nil [15253 15271])
            ("PETSC_HAVE_MEMALIGN" variable (:constant-flag t) nil [15318 15337])
            ("PETSC_HAVE_VA_COPY" variable (:constant-flag t) nil [15383 15401])
            ("PETSC_HAVE_CLOCK" variable (:constant-flag t) nil [15445 15461])
            ("PETSC_HAVE_ACCESS" variable (:constant-flag t) nil [15506 15523])
            ("PETSC_HAVE_SIGNAL" variable (:constant-flag t) nil [15568 15585])
            ("PETSC_HAVE_USLEEP" variable (:constant-flag t) nil [15630 15647])
            ("PETSC_HAVE_GETRUSAGE" variable (:constant-flag t) nil [15695 15715])
            ("PETSC_HAVE_VFPRINTF" variable (:constant-flag t) nil [15762 15781])
            ("PETSC_HAVE_NANOSLEEP" variable (:constant-flag t) nil [15829 15849])
            ("PETSC_HAVE_GETDOMAINNAME" variable (:constant-flag t) nil [15901 15925])
            ("PETSC_HAVE_TIME" variable (:constant-flag t) nil [15968 15983])
            ("PETSC_HAVE_LSEEK" variable (:constant-flag t) nil [16027 16043])
            ("PETSC_HAVE_SOCKET" variable (:constant-flag t) nil [16088 16105])
            ("PETSC_HAVE_SYSINFO" variable (:constant-flag t) nil [16151 16169])
            ("PETSC_HAVE_READLINK" variable (:constant-flag t) nil [16216 16235])
            ("PETSC_HAVE_REALPATH" variable (:constant-flag t) nil [16282 16301])
            ("PETSC_HAVE_DLOPEN" variable (:constant-flag t) nil [16346 16363])
            ("PETSC_HAVE_MEMMOVE" variable (:constant-flag t) nil [16409 16427])
            ("PETSC_HAVE__GFORTRAN_IARGC" variable (:constant-flag t) nil [16481 16507])
            ("PETSC_SIGNAL_CAST" variable (:constant-flag t) nil [16552 16569])
            ("PETSC_HAVE_SLEEP" variable (:constant-flag t) nil [16613 16629])
            ("PETSC_HAVE_VPRINTF" variable (:constant-flag t) nil [16675 16693])
            ("PETSC_HAVE_BZERO" variable (:constant-flag t) nil [16737 16753])
            ("PETSC_HAVE_GETPAGESIZE" variable (:constant-flag t) nil [16803 16825])
            ("PETSC_WRITE_MEMORY_BARRIER" variable (:constant-flag t) nil [16879 16905])
            ("PETSC_MEMORY_BARRIER" variable (:constant-flag t) nil [16987 17007])
            ("PETSC_READ_MEMORY_BARRIER" variable (:constant-flag t) nil [17094 17119])
            ("PETSC_CPU_RELAX" variable (:constant-flag t) nil [17196 17211])
            ("PETSC_BLASLAPACK_UNDERSCORE" variable (:constant-flag t) nil [17304 17331])
            ("PETSC_MEMALIGN" variable (:constant-flag t) nil [17373 17387])
            ("PETSC_USE_FORTRAN_INTERFACES" variable (:constant-flag t) nil [17444 17472])
            ("PETSC_USE_INFO" variable (:constant-flag t) nil [17514 17528])
            ("PETSC_Alignx" variable (:constant-flag t) nil [17568 17580])
            ("PETSC_USE_BACKWARD_LOOP" variable (:constant-flag t) nil [17637 17660])
            ("PETSC_USE_MALLOC_COALESCED" variable (:constant-flag t) nil [17714 17740])
            ("PETSC_USE_LOG" variable (:constant-flag t) nil [17781 17794])
            ("PETSC_IS_COLOR_VALUE_TYPE_F" variable (:constant-flag t) nil [17849 17876])
            ("PETSC_IS_COLOR_VALUE_TYPE" variable (:constant-flag t) nil [17936 17961])
            ("PETSC_USE_CTABLE" variable (:constant-flag t) nil [18009 18025])
            ("PETSC__GNU_SOURCE" variable (:constant-flag t) nil [18070 18087])
            ("PETSC__BSD_SOURCE" variable (:constant-flag t) nil [18132 18149])
            ("PETSC__DEFAULT_SOURCE" variable (:constant-flag t) nil [18198 18219])
            ("PETSC_HAVE_FORTRAN_GET_COMMAND_ARGUMENT" variable (:constant-flag t) nil [18286 18325])
            ("PETSC_HAVE_GFORTRAN_IARGC" variable (:constant-flag t) nil [18378 18403])
            ("PETSC_LEVEL1_DCACHE_LINESIZE" variable (:constant-flag t) nil [18459 18487])
            ("PETSC_LEVEL1_DCACHE_SIZE" variable (:constant-flag t) nil [18540 18564])
            ("PETSC_LEVEL1_DCACHE_ASSOC" variable (:constant-flag t) nil [18621 18646])
            ("PETSC_USE_PROC_FOR_SIZE" variable (:constant-flag t) nil [18697 18720])
            ("PETSC_HAVE_H5PSET_FAPL_MPIO" variable (:constant-flag t) nil [18775 18802])
            ("PETSC_HAVE_SCHED_CPU_SET_T" variable (:constant-flag t) nil [18856 18882])
            ("PETSC_HAVE_PTHREAD_BARRIER_T" variable (:constant-flag t) nil [18938 18966])
            ("PETSC_HAVE_SYS_SYSCTL_H" variable (:constant-flag t) nil [19017 19040]))          
      :file "petscconf.h"
      :pointmax 19058
      :fsize 19057
      :lastmodtime '(23160 35761 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("PETSC_HAVE_HDF5" . ((number "1" 729 . 730)))
          ("PETSC_PREFETCH_HINT_T1" . ((symbol "_MM_HINT_T1" 1095 . 1106)))
          ("PETSC_UNUSED" . ((symbol "__attribute" 2169 . 2180) (semantic-list "((unused))" 2180 . 2190)))
          ("PETSC_HAVE_BUILTIN_EXPECT" . ((number "1" 2526 . 2527)))
          ("PETSC_HAVE_HWLOC" . ((number "1" 3113 . 3114)))
          ("PETSC_HAVE_STRING_H" . ((number "1" 3237 . 3238)))
          ("PETSC_HAVE_SYS_TYPES_H" . ((number "1" 3309 . 3310)))
          ("PETSC_HAVE_LINUX_KERNEL_H" . ((number "1" 3721 . 3722)))
          ("PETSC_HAVE_SEARCH_H" . ((number "1" 4819 . 4820)))
          ("PETSC_HAVE_MALLOC_H" . ((number "1" 5099 . 5100)))
          ("PETSC_C_RESTRICT" . ((symbol "__restrict" 6137 . 6147)))
          ("PETSC_HAVE_LIBKLU" . ((number "1" 8119 . 8120)))
          ("PETSC_HAVE_LIBAMD" . ((number "1" 8985 . 8986)))
          ("PETSC_HAVE_LIBFFTW3_MPI" . ((number "1" 9417 . 9418)))
          ("PETSC_HAVE_CXX_COMPLEX" . ((number "1" 10420 . 10421)))
          ("PETSC_HAVE_MPI_COMBINER_DUP" . ((number "1" 12848 . 12849)))
          ("PETSC_HAVE_MPI_COMM_SPAWN" . ((number "1" 12986 . 12987)))
          ("PETSC_HAVE_GET_NPROCS" . ((number "1" 14052 . 14053)))
          ("PETSC_HAVE_SNPRINTF" . ((number "1" 14488 . 14489)))
          ("PETSC_HAVE_MKSTEMP" . ((number "1" 15140 . 15141)))
          ("PETSC_HAVE_REALPATH" . ((number "1" 16302 . 16303)))
          ("PETSC_HAVE_PTHREAD" . ((number "1" 383 . 384)))
          ("PETSC_HAVE_FFTW" . ((number "1" 586 . 587)))
          ("PETSC_PREFETCH_HINT_T2" . ((symbol "_MM_HINT_T2" 931 . 942)))
          ("PETSC_HAVE_FORTRAN" . ((number "1" 1169 . 1170)))
          ("PETSC_HAVE_ATTRIBUTEALIGNED" . ((number "1" 2029 . 2030)))
          ("PETSC_HAVE_SYS_PROCFS_H" . ((number "1" 3449 . 3450)))
          ("PETSC_HAVE_SCHED_H" . ((number "1" 3577 . 3578)))
          ("PETSC_HAVE_SYS_PARAM_H" . ((number "1" 4063 . 4064)))
          ("PETSC_HAVE_NETINET_IN_H" . ((number "1" 4615 . 4616)))
          ("PETSC_HAVE_SYS_SYSINFO_H" . ((number "1" 5367 . 5368)))
          ("PETSC_USING_F2003" . ((number "1" 5557 . 5558)))
          ("PETSC_HAVE_RTLD_NOW" . ((number "1" 5623 . 5624)))
          ("PETSC_HAVE_LIBDL" . ((number "1" 6487 . 6488)))
          ("PETSC_HAVE_TGAMMA" . ((number "1" 9479 . 9480)))
          ("PETSC_HAVE_ISNORMAL" . ((number "1" 9871 . 9872)))
          ("PETSC_CLANGUAGE_CXX" . ((number "1" 11288 . 11289)))
          ("PETSC_HAVE_MPI_COMM_C2F" . ((number "1" 11774 . 11775)))
          ("PETSC_HAVE_MPI_TYPE_GET_ENVELOPE" . ((number "1" 12594 . 12595)))
          ("PETSC_HAVE_MPIIO" . ((number "1" 12908 . 12909)))
          ("PETSC_HAVE_MPI_EXSCAN" . ((number "1" 13516 . 13517)))
          ("PETSC_HAVE_SIGSET" . ((number "1" 14174 . 14175)))
          ("PETSC_HAVE_SIGNAL" . ((number "1" 15586 . 15587)))
          ("PETSC_HAVE_VFPRINTF" . ((number "1" 15782 . 15783)))
          ("PETSC_HAVE_GETDOMAINNAME" . ((number "1" 15926 . 15927)))
          ("PETSC_HAVE_LSEEK" . ((number "1" 16044 . 16045)))
          ("PETSC_HAVE_MEMMOVE" . ((number "1" 16428 . 16429)))
          ("PETSC_LEVEL1_DCACHE_SIZE" . ((number "32768" 18565 . 18570)))
          ("PETSC_LIB_DIR" . ((string "\"/usr/lib/petscdir/3.7.7/x86_64-linux-gnu-real/lib\"" 1439 . 1490)))
          ("PETSC_HAVE_MUMPS" . ((number "1" 1887 . 1888)))
          ("PETSC_PREFETCH_HINT_NTA" . ((symbol "_MM_HINT_NTA" 2876 . 2888)))
          ("PETSC_HAVE_STDLIB_H" . ((number "1" 4263 . 4264)))
          ("PETSC_HAVE_FCNTL_H" . ((number "1" 5223 . 5224)))
          ("PETSC_HAVE_RTLD_GLOBAL" . ((number "1" 6077 . 6078)))
          ("PETSC_USE_SCALAR_REAL" . ((number "1" 9685 . 9686)))
          ("PETSC_USE_REAL_DOUBLE" . ((number "1" 9941 . 9942)))
          ("PETSC_HAVE_SIGINFO_T" . ((number "1" 10762 . 10763)))
          ("PETSC_HAVE_C99_COMPLEX" . ((number "1" 11026 . 11027)))
          ("PETSC_HAVE_OMPI_MINOR_VERSION" . ((number "1" 11528 . 11529)))
          ("PETSC_HAVE_MPI_COMBINER_CONTIGUOUS" . ((number "1" 11870 . 11871)))
          ("PETSC_HAVE_MPI_WIN_CREATE" . ((number "1" 12108 . 12109)))
          ("PETSC_HAVE_DYNAMIC_LIBRARIES" . ((number "1" 13676 . 13677)))
          ("PETSC_HAVE_STRCASECMP" . ((number "1" 13982 . 13983)))
          ("PETSC_HAVE_DLSYM" . ((number "1" 14422 . 14423)))
          ("PETSC_HAVE_DLCLOSE" . ((number "1" 14944 . 14945)))
          ("PETSC_HAVE_USLEEP" . ((number "1" 15648 . 15649)))
          ("PETSC_HAVE_VPRINTF" . ((number "1" 16694 . 16695)))
          ("PETSC_MEMALIGN" . ((number "16" 17388 . 17390)))
          ("PETSC__GNU_SOURCE" . ((number "1" 18088 . 18089)))
          ("PETSC_HAVE_PTHREAD_BARRIER_T" . ((number "1" 18967 . 18968)))
          ("PETSC_DIR" . ((string "\"/build/petsc-vurd6G/petsc-3.7.7+dfsg1\"" 1215 . 1254)))
          ("PETSC_HAVE_ATOLL" . ((number "1" 1947 . 1948)))
          ("PETSC_HAVE_PTSCOTCH" . ((number "1" 2592 . 2593)))
          ("PETSC_TIME_WITH_SYS_TIME" . ((number "1" 3991 . 3992)))
          ("PETSC_HAVE_SYS_TIMES_H" . ((number "1" 4969 . 4970)))
          ("PETSC_HAVE_LIBMPI_USEMPIF08" . ((number "1" 6929 . 6930)))
          ("PETSC_HAVE_LIBPTESMUMPS" . ((number "1" 7203 . 7204)))
          ("PETSC_HAVE_LIBHYPRE_STRUCT_LS" . ((number "1" 7499 . 7500)))
          ("PETSC_HAVE_LIBCHOLMOD" . ((number "1" 8251 . 8252)))
          ("PETSC_HAVE_LIBHYPRE_UTILITIES" . ((number "1" 8551 . 8552)))
          ("PETSC_HAVE_LIBSUPERLU" . ((number "1" 8621 . 8622)))
          ("PETSC_USE_VISIBILITY_C" . ((number "1" 10219 . 10220)))
          ("PETSC_SIZEOF_SIZE_T" . ((number "8" 10694 . 10695)))
          ("PETSC_SIZEOF_DOUBLE" . ((number "8" 10890 . 10891)))
          ("PETSC_SIZEOF_FLOAT" . ((number "4" 10954 . 10955)))
          ("PETSC_HAVE_MPI_ALLTOALLW" . ((number "1" 13202 . 13203)))
          ("PETSC_HAVE_MPI_REDUCE_LOCAL" . ((number "1" 13374 . 13375)))
          ("PETSC_USE_SHARED_LIBRARIES" . ((number "1" 13838 . 13839)))
          ("PETSC_HAVE_DLERROR" . ((number "1" 14690 . 14691)))
          ("PETSC_HAVE_DRAND48" . ((number "1" 15272 . 15273)))
          ("PETSC_HAVE_TIME" . ((number "1" 15984 . 15985)))
          ("PETSC_HAVE_READLINK" . ((number "1" 16236 . 16237)))
          ("PETSC_HAVE_GETPAGESIZE" . ((number "1" 16826 . 16827)))
          ("PETSC_HAVE_DOUBLE_ALIGN_MALLOC" . ((number "1" 2117 . 2118)))
          ("PETSC_HAVE_STDINT_H" . ((number "1" 3643 . 3644)))
          ("PETSC_HAVE_LIBGFORTRAN" . ((number "1" 6559 . 6560)))
          ("PETSC_HAVE_LIBHYPRE_IJ_MV" . ((number "1" 7281 . 7282)))
          ("PETSC_HAVE_LIBHDF5" . ((number "1" 7413 . 7414)))
          ("PETSC_HAVE_LIBMPI_USEMPI_IGNORE_TKR" . ((number "1" 7597 . 7598)))
          ("PETSC_HAVE_LIBHWLOC" . ((number "1" 7905 . 7906)))
          ("PETSC_SIZEOF_LONG_LONG" . ((number "8" 11158 . 11159)))
          ("PETSC_HAVE_MPI_COMBINER_NAMED" . ((number "1" 12348 . 12349)))
          ("PETSC_HAVE_TIMES" . ((number "1" 14362 . 14363)))
          ("PETSC_HAVE_GETHOSTNAME" . ((number "1" 15076 . 15077)))
          ("PETSC_HAVE_MEMALIGN" . ((number "1" 15338 . 15339)))
          ("PETSC_SIGNAL_CAST")
          ("PETSC_USE_MALLOC_COALESCED" . ((number "1" 17741 . 17742)))
          ("PETSC__BSD_SOURCE" . ((number "1" 18150 . 18151)))
          ("PETSC_LEVEL1_DCACHE_LINESIZE" . ((number "64" 18488 . 18490)))
          ("PETSC_HAVE_SYS_SYSCTL_H" . ((number "1" 19041 . 19042)))
          ("PETSC_HAVE_SO_REUSEADDR" . ((number "1" 803 . 804)))
          ("PETSC_HAVE_XMMINTRIN_H" . ((number "1" 2802 . 2803)))
          ("PETSC_HAVE_SYS_UTSNAME_H" . ((number "1" 4541 . 4542)))
          ("PETSC_HAVE_NETDB_H" . ((number "1" 5033 . 5034)))
          ("PETSC_HAVE_PWD_H" . ((number "1" 5159 . 5160)))
          ("PETSC_HAVE_SYS_TIME_H" . ((number "1" 5437 . 5438)))
          ("PETSC_HAVE_LIBMUMPS_COMMON" . ((number "1" 6639 . 6640)))
          ("PETSC_HAVE_LIBSCALAPACK_OPENMPI" . ((number "1" 7839 . 7840)))
          ("PETSC_HAVE_LIBHDF5_FORTRAN" . ((number "1" 9255 . 9256)))
          ("PETSC_HAVE_LIBHYPRE_SSTRUCT_MV" . ((number "1" 9343 . 9344)))
          ("PETSC_SIZEOF_VOID_P" . ((number "8" 10285 . 10286)))
          ("PETSC_SIZEOF_INT" . ((number "4" 11086 . 11087)))
          ("PETSC_HAVE_MPI_F90MODULE" . ((number "1" 11364 . 11365)))
          ("PETSC_HAVE_MPI_TYPE_GET_EXTENT" . ((number "1" 12030 . 12031)))
          ("PETSC_HAVE_MPI_INIT_THREAD" . ((number "1" 12262 . 12263)))
          ("PETSC_HAVE_MPI_REPLACE" . ((number "1" 13446 . 13447)))
          ("PETSC_HAVE_SHARED_LIBRARIES" . ((number "1" 13758 . 13759)))
          ("PETSC_HAVE_UNAME" . ((number "1" 15004 . 15005)))
          ("PETSC_HAVE_ACCESS" . ((number "1" 15524 . 15525)))
          ("PETSC_HAVE_GETRUSAGE" . ((number "1" 15716 . 15717)))
          ("PETSC_HAVE__GFORTRAN_IARGC" . ((number "1" 16508 . 16509)))
          ("PETSC_BLASLAPACK_UNDERSCORE" . ((number "1" 17332 . 17333)))
          ("INCLUDED_PETSCCONF_H")
          ("IS_COLORING_MAX" . ((number "65535" 114 . 119)))
          ("PETSC_HAVE_ENDIAN_H" . ((number "1" 3375 . 3376)))
          ("PETSC_HAVE_DLFCN_H" . ((number "1" 3513 . 3514)))
          ("PETSC_HAVE_UNISTD_H" . ((number "1" 4197 . 4198)))
          ("PETSC_HAVE_STRINGS_H" . ((number "1" 5291 . 5292)))
          ("PETSC_C_STATIC_INLINE" . ((STATIC "static" 5831 . 5837) (INLINE "inline" 5838 . 5844)))
          ("PETSC_HAVE_LIBDMUMPS" . ((number "1" 7129 . 7130)))
          ("PETSC_HAVE_LIBPORD" . ((number "1" 7661 . 7662)))
          ("PETSC_HAVE_LIBHDF5_HL" . ((number "1" 8465 . 8466)))
          ("PETSC_HAVE_ERF" . ((number "1" 9041 . 9042)))
          ("PETSC_HAVE_LIBSSL" . ((number "1" 9103 . 9104)))
          ("PETSC_HAVE_LIBQUADMATH" . ((number "1" 9175 . 9176)))
          ("PETSC_USE_VISIBILITY_CXX" . ((number "1" 10628 . 10629)))
          ("PETSC_HAVE_MPI_REDUCE_SCATTER_BLOCK" . ((number "1" 11626 . 11627)))
          ("PETSC_HAVE_GETTIMEOFDAY" . ((number "1" 14880 . 14881)))
          ("PETSC_HAVE_DLOPEN" . ((number "1" 16364 . 16365)))
          ("PETSC__DEFAULT_SOURCE" . ((number "1" 18220 . 18221)))
          ("PETSC_HAVE_GFORTRAN_IARGC" . ((number "1" 18404 . 18405)))
          ("PETSC_HAVE_SCHED_CPU_SET_T" . ((number "1" 18883 . 18884)))
          ("PETSC_DEPRECATED" (spp-arg-list ("why") 498 . 503) . ((symbol "__attribute" 504 . 515) (semantic-list "((deprecated))" 515 . 529)))
          ("PETSC_REPLACE_DIR_SEPARATOR" . ((string "'\\\\'" 668 . 672)))
          ("PETSC_USE_ISATTY" . ((number "1" 1623 . 1624)))
          ("PETSC_SLSUFFIX" . ((string "\"so\"" 1679 . 1683)))
          ("PETSC_HAVE_MATH_H" . ((number "1" 3845 . 3846)))
          ("PETSC_HAVE_INTTYPES_H" . ((number "1" 3915 . 3916)))
          ("PETSC_CXX_STATIC_INLINE" . ((STATIC "static" 6293 . 6299) (INLINE "inline" 6300 . 6306)))
          ("PETSC_HAVE_LIBBLAS" . ((number "1" 6369 . 6370)))
          ("PETSC_HAVE_LIBMPI_MPIFH" . ((number "1" 7061 . 7062)))
          ("PETSC_HAVE_LIBHDF5HL_FORTRAN" . ((number "1" 8057 . 8058)))
          ("PETSC_SIZEOF_LONG" . ((number "8" 10482 . 10483)))
          ("PETSC_HAVE_MPI_IN_PLACE" . ((number "1" 11700 . 11701)))
          ("PETSC_HAVE_MPI_TYPE_DUP" . ((number "1" 12182 . 12183)))
          ("PETSC_HAVE_MPI_REDUCE_SCATTER" . ((number "1" 12766 . 12767)))
          ("PETSC_HAVE_MPI_FINALIZED" . ((number "1" 13592 . 13593)))
          ("PETSC_HAVE_POPEN" . ((number "1" 14112 . 14113)))
          ("PETSC_HAVE_VA_COPY" . ((number "1" 15402 . 15403)))
          ("PETSC_HAVE_SLEEP" . ((number "1" 16630 . 16631)))
          ("PETSC_MEMORY_BARRIER" (spp-arg-list nil 17007 . 17009) . 
              ((symbol "asm" 17010 . 17013) (VOLATILE "volatile" 17014 . 17022) (semantic-list "(\"mfence\":::\"memory\")" 17022 . 17043)))
          ("PETSC_USE_INFO" . ((number "1" 17529 . 17530)))
          ("PETSC_USE_LOG" . ((number "1" 17795 . 17796)))
          ("PETSC_FUNCTION_NAME_CXX" . ((symbol "__func__" 1820 . 1828)))
          ("PETSC_Prefetch" (spp-arg-list ("a" "b" "c") 2942 . 2949) . ((symbol "_mm_prefetch" 2950 . 2962) (semantic-list "((const char*)(a),(c))" 2962 . 2984)))
          ("PETSC_HAVE_TIME_H" . ((number "1" 3783 . 3784)))
          ("PETSC_HAVE_SETJMP_H" . ((number "1" 4399 . 4400)))
          ("PETSC_USING_F90" . ((number "1" 5495 . 5496)))
          ("PETSC_HAVE_RTLD_LOCAL" . ((number "1" 5693 . 5694)))
          ("PETSC_HAVE_CXX_NAMESPACE" . ((number "1" 6005 . 6006)))
          ("PETSC_HAVE_SOCKET" . ((number "1" 16106 . 16107)))
          ("PETSC_HAVE_BZERO" . ((number "1" 16754 . 16755)))
          ("PETSC_READ_MEMORY_BARRIER" (spp-arg-list nil 17119 . 17121) . 
              ((symbol "asm" 17122 . 17125) (VOLATILE "volatile" 17126 . 17134) (semantic-list "(\"lfence\":::\"memory\")" 17134 . 17155)))
          ("PETSC_USE_BACKWARD_LOOP" . ((number "1" 17661 . 17662)))
          ("PETSC_HAVE_SUPERLU" . ((number "1" 1746 . 1747)))
          ("PETSC_ATTRIBUTEALIGNED" (spp-arg-list ("size") 2260 . 2266) . ((symbol "__attribute" 2267 . 2278) (semantic-list "((aligned (size)))" 2278 . 2296)))
          ("PETSC_PATH_SEPARATOR" . ((string "':'" 2728 . 2731)))
          ("PETSC_HAVE_SYS_WAIT_H" . ((number "1" 4333 . 4334)))
          ("PETSC_HAVE_SYS_SOCKET_H" . ((number "1" 4689 . 4690)))
          ("PETSC_HAVE_FLOAT_H" . ((number "1" 4753 . 4754)))
          ("PETSC_HAVE_LIBZ" . ((number "1" 6427 . 6428)))
          ("PETSC_HAVE_LIBM" . ((number "1" 6987 . 6988)))
          ("PETSC_HAVE_LIBZMUMPS" . ((number "1" 7973 . 7974)))
          ("PETSC_HAVE_LIBHYPRE_STRUCT_MV" . ((number "1" 8337 . 8338)))
          ("PETSC_HAVE_LIBFFTW3" . ((number "1" 9545 . 9546)))
          ("PETSC_BITS_PER_BYTE" . ((number "8" 10077 . 10078)))
          ("PETSC_HAVE_OMPI_MAJOR_VERSION" . ((number "2" 12680 . 12681)))
          ("PETSC_USE_ERRORCHECKING" . ((number "1" 13912 . 13913)))
          ("PETSC_HAVE_GETCWD" . ((number "1" 14626 . 14627)))
          ("PETSC_HAVE_RAND" . ((number "1" 14806 . 14807)))
          ("PETSC_HAVE_H5PSET_FAPL_MPIO" . ((number "1" 18803 . 18804)))
          ("MPIU_COLORING_VALUE" . ((symbol "MPI_UNSIGNED_SHORT" 236 . 254)))
          ("PETSC_HAVE_MPI" . ((number "1" 859 . 860)))
          ("PETSC_HAVE_HYPRE" . ((number "1" 1385 . 1386)))
          ("PETSC_USE_SOCKET_VIEWER" . ((number "1" 1563 . 1564)))
          ("PETSC_HAVE_SYS_RESOURCE_H" . ((number "1" 4897 . 4898)))
          ("PETSC_HAVE_FORTRAN_UNDERSCORE" . ((number "1" 5929 . 5930)))
          ("PETSC_CXX_RESTRICT" . ((symbol "__restrict" 6210 . 6220)))
          ("PETSC_HAVE_LIBPTSCOTCH" . ((number "1" 6847 . 6848)))
          ("PETSC_HAVE_LIBCMUMPS" . ((number "1" 8853 . 8854)))
          ("PETSC_HAVE_LIBUMFPACK" . ((number "1" 8923 . 8924)))
          ("PETSC_ARCH" . ((string "\"x86_64-linux-gnu-real\"" 9593 . 9616)))
          ("PETSC_SIZEOF_MPI_FINT" . ((number "4" 10147 . 10148)))
          ("PETSC_HAVE_MPI_INT64_T" . ((number "1" 11942 . 11943)))
          ("PETSC_HAVE_MPI_IBARRIER" . ((number "1" 13126 . 13127)))
          ("PETSC_HAVE_VSNPRINTF" . ((number "1" 14302 . 14303)))
          ("PETSC_WRITE_MEMORY_BARRIER" (spp-arg-list nil 16905 . 16907) . 
              ((symbol "asm" 16908 . 16911) (VOLATILE "volatile" 16912 . 16920) (semantic-list "(\"sfence\":::\"memory\")" 16920 . 16941)))
          ("PETSC_CPU_RELAX" (spp-arg-list nil 17211 . 17213) . 
              ((symbol "asm" 17214 . 17217) (VOLATILE "volatile" 17218 . 17226) (semantic-list "(\"rep; nop\" ::: \"memory\")" 17226 . 17251)))
          ("PETSC_USE_FORTRAN_INTERFACES" . ((number "1" 17473 . 17474)))
          ("PETSC_IS_COLOR_VALUE_TYPE" . ((SHORT "short" 17962 . 17967)))
          ("PETSC_USE_CTABLE" . ((number "1" 18026 . 18027)))
          ("PETSC_HAVE_FORTRAN_GET_COMMAND_ARGUMENT" . ((number "1" 18326 . 18327)))
          ("PETSC_HAVE_SSL" . ((number "1" 439 . 440)))
          ("PETSC_FUNCTION_NAME_C" . ((symbol "__func__" 2365 . 2373)))
          ("PETSC_USE_SINGLE_LIBRARY" . ((number "1" 2448 . 2449)))
          ("PETSC_DIR_SEPARATOR" . ((string "'/'" 2658 . 2661)))
          ("PETSC_HAVE_BLASLAPACK" . ((number "1" 3053 . 3054)))
          ("PETSC_HAVE_LIMITS_H" . ((number "1" 4465 . 4466)))
          ("PETSC_HAVE_RTLD_LAZY" . ((number "1" 5761 . 5762)))
          ("PETSC_HAVE_LIBSMUMPS" . ((number "1" 7349 . 7350)))
          ("PETSC_HAVE_FENV_H" . ((number "1" 8181 . 8182)))
          ("PETSC_HAVE_LIBPTSCOTCHERR" . ((number "1" 8699 . 8700)))
          ("PETSC_HAVE_LIBHYPRE_PARCSR_LS" . ((number "1" 8785 . 8786)))
          ("PETSC_HAVE_ISINF" . ((number "1" 9745 . 9746)))
          ("PETSC_RETSIGTYPE" . ((VOID "void" 10345 . 10349)))
          ("PETSC_SIZEOF_CHAR" . ((number "1" 10824 . 10825)))
          ("PETSC_SIZEOF_SHORT" . ((number "2" 11222 . 11223)))
          ("PETSC_HAVE_MPI_IALLREDUCE" . ((number "1" 11442 . 11443)))
          ("PETSC_HAVE_OMPI_RELEASE_VERSION" . ((number "1" 13292 . 13293)))
          ("PETSC_HAVE_GETWD" . ((number "1" 14234 . 14235)))
          ("PETSC_HAVE_SIGACTION" . ((number "1" 15208 . 15209)))
          ("PETSC_HAVE_SYSINFO" . ((number "1" 16170 . 16171)))
          ("PETSC_USE_PROC_FOR_SIZE" . ((number "1" 18721 . 18722)))
          ("PETSC_UINTPTR_T" . ((symbol "uintptr_t" 311 . 320)))
          ("PETSC_PREFETCH_HINT_T0" . ((symbol "_MM_HINT_T0" 1013 . 1024)))
          ("PETSC_HAVE_SUITESPARSE" . ((number "1" 1325 . 1326)))
          ("PETSC_HAVE_GZIP" . ((number "1" 3171 . 3172)))
          ("PETSC_HAVE_PTHREAD_H" . ((number "1" 4131 . 4132)))
          ("PETSC_HAVE_LIBLAPACK" . ((number "1" 6707 . 6708)))
          ("PETSC_HAVE_LIBCRYPTO" . ((number "1" 6775 . 6776)))
          ("PETSC_HAVE_LIBHYPRE_SSTRUCT_LS" . ((number "1" 7749 . 7750)))
          ("PETSC_HAVE_LOG2" . ((number "1" 8395 . 8396)))
          ("PETSC_HAVE_ISNAN" . ((number "1" 9805 . 9806)))
          ("PETSC_SIZEOF_MPI_COMM" . ((number "8" 10011 . 10012)))
          ("PETSC_USE_FORTRANKIND" . ((number "1" 10552 . 10553)))
          ("PETSC_HAVE_MPI_LONG_DOUBLE" . ((number "1" 12428 . 12429)))
          ("PETSC_HAVE_MPI_COMM_F2C" . ((number "1" 12502 . 12503)))
          ("PETSC_HAVE_MPI_FINT" . ((number "1" 13052 . 13053)))
          ("PETSC_HAVE_GETHOSTBYNAME" . ((number "1" 14564 . 14565)))
          ("PETSC_HAVE_FORK" . ((number "1" 14748 . 14749)))
          ("PETSC_HAVE_CLOCK" . ((number "1" 15462 . 15463)))
          ("PETSC_HAVE_NANOSLEEP" . ((number "1" 15850 . 15851)))
          ("PETSC_Alignx" (spp-arg-list ("a" "b") 17580 . 17585))
          ("PETSC_IS_COLOR_VALUE_TYPE_F" . ((symbol "integer2" 17877 . 17885)))
          ("PETSC_LEVEL1_DCACHE_ASSOC" . ((number "8" 18647 . 18648)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("INCLUDED_PETSCFIX_H" variable (:constant-flag t) nil [43 62])
            ("C" extern nil nil [89 103]))          
      :file "petscfix.h"
      :pointmax 124
      :fsize 123
      :lastmodtime '(23160 35761 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("INCLUDED_PETSCFIX_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__PETSCVERSION_H" variable (:constant-flag t) nil [40 56])
            ("PETSC_VERSION_RELEASE" variable (:constant-flag t) nil [66 87])
            ("PETSC_VERSION_MAJOR" variable (:constant-flag t) nil [101 120])
            ("PETSC_VERSION_MINOR" variable (:constant-flag t) nil [136 155])
            ("PETSC_VERSION_SUBMINOR" variable (:constant-flag t) nil [171 193])
            ("PETSC_VERSION_PATCH" variable (:constant-flag t) nil [206 225])
            ("PETSC_RELEASE_DATE" variable (:constant-flag t) nil [241 259])
            ("PETSC_VERSION_DATE" variable (:constant-flag t) nil [290 308])
            ("PETSC_VERSION_GIT" variable (:constant-flag t) nil [373 390])
            ("PETSC_VERSION_DATE_GIT" variable (:constant-flag t) nil [460 482])
            ("PETSC_VERSION_" variable (:constant-flag t) nil [529 543])
            ("PETSC_VERSION_LT" variable (:constant-flag t) nil [752 768])
            ("PETSC_VERSION_LE" variable (:constant-flag t) nil [1151 1167])
            ("PETSC_VERSION_GT" variable (:constant-flag t) nil [1289 1305])
            ("PETSC_VERSION_GE" variable (:constant-flag t) nil [1387 1403]))          
      :file "petscversion.h"
      :pointmax 1484
      :fsize 1483
      :lastmodtime '(22985 43730 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("__PETSCVERSION_H")
          ("PETSC_RELEASE_DATE" . ((string "\"Apr, 25, 2016\"" 266 . 281)))
          ("PETSC_VERSION_DATE_GIT" . ((string "\"2017-09-25 18:01:20 -0500\"" 485 . 512)))
          ("PETSC_VERSION_RELEASE" . ((number "1" 91 . 92)))
          ("PETSC_VERSION_GE" (spp-arg-list ("MAJOR" "MINOR" "SUBMINOR") 1403 . 1425) . ((semantic-list "(0 == PETSC_VERSION_LT(MAJOR,MINOR,SUBMINOR))" 1430 . 1475)))
          ("PETSC_VERSION_GIT" . ((string "\"v3.7.7\"" 398 . 406)))
          ("PETSC_VERSION_LE" (spp-arg-list ("MAJOR" "MINOR" "SUBMINOR") 1167 . 1189) . ((semantic-list "(PETSC_VERSION_LT(MAJOR,MINOR,SUBMINOR) || \\
   PETSC_VERSION_(MAJOR,MINOR,SUBMINOR))" 1194 . 1279)))
          ("PETSC_VERSION_GT" (spp-arg-list ("MAJOR" "MINOR" "SUBMINOR") 1305 . 1327) . ((semantic-list "(0 == PETSC_VERSION_LE(MAJOR,MINOR,SUBMINOR))" 1332 . 1377)))
          ("PETSC_VERSION_MAJOR" . ((number "3" 126 . 127)))
          ("PETSC_VERSION_LT" (spp-arg-list ("MAJOR" "MINOR" "SUBMINOR") 768 . 790) . ((semantic-list "(PETSC_VERSION_RELEASE == 1 &&                        \\
   (PETSC_VERSION_MAJOR < (MAJOR) ||                    \\
    (PETSC_VERSION_MAJOR == (MAJOR) &&                  \\
     (PETSC_VERSION_MINOR < (MINOR) ||                  \\
      (PETSC_VERSION_MINOR == (MINOR) &&                \\
       (PETSC_VERSION_SUBMINOR < (SUBMINOR)))))))" 804 . 1141)))
          ("PETSC_VERSION_PATCH" . ((number "0" 231 . 232)))
          ("PETSC_VERSION_DATE" . ((string "\"Sep, 25, 2017\"" 315 . 330)))
          ("PETSC_VERSION_" (spp-arg-list ("MAJOR" "MINOR" "SUBMINOR") 543 . 565) . ((semantic-list "((PETSC_VERSION_MAJOR == (MAJOR)) &&       \\
   (PETSC_VERSION_MINOR == (MINOR)) &&       \\
   (PETSC_VERSION_SUBMINOR == (SUBMINOR)) && \\
   (PETSC_VERSION_RELEASE  == 1))" 570 . 742)))
          ("PETSC_VERSION_SUBMINOR" . ((number "7" 196 . 197)))
          ("PETSC_VERSION_MINOR" . ((number "7" 161 . 162)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__PETSCMATH_H" variable (:constant-flag t) nil [338 351])
            ("math.h" include (:system-flag t) nil [352 369])
            ("PetscScalar" type
               (:typedef ("PetscReal" type (:type "class") nil nil)
                :type "typedef")
                nil [13989 14019])
            ("MPIU_SCALAR" variable (:constant-flag t) nil [14028 14039])
            ("PetscRealPart" variable (:constant-flag t) nil [14059 14072])
            ("PetscImaginaryPart" variable (:constant-flag t) nil [14093 14111])
            ("PetscAbsScalar" function
               (:arguments 
                  ( ("a" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14176 14190]))                  
                :type ("PetscReal" type (:type "class") nil nil))
                nil [14151 14217])
            ("PetscConj" variable (:constant-flag t) nil [14226 14235])
            ("PetscSqrtScalar" variable (:constant-flag t) nil [14300 14315])
            ("PetscPowScalar" variable (:constant-flag t) nil [14338 14352])
            ("PetscExpScalar" variable (:constant-flag t) nil [14377 14391])
            ("PetscLogScalar" variable (:constant-flag t) nil [14414 14428])
            ("PetscSinScalar" variable (:constant-flag t) nil [14451 14465])
            ("PetscCosScalar" variable (:constant-flag t) nil [14488 14502])
            ("PetscAsinScalar" variable (:constant-flag t) nil [14525 14540])
            ("PetscAcosScalar" variable (:constant-flag t) nil [14563 14578])
            ("PetscTanScalar" variable (:constant-flag t) nil [14601 14615])
            ("PetscSinhScalar" variable (:constant-flag t) nil [14638 14653])
            ("PetscCoshScalar" variable (:constant-flag t) nil [14676 14691])
            ("PetscTanhScalar" variable (:constant-flag t) nil [14714 14729])
            ("PetscSign" variable (:constant-flag t) nil [15326 15335])
            ("PetscSignReal" variable (:constant-flag t) nil [15386 15399])
            ("PetscAbs" variable (:constant-flag t) nil [15460 15468])
            ("PetscScalarPrecision" type
               (:typedef ("" type
                     (:members 
                        ( ("PETSC_SCALAR_DOUBLE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [15708 15728])
                          ("PETSC_SCALAR_SINGLE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [15728 15748])
                          ("PETSC_SCALAR_LONG_DOUBLE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [15749 15775]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [15693 15797])
            ("PetscMin" variable (:constant-flag t) nil [16332 16340])
            ("PetscMax" variable (:constant-flag t) nil [16794 16802])
            ("PetscClipInterval" variable (:constant-flag t) nil [17315 17332])
            ("PetscAbsInt" variable (:constant-flag t) nil [17667 17678])
            ("PetscAbsReal" variable (:constant-flag t) nil [18011 18023])
            ("PetscSqr" variable (:constant-flag t) nil [18385 18393])
            ("PETSC_PI" variable (:constant-flag t) nil [18671 18679])
            ("PETSC_MAX_INT" variable (:constant-flag t) nil [18806 18819])
            ("PETSC_MIN_INT" variable (:constant-flag t) nil [18850 18863])
            ("PETSC_INFINITY" variable (:constant-flag t) nil [19983 19997])
            ("PETSC_NINFINITY" variable (:constant-flag t) nil [20040 20055])
            ("PetscIsInfOrNanReal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20134 20144]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20099 20145])
            ("PetscIsNanReal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20189 20199]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20159 20200])
            ("PetscIsNormalReal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20242 20252]))                  
                :type ("PetscBool" type (:type "class") nil nil))
                nil [20214 20253])
            ("PetscIsInfOrNanScalar" function
               (:arguments 
                  ( ("v" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20311 20325]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20274 20374])
            ("PetscIsNanScalar" function
               (:arguments 
                  ( ("v" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20427 20441]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20395 20485])
            ("PetscIsNormalScalar" function
               (:arguments 
                  ( ("v" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20541 20555]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [20506 20602])
            ("MPIU_MATSCALAR" variable (:constant-flag t) nil [20830 20844])
            ("MatScalar" type
               (:typedef ("PetscScalar" type (:type "class") nil nil)
                :type "typedef")
                nil [20857 20887])
            ("MatReal" type
               (:typedef ("PetscReal" type (:type "class") nil nil)
                :type "typedef")
                nil [20888 20914])
            ("petsc_mpiu_2scalar" type
               (:members 
                  ( ("a" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20943 20959])
                    ("b" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20943 20959]))                  
                :type "struct")
                nil [20916 20961])
            ("PetscAttrMPITypeTagLayoutCompatible" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("petsc_mpiu_2scalar" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) [21037 21063]))                  
                :type ("MPIU_2SCALAR" type (:type "class") nil nil))
                nil [20988 21064])
            ("petsc_mpiu_2int" type
               (:members 
                  ( ("a" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21148 21161])
                    ("b" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21148 21161]))                  
                :type "struct")
                nil [21124 21163])
            ("PetscAttrMPITypeTagLayoutCompatible" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("petsc_mpiu_2int" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) [21236 21259]))                  
                :type ("MPIU_2INT" type (:type "class") nil nil))
                nil [21190 21260])
            ("PetscPowInt" function
               (:arguments 
                  ( ("base" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21343 21357])
                    ("power" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21357 21372]))                  
                :type ("PetscInt" type (:type "class") nil nil))
                nil [21322 21508])
            ("PetscPowRealInt" function
               (:arguments 
                  ( ("base" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21556 21571])
                    ("power" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21571 21586]))                  
                :type ("PetscReal" type (:type "class") nil nil))
                nil [21530 21799])
            ("PetscPowScalarInt" function
               (:arguments 
                  ( ("base" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21851 21868])
                    ("power" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21868 21883]))                  
                :type ("PetscScalar" type (:type "class") nil nil))
                nil [21821 22098])
            ("PetscPowScalarReal" function
               (:arguments 
                  ( ("base" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22151 22168])
                    ("power" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22168 22184]))                  
                :type ("PetscScalar" type (:type "class") nil nil))
                nil [22120 22256])
            ("PetscLog2Real" function
               (:arguments 
                  ( ("n" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22326 22338]))                  
                :type ("PetscReal" type (:type "class") nil nil))
                nil [22302 22386]))          
      :file "petscmath.h"
      :pointmax 22401
      :fsize 22400
      :lastmodtime '(22420 61452 0 0)
      :unmatched-syntax '((symbol 22282 . 22301) (symbol 22100 . 22119) (symbol 21801 . 21820) (symbol 21510 . 21529) (symbol 21302 . 21321) (symbol 21177 . 21189) (symbol 21164 . 21176) (symbol 20975 . 20987) (symbol 20962 . 20974) (symbol 20486 . 20505) (symbol 20375 . 20394) (symbol 20254 . 20273) (symbol 20201 . 20213) (symbol 20146 . 20158) (symbol 20086 . 20098) (symbol 14131 . 14150))
      :lexical-table 
        '(("PetscAbsInt" (spp-arg-list ("a") 17678 . 17681) . ((semantic-list "(((a)<0)   ? -(a) : (a))" 17683 . 17707)))
          ("PetscSqr" (spp-arg-list ("a") 18393 . 18396) . ((semantic-list "((a)*(a))" 18401 . 18410)))
          ("MPIU_MATSCALAR" . ((symbol "MPIU_SCALAR" 20845 . 20856)))
          ("PetscAsinScalar" (spp-arg-list ("a") 14540 . 14543) . ((symbol "asin" 14547 . 14551) (semantic-list "(a)" 14551 . 14554)))
          ("PetscSignReal" (spp-arg-list ("a") 15399 . 15402) . ((semantic-list "(((a) >= 0.0) ? ((a) == 0.0 ? 0.0 : 1.0) : -1.0)" 15403 . 15451)))
          ("PETSC_PI" . ((number "3.14159265358979323846264338327950288419716939937510582" 18696 . 18751)))
          ("PetscAbs" (spp-arg-list ("a") 15468 . 15471) . ((semantic-list "(((a) >= 0) ? (a) : -(a))" 15473 . 15498)))
          ("MPIU_SCALAR" . ((symbol "MPIU_REAL" 14040 . 14049)))
          ("PetscCosScalar" (spp-arg-list ("a") 14502 . 14505) . ((symbol "cos" 14510 . 14513) (semantic-list "(a)" 14513 . 14516)))
          ("PetscSinhScalar" (spp-arg-list ("a") 14653 . 14656) . ((symbol "sinh" 14660 . 14664) (semantic-list "(a)" 14664 . 14667)))
          ("PetscCoshScalar" (spp-arg-list ("a") 14691 . 14694) . ((symbol "cosh" 14698 . 14702) (semantic-list "(a)" 14702 . 14705)))
          ("__PETSCMATH_H")
          ("PetscTanScalar" (spp-arg-list ("a") 14615 . 14618) . ((symbol "tan" 14623 . 14626) (semantic-list "(a)" 14626 . 14629)))
          ("PetscSign" (spp-arg-list ("a") 15335 . 15338) . ((semantic-list "(((a) >= 0) ? ((a) == 0 ? 0 : 1) : -1)" 15339 . 15377)))
          ("PetscAbsReal" (spp-arg-list ("a") 18023 . 18026) . ((semantic-list "(((a)<0)   ? -(a) : (a))" 18027 . 18051)))
          ("PetscExpScalar" (spp-arg-list ("a") 14391 . 14394) . ((symbol "exp" 14399 . 14402) (semantic-list "(a)" 14402 . 14405)))
          ("PetscClipInterval" (spp-arg-list ("x" "a" "b") 17332 . 17339) . ((semantic-list "(PetscMax((a),PetscMin((x),(b))))" 17342 . 17375)))
          ("PetscRealPart" (spp-arg-list ("a") 14072 . 14075) . ((semantic-list "(a)" 14081 . 14084)))
          ("PetscPowScalar" (spp-arg-list ("a" "b") 14352 . 14357) . ((symbol "pow" 14360 . 14363) (semantic-list "(a,b)" 14363 . 14368)))
          ("PetscLogScalar" (spp-arg-list ("a") 14428 . 14431) . ((symbol "log" 14436 . 14439) (semantic-list "(a)" 14439 . 14442)))
          ("PetscSinScalar" (spp-arg-list ("a") 14465 . 14468) . ((symbol "sin" 14473 . 14476) (semantic-list "(a)" 14476 . 14479)))
          ("PETSC_MAX_INT" . ((number "2147483647" 18831 . 18841)))
          ("PetscConj" (spp-arg-list ("a") 14235 . 14238) . ((semantic-list "(a)" 14248 . 14251)))
          ("PetscSqrtScalar" (spp-arg-list ("a") 14315 . 14318) . ((symbol "sqrt" 14322 . 14326) (semantic-list "(a)" 14326 . 14329)))
          ("PetscMax" (spp-arg-list ("a" "b") 16802 . 16807) . ((semantic-list "(((a)<(b)) ?  (b) : (a))" 16810 . 16834)))
          ("PetscMin" (spp-arg-list ("a" "b") 16340 . 16345) . ((semantic-list "(((a)<(b)) ?  (a) : (b))" 16348 . 16372)))
          ("PetscAcosScalar" (spp-arg-list ("a") 14578 . 14581) . ((symbol "acos" 14585 . 14589) (semantic-list "(a)" 14589 . 14592)))
          ("PetscTanhScalar" (spp-arg-list ("a") 14729 . 14732) . ((symbol "tanh" 14736 . 14740) (semantic-list "(a)" 14740 . 14743)))
          ("PETSC_MIN_INT" . ((semantic-list "(-PETSC_MAX_INT - 1)" 18875 . 18895)))
          ("PetscImaginaryPart" (spp-arg-list ("a") 14111 . 14114) . ((semantic-list "((PetscReal)0.)" 14115 . 14130)))
          ("PETSC_INFINITY" . 
              ((symbol "PETSC_MAX_REAL" 20013 . 20027) (punctuation "/" 20027 . 20028) (number "4.0" 20028 . 20031)))
          ("PETSC_NINFINITY" . ((punctuation "-" 20069 . 20070) (symbol "PETSC_INFINITY" 20070 . 20084)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__PETSCERROR_H" variable (:constant-flag t) nil [98 112])
            ("__FUNCT__" variable (:constant-flag t) nil [312 321])
            ("PETSC_ERR_MIN_VALUE" variable (:constant-flag t) nil [696 715])
            ("PETSC_ERR_MEM" variable (:constant-flag t) nil [793 806])
            ("PETSC_ERR_SUP" variable (:constant-flag t) nil [875 888])
            ("PETSC_ERR_SUP_SYS" variable (:constant-flag t) nil [956 973])
            ("PETSC_ERR_ORDER" variable (:constant-flag t) nil [1061 1076])
            ("PETSC_ERR_SIG" variable (:constant-flag t) nil [1137 1150])
            ("PETSC_ERR_FP" variable (:constant-flag t) nil [1199 1211])
            ("PETSC_ERR_COR" variable (:constant-flag t) nil [1270 1283])
            ("PETSC_ERR_LIB" variable (:constant-flag t) nil [1339 1352])
            ("PETSC_ERR_PLIB" variable (:constant-flag t) nil [1418 1432])
            ("PETSC_ERR_MEMC" variable (:constant-flag t) nil [1506 1520])
            ("PETSC_ERR_CONV_FAILED" variable (:constant-flag t) nil [1570 1591])
            ("PETSC_ERR_USER" variable (:constant-flag t) nil [1654 1668])
            ("PETSC_ERR_SYS" variable (:constant-flag t) nil [1738 1751])
            ("PETSC_ERR_POINTER" variable (:constant-flag t) nil [1805 1822])
            ("PETSC_ERR_ARG_SIZ" variable (:constant-flag t) nil [1892 1909])
            ("PETSC_ERR_ARG_IDN" variable (:constant-flag t) nil [1983 2000])
            ("PETSC_ERR_ARG_WRONG" variable (:constant-flag t) nil [2070 2089])
            ("PETSC_ERR_ARG_CORRUPT" variable (:constant-flag t) nil [2156 2177])
            ("PETSC_ERR_ARG_OUTOFRANGE" variable (:constant-flag t) nil [2245 2269])
            ("PETSC_ERR_ARG_BADPTR" variable (:constant-flag t) nil [2320 2340])
            ("PETSC_ERR_ARG_NOTSAMETYPE" variable (:constant-flag t) nil [2391 2416])
            ("PETSC_ERR_ARG_NOTSAMECOMM" variable (:constant-flag t) nil [2471 2496])
            ("PETSC_ERR_ARG_WRONGSTATE" variable (:constant-flag t) nil [2553 2577])
            ("PETSC_ERR_ARG_TYPENOTSET" variable (:constant-flag t) nil [2658 2682])
            ("PETSC_ERR_ARG_INCOMP" variable (:constant-flag t) nil [2748 2768])
            ("PETSC_ERR_ARG_NULL" variable (:constant-flag t) nil [2825 2843])
            ("PETSC_ERR_ARG_UNKNOWN_TYPE" variable (:constant-flag t) nil [2907 2933])
            ("PETSC_ERR_FILE_OPEN" variable (:constant-flag t) nil [2998 3017])
            ("PETSC_ERR_FILE_READ" variable (:constant-flag t) nil [3064 3083])
            ("PETSC_ERR_FILE_WRITE" variable (:constant-flag t) nil [3135 3155])
            ("PETSC_ERR_FILE_UNEXPECTED" variable (:constant-flag t) nil [3205 3230])
            ("PETSC_ERR_MAT_LU_ZRPVT" variable (:constant-flag t) nil [3276 3298])
            ("PETSC_ERR_MAT_CH_ZRPVT" variable (:constant-flag t) nil [3368 3390])
            ("PETSC_ERR_INT_OVERFLOW" variable (:constant-flag t) nil [3467 3489])
            ("PETSC_ERR_FLOP_COUNT" variable (:constant-flag t) nil [3506 3526])
            ("PETSC_ERR_NOT_CONVERGED" variable (:constant-flag t) nil [3544 3567])
            ("PETSC_ERR_MISSING_FACTOR" variable (:constant-flag t) nil [3613 3637])
            ("PETSC_ERR_OPT_OVERWRITE" variable (:constant-flag t) nil [3680 3703])
            ("PETSC_ERR_MAX_VALUE" variable (:constant-flag t) nil [3786 3805])
            ("PetscStringizeArg" variable (:constant-flag t) nil [3888 3905])
            ("PetscStringize" variable (:constant-flag t) nil [3920 3934])
            ("SETERRQ" variable (:constant-flag t) nil [21043 21050])
            ("SETERRQ1" variable (:constant-flag t) nil [21066 21074])
            ("SETERRQ2" variable (:constant-flag t) nil [21093 21101])
            ("SETERRQ3" variable (:constant-flag t) nil [21123 21131])
            ("SETERRQ4" variable (:constant-flag t) nil [21156 21164])
            ("SETERRQ5" variable (:constant-flag t) nil [21192 21200])
            ("SETERRQ6" variable (:constant-flag t) nil [21231 21239])
            ("SETERRQ7" variable (:constant-flag t) nil [21273 21281])
            ("SETERRQ8" variable (:constant-flag t) nil [21318 21326])
            ("SETERRABORT" variable (:constant-flag t) nil [21366 21377])
            ("CHKERRQ" variable (:constant-flag t) nil [21397 21404])
            ("CHKERRV" variable (:constant-flag t) nil [21422 21429])
            ("CHKERRABORT" variable (:constant-flag t) nil [21447 21458])
            ("CHKERRCONTINUE" variable (:constant-flag t) nil [21477 21491])
            ("CHKMEMQ" variable (:constant-flag t) nil [21505 21512])
            ("CHKERRCUDA" variable (:constant-flag t) nil [21530 21540])
            ("CHKERRCUBLAS" variable (:constant-flag t) nil [21556 21568])
            ("PetscErrorType" type
               (:typedef ("" type
                     (:members 
                        ( ("PETSC_ERROR_INITIAL" variable
                             (:constant-flag t
                              :default-value (22139 22140)
                              :type "int")
                              (reparse-symbol enumsubparts) [22119 22140])
                          ("PETSC_ERROR_REPEAT" variable
                             (:constant-flag t
                              :default-value (22160 22161)
                              :type "int")
                              (reparse-symbol enumsubparts) [22141 22161])
                          ("PETSC_ERROR_IN_CXX" variable
                             (:constant-flag t
                              :default-value (22183 22184)
                              :type "int")
                              (reparse-symbol enumsubparts) [22162 22184]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [22105 22201])
            ("PetscError" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22316 22325])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [22325 22329])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22329 22341])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22341 22353])
                    ("" variable (:type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22353 22368])
                    ("" variable (:type ("PetscErrorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22368 22383])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22383 22395])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [22395 22399]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22290 22400])
            ("PetscErrorPrintfInitialize" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [22457 22462]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22415 22463])
            ("PetscErrorMessage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [22510 22514])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22514 22527])
                    ("" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [22528 22536]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22477 22537])
            ("PetscTraceBackErrorHandler" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22593 22602])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [22602 22606])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22606 22618])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22618 22630])
                    ("" variable (:type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22630 22645])
                    ("" variable (:type ("PetscErrorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22645 22660])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22660 22672])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [22672 22678]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22551 22679])
            ("PetscIgnoreErrorHandler" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22732 22741])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [22741 22745])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22745 22757])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22757 22769])
                    ("" variable (:type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22769 22784])
                    ("" variable (:type ("PetscErrorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22784 22799])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22799 22811])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [22811 22817]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22693 22818])
            ("PetscEmacsClientErrorHandler" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22876 22885])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [22885 22889])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22889 22901])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22901 22913])
                    ("" variable (:type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22913 22928])
                    ("" variable (:type ("PetscErrorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22928 22943])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22943 22955])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [22955 22961]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22832 22962])
            ("PetscMPIAbortErrorHandler" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23017 23026])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [23026 23030])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [23030 23042])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [23042 23054])
                    ("" variable (:type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23054 23069])
                    ("" variable (:type ("PetscErrorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23069 23084])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [23084 23096])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [23096 23102]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22976 23103])
            ("PetscAbortErrorHandler" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23155 23164])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [23164 23168])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [23168 23180])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [23180 23192])
                    ("" variable (:type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23192 23207])
                    ("" variable (:type ("PetscErrorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23207 23222])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [23222 23234])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [23234 23240]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23117 23241])
            ("PetscAttachDebuggerErrorHandler" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23302 23311])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [23311 23315])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [23315 23327])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [23327 23339])
                    ("" variable (:type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23339 23354])
                    ("" variable (:type ("PetscErrorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23354 23369])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [23369 23381])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [23381 23387]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23255 23388])
            ("PetscReturnErrorHandler" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23441 23450])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [23450 23454])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [23454 23466])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [23466 23478])
                    ("" variable (:type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23478 23493])
                    ("" variable (:type ("PetscErrorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23493 23508])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [23508 23520])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [23520 23526]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23402 23527])
            ("PetscPushErrorHandler" function
               (:prototype-flag t
                :arguments 
                  ( ("handler" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23604 23613])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [23613 23617])
                            ("" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [23617 23629])
                            ("" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [23629 23641])
                            ("" variable (:type ("PetscErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23641 23656])
                            ("" variable (:type ("PetscErrorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23656 23671])
                            ("" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [23671 23683])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [23683 23689]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [23690 23696]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23541 23697])
            ("PetscPopErrorHandler" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [23747 23752]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23711 23753])
            ("PetscSignalHandlerDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [23808 23812])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [23812 23818]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23767 23819])
            ("PetscPushSignalHandler" function
               (:prototype-flag t
                :arguments 
                  ( ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [23890 23894])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [23894 23901]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [23902 23908]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23833 23909])
            ("PetscPopSignalHandler" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [23960 23965]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23923 23966])
            ("PetscCheckPointerSetIntensity" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24025 24034]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23980 24035])
            ("PetscErrorCode" function
               (:arguments 
                  ( ("" variable (:type ("PetscErrorPrintf" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25489 25506]))                  
                :type ("PETSC_EXTERN" type (:type "class") nil nil))
                nil [25459 25524])
            ("PetscFPTrap" type
               (:typedef ("" type
                     (:members 
                        ( ("PETSC_FP_TRAP_OFF" variable
                             (:constant-flag t
                              :default-value (25559 25560)
                              :type "int")
                              (reparse-symbol enumsubparts) [25541 25560])
                          ("PETSC_FP_TRAP_ON" variable
                             (:constant-flag t
                              :default-value (25578 25579)
                              :type "int")
                              (reparse-symbol enumsubparts) [25561 25579]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [25527 25593])
            ("PetscSetFPTrap" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscFPTrap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25637 25649]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25607 25650])
            ("PetscFPTrapPush" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscFPTrap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25695 25707]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25664 25708])
            ("PetscFPTrapPop" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [25752 25757]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [25722 25758])
            ("PETSCSTACKSIZE" variable (:constant-flag t) nil [25831 25845])
            ("PetscStack" type
               (:typedef ("" type
                     (:members 
                        ( ("function" variable
                             (:pointer 1
                              :dereference 1
                              :constant-flag t
                              :type "char")
                              (reparse-symbol classsubparts) [25870 25912])
                          ("file" variable
                             (:pointer 1
                              :dereference 1
                              :constant-flag t
                              :type "char")
                              (reparse-symbol classsubparts) [25915 25953])
                          ("line" variable
                             (:dereference 1
                              :type "int")
                              (reparse-symbol classsubparts) [25962 25993])
                          ("petscroutine" variable
                             (:dereference 1
                              :type ("PetscBool" type (:type "class") nil nil))
                              (reparse-symbol classsubparts) [26002 26041])
                          ("currentsize" variable (:type "int") (reparse-symbol classsubparts) [26050 26072])
                          ("hotdepth" variable (:type "int") (reparse-symbol classsubparts) [26081 26100]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [25850 26114])
            ("petscstack" variable
               (:pointer 1
                :type ("PetscStack" type (:type "class") nil nil))
                nil [26129 26152])
            ("PetscStackCopy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscStack" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26185 26197])
                    ("" variable
                       (:pointer 1
                        :type ("PetscStack" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26197 26209]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26154 26210])
            ("PetscStackPrint" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscStack" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26243 26256])
                    ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26256 26262]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [26211 26263])
            ("PetscStackActive" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [33863 33868]))                  
                :type ("PetscBool" type (:type "class") nil nil))
                nil [33836 33890])
            ("PetscStackPushNoCheck" variable (:constant-flag t) nil [33899 33920])
            ("PetscStackPopNoCheck" variable (:constant-flag t) nil [33970 33990])
            ("PetscFunctionBegin" variable (:constant-flag t) nil [34041 34059])
            ("PetscFunctionBeginUser" variable (:constant-flag t) nil [34068 34090])
            ("PetscFunctionBeginHot" variable (:constant-flag t) nil [34099 34120])
            ("PetscFunctionReturn" variable (:constant-flag t) nil [34129 34148])
            ("PetscFunctionReturnVoid" variable (:constant-flag t) nil [34173 34196])
            ("PetscStackPop" variable (:constant-flag t) nil [34214 34227])
            ("PetscStackPush" variable (:constant-flag t) nil [34256 34270])
            ("PetscStackCall" variable (:constant-flag t) nil [34907 34921])
            ("PetscStackCallStandard" variable (:constant-flag t) nil [35501 35523])
            ("PetscStackCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [35758 35763]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [35726 35764])
            ("PetscStackView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [35808 35814]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [35778 35815])
            ("PetscStackDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [35862 35867]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [35829 35868]))          
      :file "petscerror.h"
      :pointmax 35877
      :fsize 35876
      :lastmodtime '(22513 48468 0 0)
      :unmatched-syntax '((symbol 35816 . 35828) (symbol 35765 . 35777) (symbol 35713 . 35725) (symbol 33816 . 33835) (symbol 26116 . 26128) (symbol 25709 . 25721) (symbol 25651 . 25663) (symbol 25594 . 25606) (punctuation 25524 . 25525) (punctuation 25488 . 25489) (symbol 23967 . 23979) (symbol 23910 . 23922) (symbol 23820 . 23832) (symbol 23754 . 23766) (symbol 23698 . 23710) (symbol 23528 . 23540) (symbol 23389 . 23401) (symbol 23242 . 23254) (symbol 23104 . 23116) (symbol 22963 . 22975) (symbol 22819 . 22831) (symbol 22680 . 22692) (symbol 22538 . 22550) (semantic-list 22525 . 22527) (symbol 22464 . 22476) (symbol 22402 . 22414) (symbol 22277 . 22289))
      :lexical-table 
        '(("PETSC_ERR_ARG_NOTSAMETYPE" . ((number "69" 2418 . 2420)))
          ("CHKMEMQ" . ((punctuation ";" 21520 . 21521)))
          ("CHKERRCUDA" (spp-arg-list ("err") 21540 . 21545) . ((punctuation ";" 21546 . 21547)))
          ("PETSC_ERR_SIG" . ((number "59" 1164 . 1166)))
          ("PETSC_ERR_FP" . ((number "72" 1226 . 1228)))
          ("PETSC_ERR_POINTER" . ((number "70" 1832 . 1834)))
          ("PETSC_ERR_ARG_WRONGSTATE" . ((number "73" 2580 . 2582)))
          ("PETSC_ERR_ARG_NULL" . ((number "85" 2852 . 2854)))
          ("PETSC_ERR_FILE_WRITE" . ((number "67" 3162 . 3164)))
          ("SETERRQ1" (spp-arg-list ("c" "n" "s" "a1") 21074 . 21084))
          ("CHKERRABORT" (spp-arg-list ("comm" "n") 21458 . 21466) . ((punctuation ";" 21467 . 21468)))
          ("PetscStackPushNoCheck" (spp-arg-list ("funct" "petsc_routine" "hot") 33920 . 33945) . 
              ((DO "do" 33946 . 33948) (semantic-list "{}" 33949 . 33951) (WHILE "while" 33952 . 33957) (semantic-list "(0)" 33958 . 33961)))
          ("PetscFunctionBeginHot")
          ("PetscFunctionReturnVoid" (spp-arg-list nil 34196 . 34198) . ((RETURN "return" 34199 . 34205)))
          ("PETSC_ERR_USER" . ((number "83" 1681 . 1683)))
          ("PETSC_ERR_FILE_READ" . ((number "66" 3091 . 3093)))
          ("PETSC_ERR_MISSING_FACTOR" . ((number "92" 3640 . 3642)))
          ("SETERRQ2" (spp-arg-list ("c" "n" "s" "a1" "a2") 21101 . 21114))
          ("PetscFunctionBegin")
          ("PetscStackPop" . ((symbol "CHKMEMQ" 34240 . 34247)))
          ("PetscStackCall" (spp-arg-list ("name" "routine") 34921 . 34935) . 
              ((DO "do" 34936 . 34938) (semantic-list "{ PetscStackPush(name);routine;PetscStackPop; }" 34939 . 34986) (WHILE "while" 34987 . 34992) (semantic-list "(0)" 34992 . 34995)))
          ("__PETSCERROR_H")
          ("PETSC_ERR_COR" . ((number "74" 1297 . 1299)))
          ("PETSC_ERR_FILE_OPEN" . ((number "65" 3025 . 3027)))
          ("PETSC_ERR_FILE_UNEXPECTED" . ((number "79" 3232 . 3234)))
          ("PETSC_ERR_MAX_VALUE" . ((number "94" 3813 . 3815)))
          ("SETERRQ3" (spp-arg-list ("c" "n" "s" "a1" "a2" "a3") 21131 . 21147))
          ("PETSC_ERR_MIN_VALUE" . ((number "54" 723 . 725)))
          ("PETSC_ERR_ARG_TYPENOTSET" . ((number "89" 2685 . 2687)))
          ("PetscStringizeArg" (spp-arg-list ("a") 3905 . 3908) . ((punctuation "#" 3909 . 3910) (symbol "a" 3910 . 3911)))
          ("PetscStringize" (spp-arg-list ("a") 3934 . 3937) . ((symbol "PetscStringizeArg" 3938 . 3955) (semantic-list "(a)" 3955 . 3958)))
          ("SETERRQ4" (spp-arg-list ("c" "n" "s" "a1" "a2" "a3" "a4") 21164 . 21183))
          ("PetscFunctionBeginUser")
          ("PetscStackPush" (spp-arg-list ("f") 34270 . 34273) . ((symbol "CHKMEMQ" 34282 . 34289)))
          ("PETSC_ERR_SUP_SYS" . ((number "57" 983 . 985)))
          ("PETSC_ERR_ARG_OUTOFRANGE" . ((number "63" 2272 . 2274)))
          ("PETSC_ERR_ARG_BADPTR" . ((number "68" 2347 . 2349)))
          ("SETERRQ5" (spp-arg-list ("c" "n" "s" "a1" "a2" "a3" "a4" "a5") 21200 . 21222))
          ("CHKERRCONTINUE" (spp-arg-list ("n") 21491 . 21494) . ((punctuation ";" 21495 . 21496)))
          ("__FUNCT__" . ((string "\"User provided function\"" 322 . 346)))
          ("PETSC_ERR_MEM" . ((number "55" 820 . 822)))
          ("PETSC_ERR_ARG_UNKNOWN_TYPE" . ((number "86" 2934 . 2936)))
          ("SETERRQ6" (spp-arg-list ("c" "n" "s" "a1" "a2" "a3" "a4" "a5" "a6") 21239 . 21264))
          ("PetscStackPopNoCheck" . 
              ((DO "do" 34017 . 34019) (semantic-list "{}" 34020 . 34022) (WHILE "while" 34023 . 34028) (semantic-list "(0)" 34029 . 34032)))
          ("PETSC_ERR_SUP" . ((number "56" 902 . 904)))
          ("PETSC_ERR_MEMC" . ((number "78" 1533 . 1535)))
          ("SETERRQ7" (spp-arg-list ("c" "n" "s" "a1" "a2" "a3" "a4" "a5" "a6" "a7") 21281 . 21309))
          ("CHKERRQ" (spp-arg-list ("n") 21404 . 21407) . ((punctuation ";" 21412 . 21413)))
          ("PetscFunctionReturn" (spp-arg-list ("a") 34148 . 34151) . ((RETURN "return" 34155 . 34161) (semantic-list "(a)" 34161 . 34164)))
          ("PETSC_ERR_ORDER" . ((number "58" 1088 . 1090)))
          ("PETSC_ERR_PLIB" . ((number "77" 1445 . 1447)))
          ("PETSC_ERR_ARG_CORRUPT" . ((number "64" 2183 . 2185)))
          ("PETSC_ERR_NOT_CONVERGED" . ((number "91" 3571 . 3573)))
          ("SETERRQ8" (spp-arg-list ("c" "n" "s" "a1" "a2" "a3" "a4" "a5" "a6" "a7" "a8") 21326 . 21357))
          ("PETSC_ERR_SYS" . ((number "88" 1765 . 1767)))
          ("PETSC_ERR_ARG_SIZ" . ((number "60" 1919 . 1921)))
          ("PETSC_ERR_ARG_IDN" . ((number "61" 2010 . 2012)))
          ("PETSC_ERR_ARG_WRONG" . ((number "62" 2097 . 2099)))
          ("PETSC_ERR_ARG_NOTSAMECOMM" . ((number "80" 2498 . 2500)))
          ("PETSC_ERR_ARG_INCOMP" . ((number "75" 2775 . 2777)))
          ("PETSC_ERR_MAT_CH_ZRPVT" . ((number "81" 3395 . 3397)))
          ("SETERRQ" (spp-arg-list ("c" "n" "s") 21050 . 21057))
          ("SETERRABORT" (spp-arg-list ("comm" "n" "s") 21377 . 21387))
          ("PETSCSTACKSIZE" . ((number "64" 25846 . 25848)))
          ("PETSC_ERR_LIB" . ((number "76" 1366 . 1368)))
          ("PETSC_ERR_MAT_LU_ZRPVT" . ((number "71" 3303 . 3305)))
          ("CHKERRCUBLAS" (spp-arg-list ("err") 21568 . 21573) . ((punctuation ";" 21574 . 21575)))
          ("PetscStackCallStandard" (spp-arg-list ("func" "args") 35523 . 35534) . 
              ((DO "do" 35535 . 35537) (semantic-list "{                        \\
    PetscStackPush(#func);ierr = func args;PetscStackPop; if (ierr) SETERRQ1(PETSC_COMM_SELF,PETSC_ERR_LIB,\"Error in %s()\",#func); \\
  }" 35538 . 35701) (WHILE "while" 35702 . 35707) (semantic-list "(0)" 35708 . 35711)))
          ("PETSC_ERR_CONV_FAILED" . ((number "82" 1597 . 1599)))
          ("PETSC_ERR_INT_OVERFLOW" . ((number "84" 3494 . 3496)))
          ("PETSC_ERR_FLOP_COUNT" . ((number "90" 3533 . 3535)))
          ("PETSC_ERR_OPT_OVERWRITE" . ((number "93" 3707 . 3709)))
          ("CHKERRV" (spp-arg-list ("n") 21429 . 21432) . ((punctuation ";" 21437 . 21438)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__PETSCOPTIONS_H" variable (:constant-flag t) nil [108 124])
            ("petscsys.h" include (:system-flag t) nil [125 146])
            ("petscviewertypes.h" include (:system-flag t) nil [147 176])
            ("PetscOptions" type
               (:typedef ("_n_PetscOptions" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [178 223])
            ("PetscOptionsCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptions" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [271 286]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [237 287])
            ("PetscOptionsDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptions" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [336 351]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [301 352])
            ("PetscOptionsHasName" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [402 415])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [415 427])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [428 440])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [441 453]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [367 454])
            ("PetscOptionsGetInt" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [502 515])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [515 527])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [528 541])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [542 553])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [553 565]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [468 566])
            ("PetscOptionsGetBool" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [615 628])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [628 640])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [641 654])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [655 668])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [668 680]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [580 681])
            ("PetscOptionsGetReal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [730 743])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [743 755])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [756 768])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [769 781])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [781 793]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [695 794])
            ("PetscOptionsGetScalar" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [845 858])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [858 870])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [871 883])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [884 898])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [898 910]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [808 911])
            ("PetscOptionsGetIntArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [964 977])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [977 989])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [990 1002])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1003 1013])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1014 1025])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1025 1037]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [925 1038])
            ("PetscOptionsGetRealArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1092 1105])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1105 1117])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1118 1130])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1131 1142])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1143 1154])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1154 1166]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1052 1167])
            ("PetscOptionsGetScalarArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1223 1236])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1236 1248])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1249 1261])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1262 1275])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1276 1287])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1287 1299]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1181 1300])
            ("PetscOptionsGetBoolArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1354 1367])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1367 1379])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1380 1392])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1393 1405])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1406 1417])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1417 1429]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1314 1430])
            ("PetscOptionsGetString" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1481 1494])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1494 1506])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1507 1519])
                    ("" variable (:type "char") (reparse-symbol arg-sub-list) [1520 1526])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1527 1534])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1534 1546]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1444 1547])
            ("PetscOptionsGetStringArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1603 1616])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1616 1628])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1629 1641])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1642 1649])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1650 1660])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1660 1672]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1561 1673])
            ("PetscOptionsGetEList" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1723 1736])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1736 1748])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1749 1761])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1762 1780])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1780 1789])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1789 1799])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1799 1811]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1687 1812])
            ("PetscOptionsGetEnum" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1861 1874])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1874 1886])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1887 1899])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1900 1918])
                    ("" variable
                       (:pointer 1
                        :type ("PetscEnum" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1918 1929])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1929 1941]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1826 1942])
            ("PetscOptionsGetEnumArray" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1996 2009])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2009 2021])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2022 2034])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2035 2053])
                    ("" variable
                       (:pointer 1
                        :type ("PetscEnum" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2053 2064])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2064 2075])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2075 2087]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [1956 2088])
            ("PetscOptionsValidKey" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2138 2150])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2151 2163]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2102 2164])
            ("PetscOptionsSetAlias" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2215 2228])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2228 2240])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2241 2253]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2179 2255])
            ("PetscOptionsSetValue" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2305 2318])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2318 2330])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2331 2343]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2269 2345])
            ("PetscOptionsClearValue" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2397 2410])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2410 2422]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2359 2424])
            ("PetscOptionsAllUsed" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2474 2487])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2487 2497]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2439 2498])
            ("PetscOptionsUsed" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2544 2557])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2557 2570])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2570 2581]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2512 2582])
            ("PetscOptionsLeft" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2628 2641]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2596 2642])
            ("PetscOptionsView" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2688 2701])
                    ("" variable (:type ("PetscViewer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2701 2713]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2656 2714])
            ("PetscOptionsCreateDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2770 2775]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2729 2776])
            ("PetscOptionsInsert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2824 2837])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [2837 2842])
                    ("" variable
                       (:pointer 3
                        :type "char")
                        (reparse-symbol arg-sub-list) [2842 2851])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2851 2863]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2790 2865])
            ("PetscOptionsInsertFile" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2917 2926])
                    ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2926 2939])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2939 2951])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2952 2963]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2879 2964])
            ("PetscOptionsInsertString" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3143 3156])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3156 3168]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3103 3170])
            ("PetscOptionsDestroyDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3226 3231]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3184 3232])
            ("PetscOptionsClear" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3279 3292]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3246 3293])
            ("PetscOptionsPrefixPush" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3345 3358])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3358 3370]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3307 3372])
            ("PetscOptionsPrefixPop" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3423 3436]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3386 3437])
            ("PetscOptionsReject" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3486 3499])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3499 3511])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3512 3524]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3452 3526])
            ("PetscOptionsGetAll" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3574 3587])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [3587 3594]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3540 3596])
            ("PetscOptionsGetenv" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3645 3654])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3654 3666])
                    ("" variable (:type "char") (reparse-symbol arg-sub-list) [3667 3673])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3674 3681])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3681 3694]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3611 3695])
            ("PetscOptionsStringToInt" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3748 3760])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3761 3771]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3709 3772])
            ("PetscOptionsStringToReal" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3826 3838])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3839 3850]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3786 3851])
            ("PetscOptionsStringToBool" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3905 3917])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3918 3929]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3865 3930])
            ("PetscOptionsMonitorSet" function
               (:prototype-flag t
                :arguments 
                  ( ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [4002 4014])
                            ("" variable
                               (:constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [4016 4028])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [4030 4036]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [4038 4045])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 2
                                :type "void")
                                (reparse-symbol arg-sub-list) [4065 4072]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [3945 4074])
            ("PetscOptionsMonitorCancel" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [4129 4134]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4088 4135])
            ("PetscOptionsMonitorDefault" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4191 4203])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4205 4217])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [4219 4226]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [4149 4227])
            ("PetscOptionsPublish" variable (:type ("PetscBool" type (:type "class") nil nil)) nil [4242 4272])
            ("PetscOptionType" type
               (:typedef ("" type
                     (:members 
                        ( ("OPTION_INT" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4510 4521])
                          ("OPTION_BOOL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4521 4533])
                          ("OPTION_REAL" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4533 4545])
                          ("OPTION_FLIST" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4545 4558])
                          ("OPTION_STRING" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4558 4572])
                          ("OPTION_REAL_ARRAY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4572 4590])
                          ("OPTION_SCALAR_ARRAY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4590 4610])
                          ("OPTION_HEAD" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4610 4622])
                          ("OPTION_INT_ARRAY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4622 4639])
                          ("OPTION_ELIST" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4639 4652])
                          ("OPTION_BOOL_ARRAY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4652 4670])
                          ("OPTION_STRING_ARRAY" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4670 4690]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [4496 4707])
            ("PetscOptionItem" type
               (:typedef ("_n_PetscOptionItem" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [4708 4759])
            ("_n_PetscOptionItem" type
               (:members 
                  ( ("option" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [4789 4815])
                    ("text" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [4818 4842])
                    ("data" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol classsubparts) [4845 4869])
                    ("flist" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4960 4984])
                    ("list" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol classsubparts) [5050 5074])
                    ("nlist" variable (:type "char") (reparse-symbol classsubparts) [5140 5164])
                    ("man" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [5207 5230])
                    ("arraylength" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5233 5263])
                    ("set" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5350 5372])
                    ("type" variable (:type ("PetscOptionType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5434 5457])
                    ("next" variable (:type ("PetscOptionItem" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5460 5483])
                    ("pman" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [5486 5510])
                    ("edata" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol classsubparts) [5513 5538]))                  
                :type "struct")
                nil [4760 5541])
            ("_p_PetscOptionItems" type
               (:members 
                  ( ("count" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5582 5605])
                    ("next" variable (:type ("PetscOptionItem" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5608 5630])
                    ("prefix" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [5633 5667])
                    ("pprefix" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [5633 5667])
                    ("title" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [5670 5694])
                    ("comm" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5697 5719])
                    ("printhelp" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5722 5778])
                    ("changedmethod" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5722 5778])
                    ("alreadyprinted" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5722 5778])
                    ("object" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5781 5805])
                    ("options" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5808 5833]))                  
                :type "struct")
                nil [5543 5853])
            ("PetscOptionItems" type
               (:typedef ("_p_PetscOptionItems" type (:type "struct") nil nil)
                :type "typedef")
                nil [5543 5853])
            ("PetscOptionsBegin" variable (:constant-flag t) nil [8706 8723])
            ("PetscObjectOptionsBegin" variable (:constant-flag t) nil [10369 10392])
            ("PetscOptionsEnd" variable (:constant-flag t) nil [11993 12008])
            ("PetscOptionsBegin_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12150 12169])
                    ("" variable (:type ("MPI_Comm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12169 12178])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [12178 12190])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [12191 12203])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [12204 12216]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12109 12218])
            ("PetscObjectOptionsBegin_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12279 12298])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12298 12310]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12232 12311])
            ("PetscOptionsEnd_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12364 12383]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12325 12384])
            ("PetscOptionsHead" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12430 12449])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [12449 12461]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [12398 12463])
            ("PetscOptionsTail" variable (:constant-flag t) nil [13799 13815])
            ("PetscOptionsEnum" variable (:constant-flag t) nil [13892 13908])
            ("PetscOptionsInt" variable (:constant-flag t) nil [13991 14006])
            ("PetscOptionsReal" variable (:constant-flag t) nil [14084 14100])
            ("PetscOptionsScalar" variable (:constant-flag t) nil [14179 14197])
            ("PetscOptionsName" variable (:constant-flag t) nil [14278 14294])
            ("PetscOptionsString" variable (:constant-flag t) nil [14365 14383])
            ("PetscOptionsBool" variable (:constant-flag t) nil [14468 14484])
            ("PetscOptionsBoolGroupBegin" variable (:constant-flag t) nil [14563 14589])
            ("PetscOptionsBoolGroup" variable (:constant-flag t) nil [14670 14691])
            ("PetscOptionsBoolGroupEnd" variable (:constant-flag t) nil [14767 14791])
            ("PetscOptionsFList" variable (:constant-flag t) nil [14870 14887])
            ("PetscOptionsEList" variable (:constant-flag t) nil [14975 14992])
            ("PetscOptionsRealArray" variable (:constant-flag t) nil [15080 15101])
            ("PetscOptionsScalarArray" variable (:constant-flag t) nil [15185 15208])
            ("PetscOptionsIntArray" variable (:constant-flag t) nil [15294 15314])
            ("PetscOptionsStringArray" variable (:constant-flag t) nil [15397 15420])
            ("PetscOptionsBoolArray" variable (:constant-flag t) nil [15506 15527])
            ("PetscOptionsEnumArray" variable (:constant-flag t) nil [15611 15632])
            ("PetscOptionsEnum_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15767 15785])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15785 15797])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15798 15810])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15811 15823])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15824 15843])
                    ("" variable (:type ("PetscEnum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15843 15853])
                    ("" variable
                       (:pointer 1
                        :type ("PetscEnum" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15853 15864])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15864 15876]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15727 15877])
            ("PetscOptionsInt_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15930 15948])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15948 15960])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15961 15973])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15974 15986])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15987 15996])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15996 16006])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16006 16018]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [15891 16019])
            ("PetscOptionsReal_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16073 16091])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16091 16103])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16104 16116])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16117 16129])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16130 16140])
                    ("" variable
                       (:pointer 1
                        :type ("PetscReal" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16140 16151])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16151 16163]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16033 16164])
            ("PetscOptionsScalar_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16220 16238])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16238 16250])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16251 16263])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16264 16276])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16277 16289])
                    ("" variable
                       (:pointer 1
                        :type ("PetscScalar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16289 16302])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16302 16314]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16178 16315])
            ("PetscOptionsName_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16369 16387])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16387 16399])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16400 16412])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16413 16425])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16426 16438]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16329 16439])
            ("PetscOptionsString_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16495 16513])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16513 16525])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16526 16538])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16539 16551])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16552 16564])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [16565 16571])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16571 16578])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16578 16590]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16453 16591])
            ("PetscOptionsBool_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16645 16663])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16663 16675])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16676 16688])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16689 16701])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16702 16713])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16713 16725])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16725 16737]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16605 16738])
            ("PetscOptionsBoolGroupBegin_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16802 16820])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16820 16832])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16833 16845])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16846 16858])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16859 16871]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16752 16872])
            ("PetscOptionsBoolGroup_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16931 16949])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16949 16961])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16962 16974])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16975 16987])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16988 17000]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [16886 17001])
            ("PetscOptionsBoolGroupEnd_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17063 17081])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17081 17093])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17094 17106])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17107 17119])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17120 17132]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17015 17133])
            ("PetscOptionsFList_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17188 17206])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17206 17218])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17219 17231])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17232 17244])
                    ("" variable (:type ("PetscFunctionList" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17245 17263])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17263 17275])
                    ("" variable (:type "char") (reparse-symbol arg-sub-list) [17276 17282])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17283 17290])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17290 17302]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17147 17303])
            ("PetscOptionsEList_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17358 17376])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17376 17388])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17389 17401])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17402 17414])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17415 17433])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17433 17442])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17442 17454])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17455 17465])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17465 17477]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17317 17478])
            ("PetscOptionsRealArray_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17537 17555])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17555 17567])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17568 17580])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17581 17593])
                    ("" variable (:type ("PetscReal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17594 17605])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17606 17616])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17616 17628]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17492 17629])
            ("PetscOptionsScalarArray_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17690 17708])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17708 17720])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17721 17733])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17734 17746])
                    ("" variable (:type ("PetscScalar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17747 17760])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17761 17771])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17771 17783]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17643 17784])
            ("PetscOptionsIntArray_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17842 17860])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17860 17872])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17873 17885])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17886 17898])
                    ("" variable (:type ("PetscInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17899 17909])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17910 17920])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17920 17932]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17798 17933])
            ("PetscOptionsStringArray_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17994 18012])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [18012 18024])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [18025 18037])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [18038 18050])
                    ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [18051 18058])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18059 18069])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18069 18081]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [17947 18082])
            ("PetscOptionsBoolArray_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18141 18159])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [18159 18171])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [18172 18184])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [18185 18197])
                    ("" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18198 18210])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18211 18221])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18221 18233]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18096 18234])
            ("PetscOptionsEnumArray_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18293 18311])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [18311 18323])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [18324 18336])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [18337 18349])
                    ("" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [18350 18369])
                    ("" variable (:type ("PetscEnum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18369 18380])
                    ("" variable
                       (:pointer 1
                        :type ("PetscInt" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18381 18391])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18391 18403]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18248 18404])
            ("PetscOptionsSetFromOptions" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscOptions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18462 18475]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18420 18476])
            ("PetscOptionsSAWsDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [18529 18534]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18490 18535])
            ("PetscObjectAddOptionsHandler" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18594 18606])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("PetscOptionItems" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18625 18643])
                            ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18643 18655])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [18655 18661]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18681 18693])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [18693 18699]))                          
                        :type ("PetscErrorCode" type (:type "class") nil nil))
                        nil nil)
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [18700 18706]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18550 18707])
            ("PetscObjectProcessOptionsHandlers" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscOptionItems" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18770 18788])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18788 18800]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18721 18801])
            ("PetscObjectDestroyOptionsHandlers" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18864 18876]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [18815 18877]))          
      :file "petscoptions.h"
      :pointmax 18886
      :fsize 18885
      :lastmodtime '(22329 14111 0 0)
      :unmatched-syntax '((symbol 18802 . 18814) (symbol 18708 . 18720) (symbol 18537 . 18549) (symbol 18477 . 18489) (symbol 18407 . 18419) (semantic-list 18378 . 18380) (semantic-list 18347 . 18349) (semantic-list 18334 . 18336) (semantic-list 18321 . 18323) (symbol 18235 . 18247) (semantic-list 18208 . 18210) (semantic-list 18195 . 18197) (semantic-list 18182 . 18184) (semantic-list 18169 . 18171) (symbol 18083 . 18095) (semantic-list 18056 . 18058) (semantic-list 18048 . 18050) (semantic-list 18035 . 18037) (semantic-list 18022 . 18024) (symbol 17934 . 17946) (semantic-list 17907 . 17909) (semantic-list 17896 . 17898) (semantic-list 17883 . 17885) (semantic-list 17870 . 17872) (symbol 17785 . 17797) (semantic-list 17758 . 17760) (semantic-list 17744 . 17746) (semantic-list 17731 . 17733) (semantic-list 17718 . 17720) (symbol 17630 . 17642) (semantic-list 17603 . 17605) (semantic-list 17591 . 17593) (semantic-list 17578 . 17580) (semantic-list 17565 . 17567) (symbol 17479 . 17491) (semantic-list 17452 . 17454) (semantic-list 17412 . 17414) (semantic-list 17399 . 17401) (semantic-list 17386 . 17388) (symbol 17304 . 17316) (semantic-list 17280 . 17282) (semantic-list 17273 . 17275) (semantic-list 17242 . 17244) (semantic-list 17229 . 17231) (semantic-list 17216 . 17218) (symbol 17134 . 17146) (semantic-list 17117 . 17119) (semantic-list 17104 . 17106) (semantic-list 17091 . 17093) (symbol 17002 . 17014) (semantic-list 16985 . 16987) (semantic-list 16972 . 16974) (semantic-list 16959 . 16961) (symbol 16873 . 16885) (semantic-list 16856 . 16858) (semantic-list 16843 . 16845) (semantic-list 16830 . 16832) (symbol 16739 . 16751) (semantic-list 16699 . 16701) (semantic-list 16686 . 16688) (semantic-list 16673 . 16675) (symbol 16592 . 16604) (semantic-list 16562 . 16564) (semantic-list 16549 . 16551) (semantic-list 16536 . 16538) (semantic-list 16523 . 16525) (symbol 16440 . 16452) (semantic-list 16423 . 16425) (semantic-list 16410 . 16412) (semantic-list 16397 . 16399) (symbol 16316 . 16328) (semantic-list 16274 . 16276) (semantic-list 16261 . 16263) (semantic-list 16248 . 16250) (symbol 16165 . 16177) (semantic-list 16127 . 16129) (semantic-list 16114 . 16116) (semantic-list 16101 . 16103) (symbol 16020 . 16032) (semantic-list 15984 . 15986) (semantic-list 15971 . 15973) (semantic-list 15958 . 15960) (symbol 15878 . 15890) (semantic-list 15821 . 15823) (semantic-list 15808 . 15810) (semantic-list 15795 . 15797) (symbol 15714 . 15726) (semantic-list 12459 . 12461) (symbol 12385 . 12397) (symbol 12312 . 12324) (symbol 12219 . 12231) (semantic-list 12214 . 12216) (semantic-list 12201 . 12203) (semantic-list 12188 . 12190) (symbol 12096 . 12108) (symbol 4229 . 4241) (semantic-list 4215 . 4217) (semantic-list 4201 . 4203) (symbol 4136 . 4148) (symbol 4075 . 4087) (semantic-list 4026 . 4028) (semantic-list 4012 . 4014) (symbol 3932 . 3944) (semantic-list 3915 . 3917) (symbol 3852 . 3864) (semantic-list 3836 . 3838) (symbol 3773 . 3785) (semantic-list 3758 . 3760) (symbol 3696 . 3708) (semantic-list 3671 . 3673) (semantic-list 3664 . 3666) (symbol 3598 . 3610) (semantic-list 3592 . 3594) (symbol 3527 . 3539) (semantic-list 3522 . 3524) (semantic-list 3509 . 3511) (symbol 3439 . 3451) (symbol 3373 . 3385) (semantic-list 3368 . 3370) (symbol 3294 . 3306) (symbol 3233 . 3245) (symbol 3171 . 3183) (semantic-list 3166 . 3168) (symbol 3090 . 3102) (semantic-list 2949 . 2951) (symbol 2866 . 2878) (semantic-list 2861 . 2863) (symbol 2777 . 2789) (symbol 2716 . 2728) (symbol 2643 . 2655) (symbol 2583 . 2595) (symbol 2499 . 2511) (symbol 2426 . 2438) (semantic-list 2420 . 2422) (symbol 2346 . 2358) (semantic-list 2341 . 2343) (semantic-list 2328 . 2330) (symbol 2256 . 2268) (semantic-list 2251 . 2253) (semantic-list 2238 . 2240) (symbol 2166 . 2178) (semantic-list 2148 . 2150) (symbol 2089 . 2101) (semantic-list 2032 . 2034) (semantic-list 2019 . 2021) (symbol 1943 . 1955) (semantic-list 1897 . 1899) (semantic-list 1884 . 1886) (symbol 1813 . 1825) (semantic-list 1759 . 1761) (semantic-list 1746 . 1748) (symbol 1674 . 1686) (semantic-list 1647 . 1649) (semantic-list 1639 . 1641) (semantic-list 1626 . 1628) (symbol 1548 . 1560) (semantic-list 1524 . 1526) (semantic-list 1517 . 1519) (semantic-list 1504 . 1506) (symbol 1431 . 1443) (semantic-list 1403 . 1405) (semantic-list 1390 . 1392) (semantic-list 1377 . 1379) (symbol 1301 . 1313) (semantic-list 1273 . 1275) (semantic-list 1259 . 1261) (semantic-list 1246 . 1248) (symbol 1168 . 1180) (semantic-list 1140 . 1142) (semantic-list 1128 . 1130) (semantic-list 1115 . 1117) (symbol 1039 . 1051) (semantic-list 1011 . 1013) (semantic-list 1000 . 1002) (semantic-list 987 . 989) (symbol 912 . 924) (semantic-list 881 . 883) (semantic-list 868 . 870) (symbol 795 . 807) (semantic-list 766 . 768) (semantic-list 753 . 755) (symbol 682 . 694) (semantic-list 652 . 654) (semantic-list 638 . 640) (symbol 567 . 579) (semantic-list 539 . 541) (semantic-list 525 . 527) (symbol 455 . 467) (semantic-list 438 . 440) (semantic-list 425 . 427) (symbol 354 . 366) (symbol 288 . 300) (symbol 224 . 236))
      :lexical-table 
        '(("PetscOptionsReal" (spp-arg-list ("a" "b" "c" "d" "e" "f") 14100 . 14113) . ((symbol "PetscOptionsReal_Private" 14114 . 14138) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f)" 14138 . 14170)))
          ("PetscOptionsString" (spp-arg-list ("a" "b" "c" "d" "e" "f" "g") 14383 . 14398) . ((symbol "PetscOptionsString_Private" 14399 . 14425) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f,g)" 14425 . 14459)))
          ("PetscOptionsName" (spp-arg-list ("a" "b" "c" "d") 14294 . 14303) . ((symbol "PetscOptionsName_Private" 14304 . 14328) (semantic-list "(PetscOptionsObject,a,b,c,d)" 14328 . 14356)))
          ("PetscOptionsRealArray" (spp-arg-list ("a" "b" "c" "d" "e" "f") 15101 . 15114) . ((symbol "PetscOptionsRealArray_Private" 15115 . 15144) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f)" 15144 . 15176)))
          ("PetscOptionsTail" (spp-arg-list nil 13815 . 13817) . 
              ((number "0" 13818 . 13819) (punctuation ";" 13819 . 13820) (semantic-list "{if (PetscOptionsObject->count != 1) PetscFunctionReturn(0);}" 13821 . 13882)))
          ("PetscOptionsBoolGroupBegin" (spp-arg-list ("a" "b" "c" "d") 14589 . 14598) . ((symbol "PetscOptionsBoolGroupBegin_Private" 14599 . 14633) (semantic-list "(PetscOptionsObject,a,b,c,d)" 14633 . 14661)))
          ("PetscOptionsEList" (spp-arg-list ("a" "b" "c" "d" "e" "f" "g" "h") 14992 . 15009) . ((symbol "PetscOptionsEList_Private" 15010 . 15035) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f,g,h)" 15035 . 15071)))
          ("PetscOptionsIntArray" (spp-arg-list ("a" "b" "c" "d" "e" "f") 15314 . 15327) . ((symbol "PetscOptionsIntArray_Private" 15328 . 15356) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f)" 15356 . 15388)))
          ("PetscOptionsBegin" (spp-arg-list ("comm" "prefix" "mess" "sec") 8723 . 8745) . 
              ((number "0" 8746 . 8747) (punctuation ";" 8747 . 8748) (DO "do" 8749 . 8751) (open-paren "{" 8752 . 8753) (symbol "PetscOptionItems" 8768 . 8784) (symbol "PetscOptionsObjectBase" 8785 . 8807) (punctuation ";" 8807 . 8808) (symbol "PetscOptionItems" 8823 . 8839) (punctuation "*" 8840 . 8841) (symbol "PetscOptionsObject" 8841 . 8859) (punctuation "=" 8860 . 8861) (punctuation "&" 8862 . 8863) (symbol "PetscOptionsObjectBase" 8863 . 8885) (punctuation ";" 8885 . 8886) (symbol "PetscMemzero" 8902 . 8914) (semantic-list "(PetscOptionsObject,sizeof(PetscOptionItems))" 8914 . 8959) (punctuation ";" 8959 . 8960) (FOR "for" 8976 . 8979) (semantic-list "(PetscOptionsObject->count=(PetscOptionsPublish?-1:1); PetscOptionsObject->count<2; PetscOptionsObject->count++)" 8980 . 9092) (open-paren "{" 9093 . 9094) (symbol "PetscErrorCode" 9109 . 9123) (symbol "_5_ierr" 9124 . 9131) (punctuation "=" 9132 . 9133) (symbol "PetscOptionsBegin_Private" 9134 . 9159) (semantic-list "(PetscOptionsObject,comm,prefix,mess,sec)" 9159 . 9200) (punctuation ";" 9200 . 9201) (symbol "CHKERRQ" 9201 . 9208) (semantic-list "(_5_ierr)" 9208 . 9217) (punctuation ";" 9217 . 9218)))
          ("PetscOptionsBoolGroupEnd" (spp-arg-list ("a" "b" "c" "d") 14791 . 14800) . ((symbol "PetscOptionsBoolGroupEnd_Private" 14801 . 14833) (semantic-list "(PetscOptionsObject,a,b,c,d)" 14833 . 14861)))
          ("PetscOptionsEnd" (spp-arg-list nil 12008 . 12010) . 
              ((symbol "_5_ierr" 12011 . 12018) (punctuation "=" 12019 . 12020) (symbol "PetscOptionsEnd_Private" 12021 . 12044) (semantic-list "(PetscOptionsObject)" 12044 . 12064) (punctuation ";" 12064 . 12065) (symbol "CHKERRQ" 12065 . 12072) (semantic-list "(_5_ierr)" 12072 . 12081) (punctuation ";" 12081 . 12082) (close-paren "}" 12082 . 12083) (close-paren "}" 12083 . 12084) (WHILE "while" 12085 . 12090) (semantic-list "(0)" 12091 . 12094)))
          ("PetscOptionsInt" (spp-arg-list ("a" "b" "c" "d" "e" "f") 14006 . 14019) . ((symbol "PetscOptionsInt_Private" 14020 . 14043) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f)" 14043 . 14075)))
          ("PetscOptionsFList" (spp-arg-list ("a" "b" "c" "d" "e" "f" "g" "h") 14887 . 14904) . ((symbol "PetscOptionsFList_Private" 14905 . 14930) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f,g,h)" 14930 . 14966)))
          ("PetscOptionsBoolArray" (spp-arg-list ("a" "b" "c" "d" "e" "f") 15527 . 15540) . ((symbol "PetscOptionsBoolArray_Private" 15541 . 15570) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f)" 15570 . 15602)))
          ("PetscOptionsEnumArray" (spp-arg-list ("a" "b" "c" "d" "e" "f" "g") 15632 . 15647) . ((symbol "PetscOptionsEnumArray_Private" 15648 . 15677) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f,g)" 15677 . 15711)))
          ("PetscObjectOptionsBegin" (spp-arg-list ("obj") 10392 . 10397) . 
              ((number "0" 10398 . 10399) (punctuation ";" 10399 . 10400) (DO "do" 10401 . 10403) (open-paren "{" 10404 . 10405) (symbol "PetscOptionItems" 10448 . 10464) (symbol "PetscOptionsObjectBase" 10465 . 10487) (punctuation ";" 10487 . 10488) (symbol "PetscOptionItems" 10503 . 10519) (punctuation "*" 10520 . 10521) (symbol "PetscOptionsObject" 10521 . 10539) (punctuation "=" 10540 . 10541) (punctuation "&" 10542 . 10543) (symbol "PetscOptionsObjectBase" 10543 . 10565) (punctuation ";" 10565 . 10566) (symbol "PetscOptionsObject" 10582 . 10600) (punctuation "-" 10600 . 10601) (punctuation ">" 10601 . 10602) (symbol "options" 10602 . 10609) (punctuation "=" 10610 . 10611) (semantic-list "((PetscObject)obj)" 10612 . 10630) (punctuation "-" 10630 . 10631) (punctuation ">" 10631 . 10632) (symbol "options" 10632 . 10639) (punctuation ";" 10639 . 10640) (FOR "for" 10656 . 10659) (semantic-list "(PetscOptionsObject->count=(PetscOptionsPublish?-1:1); PetscOptionsObject->count<2; PetscOptionsObject->count++)" 10660 . 10772) (open-paren "{" 10773 . 10774) (symbol "PetscErrorCode" 10789 . 10803) (symbol "_5_ierr" 10804 . 10811) (punctuation "=" 10812 . 10813) (symbol "PetscObjectOptionsBegin_Private" 10814 . 10845) (semantic-list "(PetscOptionsObject,obj)" 10845 . 10869) (punctuation ";" 10869 . 10870) (symbol "CHKERRQ" 10870 . 10877) (semantic-list "(_5_ierr)" 10877 . 10886) (punctuation ";" 10886 . 10887)))
          ("__PETSCOPTIONS_H")
          ("PetscOptionsBoolGroup" (spp-arg-list ("a" "b" "c" "d") 14691 . 14700) . ((symbol "PetscOptionsBoolGroup_Private" 14701 . 14730) (semantic-list "(PetscOptionsObject,a,b,c,d)" 14730 . 14758)))
          ("PetscOptionsStringArray" (spp-arg-list ("a" "b" "c" "d" "e" "f") 15420 . 15433) . ((symbol "PetscOptionsStringArray_Private" 15434 . 15465) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f)" 15465 . 15497)))
          ("PetscOptionsScalar" (spp-arg-list ("a" "b" "c" "d" "e" "f") 14197 . 14210) . ((symbol "PetscOptionsScalar_Private" 14211 . 14237) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f)" 14237 . 14269)))
          ("PetscOptionsEnum" (spp-arg-list ("a" "b" "c" "d" "e" "f" "g") 13908 . 13923) . ((symbol "PetscOptionsEnum_Private" 13924 . 13948) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f,g)" 13948 . 13982)))
          ("PetscOptionsBool" (spp-arg-list ("a" "b" "c" "d" "e" "f") 14484 . 14497) . ((symbol "PetscOptionsBool_Private" 14498 . 14522) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f)" 14522 . 14554)))
          ("PetscOptionsScalarArray" (spp-arg-list ("a" "b" "c" "d" "e" "f") 15208 . 15221) . ((symbol "PetscOptionsScalarArray_Private" 15222 . 15253) (semantic-list "(PetscOptionsObject,a,b,c,d,e,f)" 15253 . 15285)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("__PetscLog_H" variable (:constant-flag t) nil [81 93])
            ("petscsys.h" include (:system-flag t) nil [94 115])
            ("PetscLogEvent" type
               (:typedef ("int")
                :type "typedef")
                nil [359 385])
            ("PetscLogStage" type
               (:typedef ("int")
                :type "typedef")
                nil [605 631])
            ("PETSC_EVENT" variable (:constant-flag t) nil [641 652])
            ("PETSC_LARGEST_EVENT" variable (:type ("PetscLogEvent" type (:type "class") nil nil)) nil [675 709])
            ("petsc_TotalFlops" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) nil [750 782])
            ("petsc_tmp_flops" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) nil [796 827])
            ("PetscInfo_Private" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [942 954])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [955 961])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [961 973])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [974 978]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [909 979])
            ("PetscInfo" variable (:constant-flag t) nil [1810 1819])
            ("PetscInfo1" variable (:constant-flag t) nil [1857 1867])
            ("PetscInfo2" variable (:constant-flag t) nil [1904 1914])
            ("PetscInfo3" variable (:constant-flag t) nil [1951 1961])
            ("PetscInfo4" variable (:constant-flag t) nil [1998 2008])
            ("PetscInfo5" variable (:constant-flag t) nil [2045 2055])
            ("PetscInfo6" variable (:constant-flag t) nil [2092 2102])
            ("PetscInfo7" variable (:constant-flag t) nil [2139 2149])
            ("PetscInfoDeactivateClass" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscClassId" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2238 2251]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2198 2252])
            ("PetscInfoActivateClass" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscClassId" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2304 2317]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [2266 2318])
            ("PetscLogPrintInfo" variable (:type ("PetscBool" type (:type "class") nil nil)) nil [2332 2360])
            ("PetscIntStack" type
               (:typedef ("_n_PetscIntStack" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [2741 2788])
            ("PetscClassRegInfo" type
               (:typedef ("" type
                     (:members 
                        ( ("name" variable
                             (:pointer 1
                              :type "char")
                              (reparse-symbol classsubparts) [3195 3216])
                          ("classid" variable (:type ("PetscClassId" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3242 3265]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [3175 3327])
            ("PetscClassPerfInfo" type
               (:typedef ("" type
                     (:members 
                        ( ("id" variable (:type ("PetscClassId" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3348 3366])
                          ("creations" variable (:type "int") (reparse-symbol classsubparts) [3420 3445])
                          ("destructions" variable (:type "int") (reparse-symbol classsubparts) [3501 3529])
                          ("mem" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3584 3603])
                          ("descMem" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3673 3696]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [3329 3788])
            ("PetscClassRegLog" type
               (:typedef ("_n_PetscClassRegLog" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [3790 3843])
            ("_n_PetscClassRegLog" type
               (:members 
                  ( ("numClasses" variable (:type "int") (reparse-symbol classsubparts) [3875 3904])
                    ("maxClasses" variable (:type "int") (reparse-symbol classsubparts) [3946 3975])
                    ("classInfo" variable
                       (:pointer 1
                        :type ("PetscClassRegInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4014 4043]))                  
                :type "struct")
                nil [3844 4126])
            ("PetscClassPerfLog" type
               (:typedef ("_n_PetscClassPerfLog" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [4128 4183])
            ("_n_PetscClassPerfLog" type
               (:members 
                  ( ("numClasses" variable (:type "int") (reparse-symbol classsubparts) [4216 4246])
                    ("maxClasses" variable (:type "int") (reparse-symbol classsubparts) [4285 4315])
                    ("classInfo" variable
                       (:pointer 1
                        :type ("PetscClassPerfInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4354 4384]))                  
                :type "struct")
                nil [4184 4467])
            ("PetscEventRegInfo" type
               (:typedef ("" type
                     (:members 
                        ( ("name" variable
                             (:pointer 1
                              :type "char")
                              (reparse-symbol classsubparts) [5014 5033])
                          ("classid" variable (:type ("PetscClassId" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5073 5094]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [4995 5294])
            ("PetscEventPerfInfo" type
               (:typedef ("" type
                     (:members 
                        ( ("id" variable (:type "int") (reparse-symbol classsubparts) [5315 5333])
                          ("active" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5388 5410])
                          ("visible" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5455 5478])
                          ("depth" variable (:type "int") (reparse-symbol classsubparts) [5527 5548])
                          ("count" variable (:type "int") (reparse-symbol classsubparts) [5601 5622])
                          ("flops" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5683 5721])
                          ("flops2" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5683 5721])
                          ("flopsTmp" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5683 5721])
                          ("time" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5771 5807])
                          ("time2" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5771 5807])
                          ("timeTmp" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5771 5807])
                          ("numMessages" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5859 5886])
                          ("messageLength" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5934 5963])
                          ("numReductions" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6012 6041]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [5296 6108])
            ("PetscEventRegLog" type
               (:typedef ("_n_PetscEventRegLog" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [6110 6163])
            ("_n_PetscEventRegLog" type
               (:members 
                  ( ("numEvents" variable (:type "int") (reparse-symbol classsubparts) [6195 6223])
                    ("maxEvents" variable (:type "int") (reparse-symbol classsubparts) [6265 6293])
                    ("eventInfo" variable
                       (:pointer 1
                        :type ("PetscEventRegInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6332 6361]))                  
                :type "struct")
                nil [6164 6414])
            ("PetscEventPerfLog" type
               (:typedef ("_n_PetscEventPerfLog" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [6416 6471])
            ("_n_PetscEventPerfLog" type
               (:members 
                  ( ("numEvents" variable (:type "int") (reparse-symbol classsubparts) [6504 6533])
                    ("maxEvents" variable (:type "int") (reparse-symbol classsubparts) [6572 6601])
                    ("eventInfo" variable
                       (:pointer 1
                        :type ("PetscEventPerfInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6640 6670]))                  
                :type "struct")
                nil [6472 6722])
            ("_PetscStageInfo" type
               (:members 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [7071 7096])
                    ("used" variable (:type ("PetscBool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7124 7148])
                    ("perfInfo" variable (:type ("PetscEventPerfInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7201 7229])
                    ("eventLog" variable (:type ("PetscEventPerfLog" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7273 7301])
                    ("classLog" variable (:type ("PetscClassPerfLog" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7348 7376]))                  
                :type "struct")
                nil [7036 7438])
            ("PetscStageInfo" type
               (:typedef ("_PetscStageInfo" type (:type "struct") nil nil)
                :type "typedef")
                nil [7036 7438])
            ("PetscStageLog" type
               (:typedef ("_n_PetscStageLog" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [7440 7487])
            ("_n_PetscStageLog" type
               (:members 
                  ( ("numStages" variable (:type "int") (reparse-symbol classsubparts) [7516 7543])
                    ("maxStages" variable (:type "int") (reparse-symbol classsubparts) [7586 7613])
                    ("stack" variable (:type ("PetscIntStack" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7653 7676])
                    ("curStage" variable (:type "int") (reparse-symbol classsubparts) [7719 7745])
                    ("stageInfo" variable
                       (:pointer 1
                        :type ("PetscStageInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7831 7859])
                    ("eventLog" variable (:type ("PetscEventRegLog" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7900 7926])
                    ("classLog" variable (:type ("PetscClassRegLog" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7960 7986]))                  
                :type "struct")
                nil [7488 8021])
            ("PetscLogGetStageLog" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscStageLog" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8071 8086]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8036 8087])
            ("PetscStageLogGetCurrent" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscStageLog" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8140 8154])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [8154 8159]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8101 8160])
            ("PetscStageLogGetEventPerfLog" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscStageLog" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8218 8232])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [8232 8236])
                    ("" variable
                       (:pointer 1
                        :type ("PetscEventPerfLog" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8236 8255]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8174 8256])
            ("PetscLogObjectParent" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8307 8319])
                    ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8319 8331]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8271 8332])
            ("PetscLogObjectMemory" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8382 8394])
                    ("" variable (:type ("PetscLogDouble" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8394 8409]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [8346 8410])
            ("PetscLogFlops" variable (:constant-flag t) nil [20801 20814])
            ("PetscLogEventActivate" variable (:constant-flag t) nil [20829 20850])
            ("PetscLogEventDeactivate" variable (:constant-flag t) nil [20866 20889])
            ("PetscLogEventActivateClass" variable (:constant-flag t) nil [20904 20930])
            ("PetscLogEventDeactivateClass" variable (:constant-flag t) nil [20946 20974])
            ("PetscLogEventSetActiveAll" variable (:constant-flag t) nil [20988 21013])
            ("PetscLogPLB" variable (:constant-flag t) nil [21031 21042])
            ("PetscLogPLE" variable (:constant-flag t) nil [21076 21087])
            ("PetscLogPHC" variable (:constant-flag t) nil [21121 21132])
            ("PetscLogPHD" variable (:constant-flag t) nil [21166 21177])
            ("PetscGetFlops" variable (:constant-flag t) nil [21211 21224])
            ("PetscLogEventBegin" variable (:constant-flag t) nil [21266 21284])
            ("PetscLogEventEnd" variable (:constant-flag t) nil [21312 21328])
            ("PetscLogEventBarrierBegin" variable (:constant-flag t) nil [21358 21383])
            ("PetscLogEventBarrierEnd" variable (:constant-flag t) nil [21412 21435])
            ("PetscLogObjectParents" variable (:constant-flag t) nil [21466 21487])
            ("PetscLogObjectCreate" variable (:constant-flag t) nil [21512 21532])
            ("PetscLogObjectDestroy" variable (:constant-flag t) nil [21558 21579])
            ("PetscLogDestroy" variable (:constant-flag t) nil [21604 21619])
            ("PetscLogStagePush" variable (:constant-flag t) nil [21650 21667])
            ("PetscLogStagePop" variable (:constant-flag t) nil [21696 21712])
            ("PetscLogStageRegister" variable (:constant-flag t) nil [21742 21763])
            ("PetscLogStagePrint" variable (:constant-flag t) nil [21788 21806])
            ("PetscLogView" variable (:constant-flag t) nil [21834 21846])
            ("PetscLogViewFromOptions" variable (:constant-flag t) nil [21880 21903])
            ("PetscLogDefaultBegin" variable (:constant-flag t) nil [21926 21946])
            ("PetscLogTraceBegin" variable (:constant-flag t) nil [21979 21997])
            ("PetscLogSet" variable (:constant-flag t) nil [22025 22036])
            ("PetscLogAllBegin" variable (:constant-flag t) nil [22071 22087])
            ("PetscLogNestedBegin" variable (:constant-flag t) nil [22117 22136])
            ("PetscLogDump" variable (:constant-flag t) nil [22163 22175])
            ("PetscLogEventRegister" variable (:constant-flag t) nil [22209 22230])
            ("PetscLogObjects" variable (:constant-flag t) nil [22255 22270])
            ("PetscLogActions" variable (:constant-flag t) nil [22301 22316])
            ("PetscLogObjectState" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscObject" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22387 22399])
                    ("" variable
                       (:constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [22399 22411])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [22412 22416]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [22352 22417])
            ("MPI_Startall_irecv" variable (:constant-flag t) nil [22490 22508])
            ("MPI_Startall_isend" variable (:constant-flag t) nil [22570 22588])
            ("MPI_Start_isend" variable (:constant-flag t) nil [22650 22665])
            ("PetscLogStageGetId" variable (:constant-flag t) nil [22710 22728])
            ("PetscLogStageSetActive" variable (:constant-flag t) nil [22774 22796])
            ("PetscLogStageGetActive" variable (:constant-flag t) nil [22829 22851])
            ("PetscLogStageGetVisible" variable (:constant-flag t) nil [22884 22907])
            ("PetscLogStageSetVisible" variable (:constant-flag t) nil [22939 22962])
            ("PetscIntStackCreate" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PetscIntStack" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23065 23081]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23030 23082])
            ("PetscIntStackDestroy" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscIntStack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23132 23146]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23096 23147])
            ("PetscIntStackPush" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscIntStack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23194 23208])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [23209 23213]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23161 23214])
            ("PetscIntStackPop" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscIntStack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23260 23274])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [23275 23281]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23228 23282])
            ("PetscIntStackTop" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscIntStack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23328 23342])
                    ("" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [23343 23349]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23296 23350])
            ("PetscIntStackEmpty" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("PetscIntStack" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23398 23412])
                    ("" variable
                       (:pointer 1
                        :type ("PetscBool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23413 23426]))                  
                :type ("PetscErrorCode" type (:type "class") nil nil))
                nil [23364 23427])
            ("PetscPreLoadBegin" variable (:constant-flag t) nil [23437 23454])
            ("PetscPreLoadEnd" variable (:constant-flag t) nil [24378 24393])
            ("PetscPreLoadStage" variable (:constant-flag t) nil [24512 24529])
            ("PetscPreLoadingUsed" variable (:type ("PetscBool" type (:type "class") nil nil)) nil [25262 25292])
            ("PetscPreLoadingOn" variable (:type ("PetscBool" type (:type "class") nil nil)) nil [25357 25385])
            ("__FUNCT__" variable (:constant-flag t) nil [25548 25557]))          
      :file "petsclog.h"
      :pointmax 25591
      :fsize 25590
      :lastmodtime '(22985 35580 0 0)
      :unmatched-syntax '((symbol 25344 . 25356) (symbol 25249 . 25261) (symbol 23351 . 23363) (symbol 23283 . 23295) (symbol 23215 . 23227) (symbol 23148 . 23160) (symbol 23083 . 23095) (symbol 23017 . 23029) (semantic-list 22409 . 22411) (symbol 22339 . 22351) (symbol 8333 . 8345) (symbol 8258 . 8270) (symbol 8161 . 8173) (symbol 8088 . 8100) (symbol 8023 . 8035) (symbol 2319 . 2331) (symbol 2253 . 2265) (symbol 2185 . 2197) (semantic-list 971 . 973) (semantic-list 952 . 954) (symbol 896 . 908) (symbol 783 . 795) (symbol 737 . 749) (symbol 662 . 674))
      :lexical-table 
        '(("PetscInfo7" (spp-arg-list ("A" "S" "a1" "a2" "a3" "a4" "a5" "a6" "a7") 2149 . 2175) . ((number "0" 2176 . 2177)))
          ("PetscLogEventActivateClass" (spp-arg-list ("a") 20930 . 20933) . ((number "0" 20936 . 20937)))
          ("PetscLogPHC" . ((number "0" 21156 . 21157)))
          ("PetscLogObjectParents" (spp-arg-list ("p" "n" "c") 21487 . 21494) . ((number "0" 21502 . 21503)))
          ("PetscLogDestroy" (spp-arg-list nil 21619 . 21621) . ((number "0" 21640 . 21641)))
          ("PetscLogActions" (spp-arg-list ("a") 22316 . 22319) . ((number "0" 22337 . 22338)))
          ("PetscLogPLE" . ((number "0" 21111 . 21112)))
          ("PetscLogPHD" . ((number "0" 21201 . 21202)))
          ("PetscLogEventBegin" (spp-arg-list ("e" "o1" "o2" "o3" "o4") 21284 . 21299) . ((number "0" 21302 . 21303)))
          ("PetscPreLoadEnd" (spp-arg-list nil 24393 . 24395) . 
              ((symbol "_3_ierr" 24402 . 24409) (punctuation "=" 24410 . 24411) (symbol "PetscLogStagePop" 24412 . 24428) (semantic-list "()" 24428 . 24430) (punctuation ";" 24430 . 24431) (symbol "CHKERRQ" 24431 . 24438) (semantic-list "(_3_ierr)" 24438 . 24447) (punctuation ";" 24447 . 24448) (symbol "PetscPreLoading" 24454 . 24469) (punctuation "=" 24470 . 24471) (symbol "PETSC_FALSE" 24472 . 24483) (punctuation ";" 24483 . 24484) (close-paren "}" 24488 . 24489) (close-paren "}" 24491 . 24492) (WHILE "while" 24493 . 24498) (semantic-list "(0)" 24499 . 24502)))
          ("PetscLogStagePrint" (spp-arg-list ("a" "flg") 21806 . 21813) . ((number "0" 21824 . 21825)))
          ("MPI_Startall_irecv" (spp-arg-list ("count" "number" "requests") 22508 . 22531) . ((symbol "MPI_Startall" 22532 . 22544) (semantic-list "(number,requests)" 22544 . 22561)))
          ("PetscLogStageSetVisible" (spp-arg-list ("a" "b") 22962 . 22967) . ((number "0" 22984 . 22985)))
          ("PetscLogStagePop" (spp-arg-list nil 21712 . 21714) . ((number "0" 21732 . 21733)))
          ("PetscLogStageGetVisible" (spp-arg-list ("a" "b") 22907 . 22912) . ((number "0" 22929 . 22930)))
          ("PetscLogObjectDestroy" (spp-arg-list ("h") 21579 . 21582) . ((number "0" 21594 . 21595)))
          ("PetscLogView" (spp-arg-list ("viewer") 21846 . 21854) . ((number "0" 21870 . 21871)))
          ("PetscLogTraceBegin" (spp-arg-list ("file") 21997 . 22003) . ((number "0" 22015 . 22016)))
          ("PetscLogStageGetActive" (spp-arg-list ("a" "b") 22851 . 22856) . ((number "0" 22874 . 22875)))
          ("PetscLogEventActivate" (spp-arg-list ("a") 20850 . 20853) . ((number "0" 20856 . 20857)))
          ("MPI_Startall_isend" (spp-arg-list ("count" "number" "requests") 22588 . 22611) . ((symbol "MPI_Startall" 22612 . 22624) (semantic-list "(number,requests)" 22624 . 22641)))
          ("PetscLogEventDeactivate" (spp-arg-list ("a") 20889 . 20892) . ((number "0" 20893 . 20894)))
          ("PetscLogEventSetActiveAll" (spp-arg-list ("a" "b") 21013 . 21018) . ((number "0" 21020 . 21021)))
          ("PetscLogNestedBegin" (spp-arg-list nil 22136 . 22138) . ((number "0" 22153 . 22154)))
          ("MPI_Start_isend" (spp-arg-list ("count" "requests") 22665 . 22681) . ((symbol "MPI_Start" 22682 . 22691) (semantic-list "(requests)" 22691 . 22701)))
          ("__FUNCT__" . ((string "\"User provided function\"" 25558 . 25582)))
          ("PetscInfo1" (spp-arg-list ("A" "S" "a1") 1867 . 1875) . ((number "0" 1894 . 1895)))
          ("PetscLogDefaultBegin" (spp-arg-list nil 21946 . 21948) . ((number "0" 21969 . 21970)))
          ("PetscLogSet" (spp-arg-list ("lb" "le") 22036 . 22043) . ((number "0" 22061 . 22062)))
          ("PetscLogDump" (spp-arg-list ("c") 22175 . 22178) . ((number "0" 22199 . 22200)))
          ("PetscInfo2" (spp-arg-list ("A" "S" "a1" "a2") 1914 . 1925) . ((number "0" 1941 . 1942)))
          ("PetscLogFlops" (spp-arg-list ("n") 20814 . 20817) . ((number "0" 20818 . 20819)))
          ("PetscLogEventDeactivateClass" (spp-arg-list ("a") 20974 . 20977) . ((number "0" 20978 . 20979)))
          ("PetscLogStagePush" (spp-arg-list ("a") 21667 . 21670) . ((number "0" 21686 . 21687)))
          ("PetscLogStageSetActive" (spp-arg-list ("a" "b") 22796 . 22801) . ((number "0" 22819 . 22820)))
          ("PetscPreLoadStage" (spp-arg-list ("name") 24529 . 24535) . 
              ((DO "do" 24536 . 24538) (semantic-list "{                                         \\
    _3_ierr = PetscLogStagePop();CHKERRQ(_3_ierr);                      \\
    if (PetscPreLoadIt>0) {                                                  \\
      _3_ierr = PetscLogStageGetId(name,&_stageNum);CHKERRQ(_3_ierr);   \\
    } else {                                                            \\
      _3_ierr = PetscLogStageRegister(name,&_stageNum);CHKERRQ(_3_ierr); \\
    }                                                                   \\
    _3_ierr = PetscLogStageSetActive(_stageNum,(PetscBool)(!PetscPreLoadMax || PetscPreLoadIt)); \\
    _3_ierr = PetscLogStagePush(_stageNum);CHKERRQ(_3_ierr);            \\
  }" 24539 . 25209) (WHILE "while" 25210 . 25215) (semantic-list "(0)" 25216 . 25219)))
          ("PetscInfo3" (spp-arg-list ("A" "S" "a1" "a2" "a3") 1961 . 1975) . ((number "0" 1988 . 1989)))
          ("PetscGetFlops" (spp-arg-list ("a") 21224 . 21227) . ((semantic-list "(*(a) = 0.0,0)" 21243 . 21257)))
          ("PetscLogViewFromOptions" (spp-arg-list nil 21903 . 21905) . ((number "0" 21916 . 21917)))
          ("__PetscLog_H")
          ("PETSC_EVENT" . ((number "1311311" 654 . 661)))
          ("PetscInfo4" (spp-arg-list ("A" "S" "a1" "a2" "a3" "a4") 2008 . 2025) . ((number "0" 2035 . 2036)))
          ("PetscLogEventBarrierBegin" (spp-arg-list ("e" "o1" "o2" "o3" "o4" "cm") 21383 . 21401) . ((number "0" 21402 . 21403)))
          ("PetscLogStageRegister" (spp-arg-list ("a" "b") 21763 . 21768) . ((number "0" 21778 . 21779)))
          ("PetscInfo5" (spp-arg-list ("A" "S" "a1" "a2" "a3" "a4" "a5") 2055 . 2075) . ((number "0" 2082 . 2083)))
          ("PetscLogPLB" . ((number "0" 21066 . 21067)))
          ("PetscLogObjectCreate" (spp-arg-list ("h") 21532 . 21535) . ((number "0" 21548 . 21549)))
          ("PetscLogObjects" (spp-arg-list ("a") 22270 . 22273) . ((number "0" 22291 . 22292)))
          ("PetscPreLoadBegin" (spp-arg-list ("flag" "name") 23454 . 23465) . 
              ((DO "do" 23468 . 23470) (open-paren "{" 23471 . 23472) (symbol "PetscBool" 23476 . 23485) (symbol "PetscPreLoading" 23491 . 23506) (punctuation "=" 23507 . 23508) (symbol "flag" 23509 . 23513) (punctuation ";" 23513 . 23514) (INT "int" 23518 . 23521) (symbol "PetscPreLoadMax" 23533 . 23548) (punctuation "," 23548 . 23549) (symbol "PetscPreLoadIt" 23549 . 23563) (punctuation ";" 23563 . 23564) (symbol "PetscLogStage" 23568 . 23581) (symbol "_stageNum" 23583 . 23592) (punctuation ";" 23592 . 23593) (symbol "PetscErrorCode" 23597 . 23611) (symbol "_3_ierr" 23612 . 23619) (punctuation ";" 23619 . 23620) (symbol "_3_ierr" 23625 . 23632) (punctuation "=" 23633 . 23634) (symbol "PetscOptionsGetBool" 23635 . 23654) (semantic-list "(NULL,NULL,\"-preload\",&PetscPreLoading,NULL)" 23654 . 23698) (punctuation ";" 23698 . 23699) (symbol "CHKERRQ" 23699 . 23706) (semantic-list "(_3_ierr)" 23706 . 23715) (punctuation ";" 23715 . 23716) (symbol "PetscPreLoadMax" 23721 . 23736) (punctuation "=" 23737 . 23738) (semantic-list "(int)" 23739 . 23744) (semantic-list "(PetscPreLoading)" 23744 . 23761) (punctuation ";" 23761 . 23762) (symbol "PetscPreLoadingUsed" 23766 . 23785) (punctuation "=" 23786 . 23787) (symbol "PetscPreLoading" 23788 . 23803) (punctuation "?" 23804 . 23805) (symbol "PETSC_TRUE" 23806 . 23816) (punctuation ":" 23817 . 23818) (symbol "PetscPreLoadingUsed" 23819 . 23838) (punctuation ";" 23838 . 23839) (FOR "for" 23843 . 23846) (semantic-list "(PetscPreLoadIt=0; PetscPreLoadIt<=PetscPreLoadMax; PetscPreLoadIt++)" 23847 . 23916) (open-paren "{" 23917 . 23918) (symbol "PetscPreLoadingOn" 23924 . 23941) (punctuation "=" 23942 . 23943) (symbol "PetscPreLoading" 23944 . 23959) (punctuation ";" 23959 . 23960) (symbol "_3_ierr" 23966 . 23973) (punctuation "=" 23974 . 23975) (symbol "PetscBarrier" 23976 . 23988) (semantic-list "(NULL)" 23988 . 23994) (punctuation ";" 23994 . 23995) (symbol "CHKERRQ" 23995 . 24002) (semantic-list "(_3_ierr)" 24002 . 24011) (punctuation ";" 24011 . 24012) (IF "if" 24018 . 24020) (semantic-list "(PetscPreLoadIt>0)" 24021 . 24039) (semantic-list "{\\
      _3_ierr = PetscLogStageGetId(name,&_stageNum);CHKERRQ(_3_ierr);\\
    }" 24040 . 24119) (ELSE "else" 24120 . 24124) (semantic-list "{\\
      _3_ierr = PetscLogStageRegister(name,&_stageNum);CHKERRQ(_3_ierr); \\
    }" 24125 . 24208) (symbol "_3_ierr" 24214 . 24221) (punctuation "=" 24222 . 24223) (symbol "PetscLogStageSetActive" 24224 . 24246) (semantic-list "(_stageNum,(PetscBool)(!PetscPreLoadMax || PetscPreLoadIt))" 24246 . 24305) (punctuation ";" 24305 . 24306) (symbol "_3_ierr" 24312 . 24319) (punctuation "=" 24320 . 24321) (symbol "PetscLogStagePush" 24322 . 24339) (semantic-list "(_stageNum)" 24339 . 24350) (punctuation ";" 24350 . 24351) (symbol "CHKERRQ" 24351 . 24358) (semantic-list "(_3_ierr)" 24358 . 24367) (punctuation ";" 24367 . 24368)))
          ("PetscInfo" (spp-arg-list ("A" "S") 1819 . 1824) . ((number "0" 1847 . 1848)))
          ("PetscInfo6" (spp-arg-list ("A" "S" "a1" "a2" "a3" "a4" "a5" "a6") 2102 . 2125) . ((number "0" 2129 . 2130)))
          ("PetscLogEventEnd" (spp-arg-list ("e" "o1" "o2" "o3" "o4") 21328 . 21343) . ((number "0" 21348 . 21349)))
          ("PetscLogEventBarrierEnd" (spp-arg-list ("e" "o1" "o2" "o3" "o4" "cm") 21435 . 21453) . ((number "0" 21456 . 21457)))
          ("PetscLogAllBegin" (spp-arg-list nil 22087 . 22089) . ((number "0" 22107 . 22108)))
          ("PetscLogEventRegister" (spp-arg-list ("a" "b" "c") 22230 . 22237) . ((number "0" 22245 . 22246)))
          ("PetscLogStageGetId" (spp-arg-list ("a" "b") 22728 . 22733) . ((semantic-list "(*(b)=0,0)" 22755 . 22765)))
          )
))
  :file "!usr!lib!petscdir!3.7.7!x86_64-linux-gnu-real!include!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
